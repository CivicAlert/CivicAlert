Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.google.gms.google.services)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.civicalertoriginal\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.civicalertoriginal\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.firebase.common.ktx)\r\n    implementation(libs.androidx.navigation.compose)\r\n    implementation(libs.firebase.database)\r\n    implementation(libs.firebase.auth)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ b/app/build.gradle.kts	(date 1719919297365)
@@ -54,7 +54,7 @@
     implementation(libs.androidx.core.ktx)
     implementation(libs.androidx.lifecycle.runtime.ktx)
     implementation(libs.androidx.activity.compose)
-    implementation(platform(libs.androidx.compose.bom))
+    implementation (platform("com.google.firebase:firebase-bom:31.0.2"))
     implementation(libs.androidx.ui)
     implementation(libs.androidx.ui.graphics)
     implementation(libs.androidx.ui.tooling.preview)
@@ -63,6 +63,10 @@
     implementation(libs.androidx.navigation.compose)
     implementation(libs.firebase.database)
     implementation(libs.firebase.auth)
+    implementation(libs.play.services.auth)
+    implementation(libs.androidx.foundation.android)
+    implementation(libs.androidx.material3.android)
+
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable { navController.navigate(\"userProfile\") }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(\r\n                        iconRes = R.drawable.info,\r\n                        label = \"Report Incident\",\r\n                        onClick = { navController.navigate(\"makeReports\") }\r\n                    )\r\n                    CardButton(\r\n                        iconRes = R.drawable.clipboard,\r\n                        label = \"View Reports\",\r\n                        onClick = { navController.navigate(\"Viewreports\") }\r\n                    )\r\n                }\r\n            }\r\n\r\n                item {\r\n                    Row(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth(),\r\n                        horizontalArrangement = Arrangement.SpaceAround\r\n                    ) {\r\n                        CardButton(\r\n                            iconRes = R.drawable.headphones,\r\n                            label = \"Help & Support\",\r\n                            onClick =  { navController.navigate(\"helpSupport\") })\r\n\r\n                        CardButton(\r\n                            iconRes = R.drawable.emergency_contacts,\r\n                            label = \"Emergency\\n Contacts\",\r\n                            onClick = { navController.navigate(\"emergencyContacts\") }\r\n                        )\r\n\r\n                    }\r\n                }\r\n\r\n                item {\r\n                    Row(\r\n                        modifier = Modifier.height(20.dp)\r\n                    ) {\r\n                        // Placeholder for spacing\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Preview\r\n    @Composable\r\n    fun DashboardPreview() {\r\n        val navController = rememberNavController()\r\n        Dashboard(navController)\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
--- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719919405958)
@@ -1,160 +1,0 @@
-package com.example.civicalertoriginal.Screens
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.Arrangement
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.Row
-import androidx.compose.foundation.layout.fillMaxHeight
-import androidx.compose.foundation.layout.fillMaxSize
-import androidx.compose.foundation.layout.fillMaxWidth
-import androidx.compose.foundation.layout.height
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.layout.size
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.foundation.lazy.items
-import androidx.compose.material3.Card
-import androidx.compose.material3.CardDefaults
-import androidx.compose.material3.ExperimentalMaterial3Api
-import androidx.compose.material3.Surface
-import androidx.compose.material3.Text
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.navigation.NavController
-import androidx.navigation.compose.rememberNavController
-import com.example.civicalertoriginal.Components.CardButton
-import com.example.civicalertoriginal.Components.Logo
-import com.example.civicalertoriginal.R
-
-@OptIn(ExperimentalMaterial3Api::class)
-@Composable
-fun Dashboard(navController: NavController) {
-    Surface(color = Color.White) {
-        LazyColumn(
-            modifier = Modifier
-                .fillMaxSize()
-                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),
-            verticalArrangement = Arrangement.spacedBy(18.dp),
-            horizontalAlignment = Alignment.CenterHorizontally
-        ) {
-            item {
-                Row(
-                    horizontalArrangement = Arrangement.SpaceBetween,
-                    modifier = Modifier
-                        .height(80.dp)
-                        .fillMaxWidth()
-                ) {
-                    Logo()
-                    Image(
-                        painter = painterResource(id = R.drawable.profie),
-                        contentDescription = "",
-                        modifier = Modifier
-                            .size(50.dp, 70.dp)
-                            .clickable { navController.navigate("userProfile") }
-                    )
-                }
-            }
-
-            item {
-                Column(
-                    modifier = Modifier.height(300.dp)
-                ) {
-                    Card(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .fillMaxHeight(),
-                        colors = CardDefaults.cardColors(containerColor = Color.White),
-                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
-                    ) {
-                        Column(
-                            modifier = Modifier
-                                .padding(16.dp)
-                        ) {
-                            Text(
-                                text = "Recent report",
-                                fontWeight = FontWeight.Bold,
-                                fontSize = 20.sp
-                            )
-                            Image(
-                                painter = painterResource(id = R.drawable.photo),
-                                contentDescription = "Picture of reported incident",
-                                modifier = Modifier.height(150.dp)
-                            )
-                            Text(
-                                text = "Broken Street Light",
-                                fontWeight = FontWeight.Bold,
-                                fontSize = 20.sp
-                            )
-                            Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
-                            Text(text = "14 March")
-                            Text(text = "Streetlight")
-                        }
-                    }
-                }
-            }
-
-            item {
-                Row(
-                    modifier = Modifier
-                        .fillMaxWidth()
-                        .padding(top = 20.dp),
-                    horizontalArrangement = Arrangement.SpaceAround
-                ) {
-                    CardButton(
-                        iconRes = R.drawable.info,
-                        label = "Report Incident",
-                        onClick = { navController.navigate("makeReports") }
-                    )
-                    CardButton(
-                        iconRes = R.drawable.clipboard,
-                        label = "View Reports",
-                        onClick = { navController.navigate("Viewreports") }
-                    )
-                }
-            }
-
-                item {
-                    Row(
-                        modifier = Modifier
-                            .fillMaxWidth(),
-                        horizontalArrangement = Arrangement.SpaceAround
-                    ) {
-                        CardButton(
-                            iconRes = R.drawable.headphones,
-                            label = "Help & Support",
-                            onClick =  { navController.navigate("helpSupport") })
-
-                        CardButton(
-                            iconRes = R.drawable.emergency_contacts,
-                            label = "Emergency\n Contacts",
-                            onClick = { navController.navigate("emergencyContacts") }
-                        )
-
-                    }
-                }
-
-                item {
-                    Row(
-                        modifier = Modifier.height(20.dp)
-                    ) {
-                        // Placeholder for spacing
-                    }
-                }
-            }
-        }
-    }
-
-
-    @Preview
-    @Composable
-    fun DashboardPreview() {
-        val navController = rememberNavController()
-        Dashboard(navController)
-    }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ /dev/null	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
@@ -1,19 +0,0 @@
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable { }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.info, label = \"Report Incident\") {\r\n                        // logic to take you to report incident page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.clipboard, label = \"View Reports\") {\r\n                        // logic to take you to reported incidents page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth(),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.headphones, label = \"Help & Support\") {\r\n                        // logic to take you to help page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.emergency_contacts, label = \"Emergency Contacts\") {\r\n                        // logic to take you to emergency contacts page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier.height(20.dp)\r\n                ) {\r\n                    // Placeholder for spacing\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun DashboardPreview() {\r\n    val navController = rememberNavController()\r\n    Dashboard(navController)\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(revision 29e21a0dea470f01c5297f0fc0d8b85dcdf80ade)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719310516707)
-@@ -33,7 +33,7 @@
- import com.example.civicalertoriginal.Components.Logo
- import com.example.civicalertoriginal.R
- 
--@OptIn(ExperimentalMaterial3Api::class)
-+
- @Composable
- fun Dashboard(navController: NavController) {
-     Surface(color = Color.White) {
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ /dev/null	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]" date="1719304551988" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/25/2024 10:35 AM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ /dev/null	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]" date="1719310948895" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/25/2024 12:22 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ /dev/null	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
@@ -1,324 +0,0 @@
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material.icons.outlined.Info\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\n\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun DashBoard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(topBar = {\r\n            TopAppBar(title = {\r\n                Row(\r\n                    verticalAlignment = Alignment.Top,\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier.fillMaxWidth()) {\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.logo), contentDescription = \"\",\r\n                         modifier = Modifier.size(100.dp)\r\n                    )\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.AccountCircle, contentDescription = \"\",\r\n                        modifier = Modifier.size(100.dp)\r\n                    )\r\n                }\r\n            })\r\n        }, bottomBar = {\r\n           Row (verticalAlignment = Alignment.Bottom,\r\n               horizontalArrangement = Arrangement.SpaceAround){\r\n               Icon(imageVector = Icons.Filled.Home, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Outlined.Info, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Rounded.Person, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n           }\r\n        }, content = { innerPadding ->\r\n            Column {\r\n\r\n            }\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(date 1719304551788)
-@@ -1,73 +1,150 @@
- package com.example.civicalertoriginal.Screens
- 
--import android.annotation.SuppressLint
- import androidx.compose.foundation.Image
-+import androidx.compose.foundation.clickable
- import androidx.compose.foundation.layout.Arrangement
- import androidx.compose.foundation.layout.Column
- import androidx.compose.foundation.layout.Row
--import androidx.compose.foundation.layout.Spacer
-+import androidx.compose.foundation.layout.fillMaxHeight
-+import androidx.compose.foundation.layout.fillMaxSize
- import androidx.compose.foundation.layout.fillMaxWidth
-+import androidx.compose.foundation.layout.height
-+import androidx.compose.foundation.layout.padding
- import androidx.compose.foundation.layout.size
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.filled.Home
--import androidx.compose.material.icons.materialIcon
--import androidx.compose.material.icons.outlined.Info
--import androidx.compose.material.icons.rounded.AccountCircle
--import androidx.compose.material.icons.rounded.Person
-+import androidx.compose.foundation.lazy.LazyColumn
-+import androidx.compose.foundation.lazy.items
-+import androidx.compose.material3.Card
-+import androidx.compose.material3.CardDefaults
- import androidx.compose.material3.ExperimentalMaterial3Api
--import androidx.compose.material3.Icon
--import androidx.compose.material3.Scaffold
- import androidx.compose.material3.Surface
--import androidx.compose.material3.TopAppBar
-+import androidx.compose.material3.Text
- import androidx.compose.runtime.Composable
- import androidx.compose.ui.Alignment
- import androidx.compose.ui.Modifier
- import androidx.compose.ui.graphics.Color
- import androidx.compose.ui.res.painterResource
-+import androidx.compose.ui.text.font.FontWeight
-+import androidx.compose.ui.tooling.preview.Preview
- import androidx.compose.ui.unit.dp
-+import androidx.compose.ui.unit.sp
- import androidx.navigation.NavController
--
-+import androidx.navigation.compose.rememberNavController
-+import com.example.civicalertoriginal.Components.CardButton
-+import com.example.civicalertoriginal.Components.Logo
- import com.example.civicalertoriginal.R
- 
--
--
--@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
- @OptIn(ExperimentalMaterial3Api::class)
- @Composable
--fun DashBoard(navController: NavController) {
-+fun Dashboard(navController: NavController) {
-     Surface(color = Color.White) {
--        Scaffold(topBar = {
--            TopAppBar(title = {
-+        LazyColumn(
-+            modifier = Modifier
-+                .fillMaxSize()
-+                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),
-+            verticalArrangement = Arrangement.spacedBy(18.dp),
-+            horizontalAlignment = Alignment.CenterHorizontally
-+        ) {
-+            item {
-                 Row(
--                    verticalAlignment = Alignment.Top,
-                     horizontalArrangement = Arrangement.SpaceBetween,
--                    modifier = Modifier.fillMaxWidth()) {
-+                    modifier = Modifier
-+                        .height(80.dp)
-+                        .fillMaxWidth()
-+                ) {
-+                    Logo()
-                     Image(
--                        painter = painterResource(id = R.drawable.logo), contentDescription = "",
--                         modifier = Modifier.size(100.dp)
--                    )
--                    Icon(
--                        imageVector = Icons.Rounded.AccountCircle, contentDescription = "",
--                        modifier = Modifier.size(100.dp)
--                    )
-+                        painter = painterResource(id = R.drawable.profie),
-+                        contentDescription = "",
-+                        modifier = Modifier
-+                            .size(50.dp, 70.dp)
-+                            .clickable { }
-+                    )
-+                }
-+            }
-+
-+            item {
-+                Column(
-+                    modifier = Modifier.height(300.dp)
-+                ) {
-+                    Card(
-+                        modifier = Modifier
-+                            .fillMaxWidth()
-+                            .fillMaxHeight(),
-+                        colors = CardDefaults.cardColors(containerColor = Color.White),
-+                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
-+                    ) {
-+                        Column(
-+                            modifier = Modifier
-+                                .padding(16.dp)
-+                        ) {
-+                            Text(
-+                                text = "Recent report",
-+                                fontWeight = FontWeight.Bold,
-+                                fontSize = 20.sp
-+                            )
-+                            Image(
-+                                painter = painterResource(id = R.drawable.photo),
-+                                contentDescription = "Picture of reported incident",
-+                                modifier = Modifier.height(150.dp)
-+                            )
-+                            Text(
-+                                text = "Broken Street Light",
-+                                fontWeight = FontWeight.Bold,
-+                                fontSize = 20.sp
-+                            )
-+                            Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
-+                            Text(text = "14 March")
-+                            Text(text = "Streetlight")
-+                        }
-+                    }
-                 }
--            })
--        }, bottomBar = {
--           Row (verticalAlignment = Alignment.Bottom,
--               horizontalArrangement = Arrangement.SpaceAround){
--               Icon(imageVector = Icons.Filled.Home, contentDescription = "", modifier = Modifier.size(50.dp))
--               Spacer(modifier = Modifier.size(140.dp))
--               Icon(imageVector = Icons.Outlined.Info, contentDescription = "", modifier = Modifier.size(50.dp))
--               Spacer(modifier = Modifier.size(140.dp))
--               Icon(imageVector = Icons.Rounded.Person, contentDescription = "", modifier = Modifier.size(50.dp))
--           }
--        }, content = { innerPadding ->
--            Column {
-+            }
- 
-+            item {
-+                Row(
-+                    modifier = Modifier
-+                        .fillMaxWidth()
-+                        .padding(top = 20.dp),
-+                    horizontalArrangement = Arrangement.SpaceAround
-+                ) {
-+                    CardButton(iconRes = R.drawable.info, label = "Report Incident") {
-+                        // logic to take you to report incident page
-+                    }
-+                    CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
-+                        // logic to take you to reported incidents page
-+                    }
-+                }
-             }
--        }
--        )
--    }
--}
-+
-+            item {
-+                Row(
-+                    modifier = Modifier
-+                        .fillMaxWidth(),
-+                    horizontalArrangement = Arrangement.SpaceAround
-+                ) {
-+                    CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
-+                        // logic to take you to help page
-+                    }
-+                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
-+                        // logic to take you to emergency contacts page
-+                    }
-+                }
-+            }
- 
-+            item {
-+                Row(
-+                    modifier = Modifier.height(20.dp)
-+                ) {
-+                    // Placeholder for spacing
-+                }
-+            }
-+        }
-+    }
-+}
- 
-+@Preview
-+@Composable
-+fun DashboardPreview() {
-+    val navController = rememberNavController()
-+    Dashboard(navController)
-+}
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Face\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardColors\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\n\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.BottomButtonsMyProfile\r\nimport com.example.civicalertoriginal.Components.ProfileText\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun UpdateProfile (navController: NavController){\r\n    Surface( color = Color.White) {\r\n        Scaffold (bottomBar = {\r\n            BottomAppBar {\r\n\r\n                Row {\r\n\r\n                    Column (\r\n                    ) {\r\n                        Icon(imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"HOME\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column (){\r\n                        Icon(imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"MAKE REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"VIEW REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"CALL\")\r\n                    }\r\n\r\n                }\r\n            }\r\n        }){innerPadding ->\r\n            Column {\r\n                Spacer(modifier = Modifier.size(10.dp))\r\n                Column ( modifier = Modifier.fillMaxWidth() ,\r\n                    verticalArrangement = Arrangement.Center, horizontalAlignment = Alignment.CenterHorizontally){\r\n                    Icon(imageVector = Icons.Rounded.Face, contentDescription = \"\", modifier = Modifier.size(80.dp\r\n                    ))\r\n                    Text(text = \"USER NAME\", fontSize = 25.sp)\r\n                }\r\n                val cardColor by remember {\r\n                    mutableStateOf(Color.Green)\r\n                }\r\n\r\n                Card (  modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .background(cardColor) ){\r\n                    Column {\r\n                        ProfileText(description = \"First Name\", value = \"User name\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Last Name\", value = \"Sirname\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Email address\", value = \"emailInForm@gmail.com\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Phone number\", value = \"+27 68801025\")\r\n\r\n                    } }\r\n\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"UPDATE\") {}\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"Log Out\") {}\r\n            }\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n}\r\n@Preview\r\n@Composable\r\nfun SignUpPreview(){\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(date 1719304551828)
-@@ -6,11 +6,8 @@
- import androidx.compose.foundation.layout.Column
- import androidx.compose.foundation.layout.Row
- import androidx.compose.foundation.layout.Spacer
--import androidx.compose.foundation.layout.fillMaxHeight
- import androidx.compose.foundation.layout.fillMaxWidth
--import androidx.compose.foundation.layout.padding
- import androidx.compose.foundation.layout.size
--import androidx.compose.foundation.shape.RoundedCornerShape
- import androidx.compose.material.icons.Icons
- import androidx.compose.material.icons.rounded.Call
- import androidx.compose.material.icons.rounded.Edit
-@@ -19,7 +16,7 @@
- import androidx.compose.material.icons.rounded.List
- import androidx.compose.material3.BottomAppBar
- import androidx.compose.material3.Card
--import androidx.compose.material3.CardColors
-+import androidx.compose.material3.CardDefaults
- import androidx.compose.material3.Icon
- import androidx.compose.material3.Scaffold
- import androidx.compose.material3.Surface
-@@ -94,7 +91,8 @@
- 
-                 Card (  modifier = Modifier
-                     .fillMaxWidth()
--                    .background(cardColor) ){
-+                    , colors = CardDefaults.cardColors(containerColor = Color.White),
-+                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)){
-                     Column {
-                         ProfileText(description = "First Name", value = "User name")
-                         Spacer(modifier = Modifier.size(10.dp))
-Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>@file:Suppress(\"UNUSED_EXPRESSION\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.TextFieldValue\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.text.style.TextDecoration\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun ProfileText(description: String , value: String) {\r\n    var textFieldVisible by remember { mutableStateOf(false) }\r\n    var textFieldValue by remember { mutableStateOf(TextFieldValue()) }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .padding(16.dp)\r\n            .fillMaxWidth()\r\n    ) {\r\n        // Clickable Text\r\n        Text(text = description, fontFamily = FontFamily.SansSerif, fontSize = 17.sp)\r\n        Spacer(modifier = Modifier.size(10.dp))\r\n        Text(\r\n            text = value,\r\n            modifier = Modifier.clickable {\r\n                textFieldVisible = true\r\n            },\r\n            fontSize = 25.sp,\r\n            fontFamily = FontFamily.Default,\r\n            style = MaterialTheme.typography.bodyMedium.copy(\r\n                textDecoration = TextDecoration.Underline\r\n            )\r\n        )\r\n\r\n        // Conditional Text Field\r\n        if (textFieldVisible) {\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            TextField(\r\n                value = textFieldValue,\r\n                onValueChange = { textFieldValue = it },\r\n                modifier = Modifier.fillMaxWidth()\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            Button(\r\n                onClick = {\r\n                    textFieldVisible = false\r\n                    // Perform any actions with the text field value here\r\n                },\r\n                modifier = Modifier.align(alignment = androidx.compose.ui.Alignment.End)\r\n            ) {\r\n                Text(\"Save\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    @Composable\r\n    fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {\r\n        Button(\r\n            onClick = onClick, shape = ButtonDefaults.shape,\r\n            colors = ButtonDefaults.buttonColors(Color.Green),\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n        ) {\r\n            Text(\r\n                text = name, modifier = Modifier\r\n                    .size(80.dp, 30.dp)\r\n                    .padding(start = 17.dp, top = 4.dp)\r\n                    .align(Alignment.CenterVertically)\r\n                    .fillMaxWidth(),\r\n                color = Color.Black\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1719304771078)
-@@ -11,6 +11,7 @@
- import androidx.compose.foundation.layout.Column
- import androidx.compose.foundation.layout.Row
- import androidx.compose.foundation.layout.Spacer
-+import androidx.compose.foundation.layout.fillMaxSize
- import androidx.compose.foundation.layout.fillMaxWidth
- import androidx.compose.foundation.layout.height
- import androidx.compose.foundation.layout.padding
-@@ -25,6 +26,8 @@
- import androidx.compose.material.icons.filled.Person
- import androidx.compose.material3.Button
- import androidx.compose.material3.ButtonDefaults
-+import androidx.compose.material3.Card
-+import androidx.compose.material3.CardDefaults
- import androidx.compose.material3.Checkbox
- import androidx.compose.material3.DropdownMenuItem
- import androidx.compose.material3.ExperimentalMaterial3Api
-@@ -61,8 +64,35 @@
- import com.example.civicalertoriginal.R
- 
- 
--
--
-+@Composable
-+fun Logo(){
-+    Image(painter = painterResource(id = R.drawable.logo), contentDescription ="" )
-+}
-+@Composable
-+fun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {
-+    Card(
-+        modifier = Modifier
-+            .size(160.dp)
-+            .clickable(onClick = onClick),
-+        colors = CardDefaults.cardColors(containerColor = Color.White), // Set the background color to white
-+        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp) // Set elevation to add shadow
-+    ) {
-+        Column(
-+            modifier = Modifier
-+                .fillMaxSize()
-+                .padding(8.dp),
-+            verticalArrangement = Arrangement.Center,
-+            horizontalAlignment = Alignment.CenterHorizontally
-+        ) {
-+            Image(
-+                painter = painterResource(id = iconRes),
-+                contentDescription = "",
-+                modifier = Modifier.size(40.dp)
-+            )
-+            Text(text = label)
-+        }
-+    }
-+}
- @Composable
- fun LogAndForgotHeader(screenLabel:String) {
-     Column ( modifier = Modifier.fillMaxWidth(),
-Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
-+++ /dev/null	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]" date="1718542854526" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 16/06/2024 15:00 [Changes]" />
--</changelist>
-\ No newline at end of file
-diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch
-deleted file mode 100644
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ /dev/null	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
@@ -1,83 +0,0 @@
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable { }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.info, label = \"Report Incident\") {\r\n                        // logic to take you to report incident page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.clipboard, label = \"View Reports\") {\r\n                        // logic to take you to reported incidents page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth(),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.headphones, label = \"Help & Support\") {\r\n                        // logic to take you to help page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.emergency_contacts, label = \"Emergency Contacts\") {\r\n                        // logic to take you to emergency contacts page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier.height(20.dp)\r\n                ) {\r\n                    // Placeholder for spacing\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun DashboardPreview() {\r\n    val navController = rememberNavController()\r\n    Dashboard(navController)\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719134728082)
-@@ -57,7 +57,7 @@
-                         contentDescription = "",
-                         modifier = Modifier
-                             .size(50.dp, 70.dp)
--                            .clickable { }
-+                            .clickable {navController.navigate("userProfile")}
-                     )
-                 }
-             }
-@@ -125,7 +125,7 @@
-                     CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
-                         // logic to take you to help page
-                     }
--                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
-+                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency \n Contacts") {
-                         // logic to take you to emergency contacts page
-                     }
-                 }
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Face\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardColors\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\n\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.BottomButtonsMyProfile\r\nimport com.example.civicalertoriginal.Components.ProfileText\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun UpdateProfile (navController: NavController){\r\n    Surface( color = Color.White) {\r\n        Scaffold (bottomBar = {\r\n            BottomAppBar {\r\n\r\n                Row {\r\n\r\n                    Column (\r\n                    ) {\r\n                        Icon(imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"HOME\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column (){\r\n                        Icon(imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"MAKE REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"VIEW REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"CALL\")\r\n                    }\r\n\r\n                }\r\n            }\r\n        }){innerPadding ->\r\n            Column {\r\n                Spacer(modifier = Modifier.size(10.dp))\r\n                Column ( modifier = Modifier.fillMaxWidth() ,\r\n                    verticalArrangement = Arrangement.Center, horizontalAlignment = Alignment.CenterHorizontally){\r\n                    Icon(imageVector = Icons.Rounded.Face, contentDescription = \"\", modifier = Modifier.size(80.dp\r\n                    ))\r\n                    Text(text = \"USER NAME\", fontSize = 25.sp)\r\n                }\r\n                val cardColor by remember {\r\n                    mutableStateOf(Color.Green)\r\n                }\r\n\r\n                Card (  modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .background(cardColor) ){\r\n                    Column {\r\n                        ProfileText(description = \"First Name\", value = \"User name\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Last Name\", value = \"Sirname\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Email address\", value = \"emailInForm@gmail.com\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Phone number\", value = \"+27 68801025\")\r\n\r\n                    } }\r\n\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"UPDATE\") {}\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"Log Out\") {}\r\n            }\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n}\r\n@Preview\r\n@Composable\r\nfun SignUpPreview(){\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(date 1719134622814)
-@@ -6,11 +6,8 @@
- import androidx.compose.foundation.layout.Column
- import androidx.compose.foundation.layout.Row
- import androidx.compose.foundation.layout.Spacer
--import androidx.compose.foundation.layout.fillMaxHeight
- import androidx.compose.foundation.layout.fillMaxWidth
--import androidx.compose.foundation.layout.padding
- import androidx.compose.foundation.layout.size
--import androidx.compose.foundation.shape.RoundedCornerShape
- import androidx.compose.material.icons.Icons
- import androidx.compose.material.icons.rounded.Call
- import androidx.compose.material.icons.rounded.Edit
-@@ -19,7 +16,7 @@
- import androidx.compose.material.icons.rounded.List
- import androidx.compose.material3.BottomAppBar
- import androidx.compose.material3.Card
--import androidx.compose.material3.CardColors
-+import androidx.compose.material3.CardDefaults
- import androidx.compose.material3.Icon
- import androidx.compose.material3.Scaffold
- import androidx.compose.material3.Surface
-@@ -94,7 +91,8 @@
- 
-                 Card (  modifier = Modifier
-                     .fillMaxWidth()
--                    .background(cardColor) ){
-+                    , colors = CardDefaults.cardColors(containerColor = Color.White),
-+                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)){
-                     Column {
-                         ProfileText(description = "First Name", value = "User name")
-                         Spacer(modifier = Modifier.size(10.dp))
-Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
-+++ /dev/null	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]" date="1718542854526" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 16/06/2024 15:00 [Changes]" />
--</changelist>
-\ No newline at end of file
-diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch
-deleted file mode 100644
Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ /dev/null	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]" date="1719305028485" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 6/25/2024 10:43 AM [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"858192785417\",\r\n    \"project_id\": \"civicalertoriginal\",\r\n    \"storage_bucket\": \"civicalertoriginal.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:858192785417:android:66010e84f19bcaa329c8d8\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.example.civicalertoriginal\"\r\n        }\r\n      },\r\n      \"oauth_client\": [],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyBnpgTzvn6M-m03q_tiPM9DmvUBnlItBck\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": []\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
--- a/app/google-services.json	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ b/app/google-services.json	(date 1719905956493)
@@ -1,6 +1,7 @@
 {
   "project_info": {
     "project_number": "858192785417",
+    "firebase_url": "https://civicalertoriginal-default-rtdb.firebaseio.com",
     "project_id": "civicalertoriginal",
     "storage_bucket": "civicalertoriginal.appspot.com"
   },
@@ -12,7 +13,20 @@
           "package_name": "com.example.civicalertoriginal"
         }
       },
-      "oauth_client": [],
+      "oauth_client": [
+        {
+          "client_id": "858192785417-1c5sj2122bkkmcaamnbtvaiu3l3q1s01.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.example.civicalertoriginal",
+            "certificate_hash": "9ac9a59c6f1354e1eed85a854455f00b4f7b2e00"
+          }
+        },
+        {
+          "client_id": "858192785417-e2pm5clll7mdup68aflkf9vprttrbvpj.apps.googleusercontent.com",
+          "client_type": 3
+        }
+      ],
       "api_key": [
         {
           "current_key": "AIzaSyBnpgTzvn6M-m03q_tiPM9DmvUBnlItBck"
@@ -20,7 +34,12 @@
       ],
       "services": {
         "appinvite_service": {
-          "other_platform_oauth_client": []
+          "other_platform_oauth_client": [
+            {
+              "client_id": "858192785417-e2pm5clll7mdup68aflkf9vprttrbvpj.apps.googleusercontent.com",
+              "client_type": 3
+            }
+          ]
         }
       }
     }
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.4.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nlifecycleRuntimeKtx = \"2.8.1\"\r\nactivityCompose = \"1.9.0\"\r\ncomposeBom = \"2023.08.00\"\r\nfirebaseCommonKtx = \"21.0.0\"\r\nnavigationCompose = \"2.7.7\"\r\ngoogleGmsGoogleServices = \"4.4.2\"\r\nfirebaseDatabase = \"21.0.0\"\r\nfirebaseAuth = \"23.0.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nfirebase-common-ktx = { group = \"com.google.firebase\", name = \"firebase-common-ktx\", version.ref = \"firebaseCommonKtx\" }\r\nandroidx-navigation-compose = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref = \"navigationCompose\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\nfirebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuth\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngoogle-gms-google-services = { id = \"com.google.gms.google-services\", version.ref = \"googleGmsGoogleServices\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 098c960ca9571f7e497f2d88c28c5a56334ce0c1)
+++ b/gradle/libs.versions.toml	(date 1719919297360)
@@ -13,9 +13,13 @@
 googleGmsGoogleServices = "4.4.2"
 firebaseDatabase = "21.0.0"
 firebaseAuth = "23.0.0"
+playServicesAuth = "21.2.0"
+foundationAndroid = "1.6.8"
+material3Android = "1.2.1"
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
+firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
 junit = { group = "junit", name = "junit", version.ref = "junit" }
 androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
 androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
@@ -33,6 +37,9 @@
 androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
 firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
 firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+play-services-auth = { group = "com.google.android.gms", name = "play-services-auth", version.ref = "playServicesAuth" }
+androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroid" }
+androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
