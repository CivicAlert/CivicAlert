Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ /dev/null	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]" date="1719133442772" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/23/2024 11:04 AM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ /dev/null	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
@@ -1,374 +0,0 @@
-Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.civicalertoriginal.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.Screens.Registration\r\nimport com.example.civicalertoriginal.Screens.UpdateProfile\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"login\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n        composable(\"userProfile\"){\r\n            UpdateProfile(navController)\r\n        }\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(date 1719131720777)
-@@ -5,7 +5,7 @@
- import androidx.navigation.compose.NavHost
- import androidx.navigation.compose.composable
- import androidx.navigation.compose.rememberNavController
--import com.example.civicalertoriginal.Screens.DashBoard
-+import com.example.civicalertoriginal.Screens.Dashboard
- import com.example.civicalertoriginal.Screens.ForgotPassword
- import com.example.civicalertoriginal.Screens.LogIn
- import com.example.civicalertoriginal.Screens.Registration
-@@ -15,7 +15,7 @@
- @Composable
- fun Navigation (){
-     val navController = rememberNavController()
--    NavHost(navController = navController, startDestination = "login") {
-+    NavHost(navController = navController, startDestination = "Login") {
-         composable("registration"){
-             Registration(navController)
-         }
-@@ -26,7 +26,7 @@
-             ForgotPassword(navController)
-         }
-         composable("Dashboard"){
--            DashBoard(navController)
-+            Dashboard(navController)
-         }
-         composable("makeReports"){
-             MakeReports(navController)
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.EmailTextFields\r\nimport com.example.civicalertoriginal.Components.InstructionText\r\nimport com.example.civicalertoriginal.Components.LogAndForgotHeader\r\nimport com.example.civicalertoriginal.Components.PasswordTextFields\r\nimport com.example.civicalertoriginal.Components.SignUpBottomButtons\r\nimport com.example.civicalertoriginal.R\r\n\r\nimport java.util.regex.Pattern\r\n\r\n\r\n@Composable\r\nfun LogIn(navController: NavController) {\r\n    Surface(\r\n        color = Color.White\r\n    ) {\r\n        Column (\r\n            horizontalAlignment = Alignment.CenterHorizontally,\r\n            modifier = Modifier\r\n                .padding(start = 16.dp, end = 16.dp, top = 80.dp)\r\n                .fillMaxSize()\r\n\r\n        ){\r\n         LogAndForgotHeader(screenLabel = \"Login\")\r\n            val context = LocalContext.current\r\n\r\n            Spacer(modifier = Modifier.size(40.dp))\r\n            var email by remember { mutableStateOf(\"\") }\r\n            var password by remember {mutableStateOf(\"\")}\r\n\r\n            Spacer(modifier = Modifier.padding(10.dp))\r\n\r\n            fun validatePassword(password:String):Boolean{\r\n                val passwordPattern = \"[a-zA-Z0-9]\"\r\n               return  Pattern.matches(passwordPattern,password)\r\n            }\r\n            fun validateEmail(email: String): Boolean {\r\n                val emailPattern = \"[a-zA-Z0-9_]+@+\\\\.[a-zA-Z]\"\r\n                return Pattern.matches(emailPattern, email)\r\n            }\r\n            //matches the alphas numerics, matches the @, matches alpha numeric, matches atleast two charecters\r\n\r\n\r\n\r\n\r\n            EmailTextFields(value = email, onChange = {\r\n                if (email.length<=100){\r\n                    email=it\r\n                    validateEmail(email)\r\n                }                                     },\r\n                fieldLabel = \"Enter Email Address\" )\r\n\r\n\r\n            Spacer(modifier = Modifier.size(10.dp))\r\n            PasswordTextFields(value = password, onChange = {\r\n\r\n                if (password.length<9){\r\n                    password=it\r\n                    validatePassword(password)\r\n                }\r\n\r\n             },\r\n                fieldLabel = \"Enter your password\")\r\n\r\n            Spacer(modifier = Modifier.padding(6.dp))\r\n\r\n            Row( verticalAlignment = Alignment.Bottom,\r\n                horizontalArrangement = Arrangement.SpaceBetween, modifier = Modifier\r\n                    .padding(20.dp)\r\n                    .align(Alignment.CenterHorizontally)\r\n\r\n            ) {\r\n\r\n              Text(text = \"Forgot Password?\", modifier = Modifier\r\n                  .clickable { navController.navigate(\"ForgotPassword\") }\r\n                  .padding(end = 25.dp),\r\n                    style = TextStyle(\r\n                        fontStyle = FontStyle.Normal,\r\n                        color = Color.Blue\r\n                    )\r\n                )\r\n                Spacer(modifier = Modifier.size(15.dp))\r\n\r\n                Text(text = \"Register\", modifier = Modifier\r\n                    .clickable { navController.navigate(\"registration\") }\r\n                    .padding(start = 25.dp),\r\n                    style = TextStyle( fontStyle = FontStyle.Normal,\r\n                        color = Color.Blue)\r\n                )\r\n\r\n            }\r\n\r\n            Spacer(modifier = Modifier.size(50.dp))\r\n            InstructionText(value = \"Sign with google\")\r\n\r\n                Image( modifier = Modifier\r\n                    .size(50.dp,55.dp)\r\n                    .clickable {  },painter = painterResource(id = R.drawable.googlepic),\r\n                    contentDescription = \"Google SignIn\" )\r\n\r\n            Spacer(modifier = Modifier.size(18.dp))\r\n\r\n            SignUpBottomButtons(name = \"Sign in\",)\r\n\r\n            {Toast.makeText(context,\"Sign in Successful\",Toast.LENGTH_SHORT).show()}\r\n\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun LogInPreview(){\r\n    val navController = rememberNavController()\r\n    LogIn( navController)\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
---- a/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt	(date 1719131527443)
-@@ -129,9 +129,13 @@
- 
-             Spacer(modifier = Modifier.size(18.dp))
- 
--            SignUpBottomButtons(name = "Sign in",)
--
--            {Toast.makeText(context,"Sign in Successful",Toast.LENGTH_SHORT).show()}
-+            SignUpBottomButtons(
-+                name = "Sign in",
-+                onClick = {
-+                    Toast.makeText(context, "Sign in Successful", Toast.LENGTH_SHORT).show()
-+                    navController.navigate("dashboard")
-+                }
-+            )
- 
-         }
-     }
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
-deleted file mode 100644
---- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
-+++ /dev/null	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
-@@ -1,139 +0,0 @@
--package com.example.civicalertoriginal.Screens
--
--import androidx.compose.foundation.Image
--import androidx.compose.foundation.clickable
--import androidx.compose.foundation.layout.Arrangement
--import androidx.compose.foundation.layout.Column
--import androidx.compose.foundation.layout.Row
--import androidx.compose.foundation.layout.fillMaxHeight
--import androidx.compose.foundation.layout.fillMaxSize
--import androidx.compose.foundation.layout.fillMaxWidth
--import androidx.compose.foundation.layout.height
--import androidx.compose.foundation.layout.padding
--import androidx.compose.foundation.layout.size
--import androidx.compose.foundation.rememberScrollState
--import androidx.compose.foundation.verticalScroll
--import androidx.compose.material3.Card
--import androidx.compose.material3.CardDefaults
--import androidx.compose.material3.ExperimentalMaterial3Api
--import androidx.compose.material3.Surface
--import androidx.compose.material3.Text
--import androidx.compose.runtime.Composable
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.Color
--import androidx.compose.ui.res.painterResource
--import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import androidx.compose.ui.unit.sp
--import androidx.navigation.NavController
--import androidx.navigation.compose.rememberNavController
--import com.example.civicalertoriginal.Components.CardButton
--import com.example.civicalertoriginal.Components.Logo
--import com.example.civicalertoriginal.R
--
--@OptIn(ExperimentalMaterial3Api::class)
--@Composable
--fun DashBoard(navController: NavController){
--
--    Surface(color = Color.White,
--        modifier = Modifier.verticalScroll(rememberScrollState())
--    ) {
--        Column (
--            modifier = Modifier
--                .fillMaxSize()
--                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp)
--                .verticalScroll(rememberScrollState()),
--            verticalArrangement = Arrangement.spacedBy(18.dp),
--            horizontalAlignment = Alignment.CenterHorizontally
--        ){
--            Row (
--                horizontalArrangement = Arrangement.SpaceBetween,
--                modifier = Modifier
--                    .height(80.dp)
--                    .fillMaxWidth()
--            ) {
--                Logo()
--                Image(
--                    painter = painterResource(id = R.drawable.profie),
--                    contentDescription = "",
--                    modifier = Modifier
--                        .size(50.dp, 70.dp)
--                        .clickable { }
--                )
--            }
--
--            Column(
--                modifier = Modifier.height(300.dp)
--            ) {
--                Card(
--                    modifier = Modifier
--                        .fillMaxWidth()
--                        .fillMaxHeight(),
--                    colors = CardDefaults.cardColors(containerColor = Color.White),
--                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
--                ) {
--                    Column(
--                        modifier = Modifier
--                            .padding(16.dp)
--                    ) {
--                        Text(text = "Recent report",
--                            fontWeight = FontWeight.Bold, fontSize = 20.sp)
--                        Image(
--                            painter = painterResource(id = R.drawable.photo),
--                            contentDescription = "Picture of reported incident",
--                            modifier = Modifier.height(150.dp)
--                        )
--                        Text(text = "Broken Street Light",
--                            fontWeight = FontWeight.Bold, fontSize = 20.sp)
--                        Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
--                        Text(text = "14 March")
--                        Text(text = "Streetlight")
--                    }
--                }
--            }
--
--            Row(
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(top = 20.dp),
--                horizontalArrangement = Arrangement.SpaceAround
--            ) {
--                CardButton(iconRes = R.drawable.info, label = "Report Incident") {
--                    // logic to take you to report incident  page
--                }
--                CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
--                    // logic to take you reported incidents  page
--                }
--            }
--
--            Row(
--                modifier = Modifier
--                    .fillMaxWidth(),
--                horizontalArrangement = Arrangement.SpaceAround
--            ) {
--                CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
--                    // logic to take you to help page
--                }
--                CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
--                    // logic to take you to emergency contacts page
--                }
--            }
--
--            Row (modifier = Modifier
--                .height(20.dp)){
--
--            }
--        }
--    }
--}
--
--
--
--@Preview
--@Composable
--fun DashBoardPreview(){
--    val navController = rememberNavController()
--    DashBoard(navController)
--}
-\ No newline at end of file
-Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
-new file mode 100644
---- /dev/null	(date 1719133281367)
-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719133281367)
-@@ -0,0 +1,150 @@
-+package com.example.civicalertoriginal.Screens
-+
-+import androidx.compose.foundation.Image
-+import androidx.compose.foundation.clickable
-+import androidx.compose.foundation.layout.Arrangement
-+import androidx.compose.foundation.layout.Column
-+import androidx.compose.foundation.layout.Row
-+import androidx.compose.foundation.layout.fillMaxHeight
-+import androidx.compose.foundation.layout.fillMaxSize
-+import androidx.compose.foundation.layout.fillMaxWidth
-+import androidx.compose.foundation.layout.height
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.foundation.layout.size
-+import androidx.compose.foundation.lazy.LazyColumn
-+import androidx.compose.foundation.lazy.items
-+import androidx.compose.material3.Card
-+import androidx.compose.material3.CardDefaults
-+import androidx.compose.material3.ExperimentalMaterial3Api
-+import androidx.compose.material3.Surface
-+import androidx.compose.material3.Text
-+import androidx.compose.runtime.Composable
-+import androidx.compose.ui.Alignment
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.graphics.Color
-+import androidx.compose.ui.res.painterResource
-+import androidx.compose.ui.text.font.FontWeight
-+import androidx.compose.ui.tooling.preview.Preview
-+import androidx.compose.ui.unit.dp
-+import androidx.compose.ui.unit.sp
-+import androidx.navigation.NavController
-+import androidx.navigation.compose.rememberNavController
-+import com.example.civicalertoriginal.Components.CardButton
-+import com.example.civicalertoriginal.Components.Logo
-+import com.example.civicalertoriginal.R
-+
-+@OptIn(ExperimentalMaterial3Api::class)
-+@Composable
-+fun Dashboard(navController: NavController) {
-+    Surface(color = Color.White) {
-+        LazyColumn(
-+            modifier = Modifier
-+                .fillMaxSize()
-+                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),
-+            verticalArrangement = Arrangement.spacedBy(18.dp),
-+            horizontalAlignment = Alignment.CenterHorizontally
-+        ) {
-+            item {
-+                Row(
-+                    horizontalArrangement = Arrangement.SpaceBetween,
-+                    modifier = Modifier
-+                        .height(80.dp)
-+                        .fillMaxWidth()
-+                ) {
-+                    Logo()
-+                    Image(
-+                        painter = painterResource(id = R.drawable.profie),
-+                        contentDescription = "",
-+                        modifier = Modifier
-+                            .size(50.dp, 70.dp)
-+                            .clickable { }
-+                    )
-+                }
-+            }
-+
-+            item {
-+                Column(
-+                    modifier = Modifier.height(300.dp)
-+                ) {
-+                    Card(
-+                        modifier = Modifier
-+                            .fillMaxWidth()
-+                            .fillMaxHeight(),
-+                        colors = CardDefaults.cardColors(containerColor = Color.White),
-+                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
-+                    ) {
-+                        Column(
-+                            modifier = Modifier
-+                                .padding(16.dp)
-+                        ) {
-+                            Text(
-+                                text = "Recent report",
-+                                fontWeight = FontWeight.Bold,
-+                                fontSize = 20.sp
-+                            )
-+                            Image(
-+                                painter = painterResource(id = R.drawable.photo),
-+                                contentDescription = "Picture of reported incident",
-+                                modifier = Modifier.height(150.dp)
-+                            )
-+                            Text(
-+                                text = "Broken Street Light",
-+                                fontWeight = FontWeight.Bold,
-+                                fontSize = 20.sp
-+                            )
-+                            Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
-+                            Text(text = "14 March")
-+                            Text(text = "Streetlight")
-+                        }
-+                    }
-+                }
-+            }
-+
-+            item {
-+                Row(
-+                    modifier = Modifier
-+                        .fillMaxWidth()
-+                        .padding(top = 20.dp),
-+                    horizontalArrangement = Arrangement.SpaceAround
-+                ) {
-+                    CardButton(iconRes = R.drawable.info, label = "Report Incident") {
-+                        // logic to take you to report incident page
-+                    }
-+                    CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
-+                        // logic to take you to reported incidents page
-+                    }
-+                }
-+            }
-+
-+            item {
-+                Row(
-+                    modifier = Modifier
-+                        .fillMaxWidth(),
-+                    horizontalArrangement = Arrangement.SpaceAround
-+                ) {
-+                    CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
-+                        // logic to take you to help page
-+                    }
-+                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
-+                        // logic to take you to emergency contacts page
-+                    }
-+                }
-+            }
-+
-+            item {
-+                Row(
-+                    modifier = Modifier.height(20.dp)
-+                ) {
-+                    // Placeholder for spacing
-+                }
-+            }
-+        }
-+    }
-+}
-+
-+@Preview
-+@Composable
-+fun DashboardPreview() {
-+    val navController = rememberNavController()
-+    Dashboard(navController)
-+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ /dev/null	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
@@ -1,25 +0,0 @@
-Index: .idea/appInsightsSettings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AppInsightsSettings\">\r\n    <option name=\"tabSettings\">\r\n      <map>\r\n        <entry key=\"Firebase Crashlytics\">\r\n          <value>\r\n            <InsightsFilterSettings>\r\n              <option name=\"connection\">\r\n                <ConnectionSetting>\r\n                  <option name=\"appId\" value=\"com.example.civicalertoriginal\" />\r\n                  <option name=\"mobileSdkAppId\" value=\"1:858192785417:android:66010e84f19bcaa329c8d8\" />\r\n                  <option name=\"projectId\" value=\"civicalertoriginal\" />\r\n                  <option name=\"projectNumber\" value=\"858192785417\" />\r\n                </ConnectionSetting>\r\n              </option>\r\n              <option name=\"signal\" value=\"SIGNAL_UNSPECIFIED\" />\r\n              <option name=\"timeIntervalDays\" value=\"THIRTY_DAYS\" />\r\n              <option name=\"visibilityType\" value=\"ALL\" />\r\n            </InsightsFilterSettings>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/appInsightsSettings.xml b/.idea/appInsightsSettings.xml
---- a/.idea/appInsightsSettings.xml	
-+++ b/.idea/appInsightsSettings.xml	
-@@ -6,14 +6,6 @@
-         <entry key="Firebase Crashlytics">
-           <value>
-             <InsightsFilterSettings>
--              <option name="connection">
--                <ConnectionSetting>
--                  <option name="appId" value="com.example.civicalertoriginal" />
--                  <option name="mobileSdkAppId" value="1:858192785417:android:66010e84f19bcaa329c8d8" />
--                  <option name="projectId" value="civicalertoriginal" />
--                  <option name="projectNumber" value="858192785417" />
--                </ConnectionSetting>
--              </option>
-               <option name="signal" value="SIGNAL_UNSPECIFIED" />
-               <option name="timeIntervalDays" value="THIRTY_DAYS" />
-               <option name="visibilityType" value="ALL" />
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36__Changes_.xml
new file mode 100644
--- /dev/null	(date 1719860866711)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36__Changes_.xml	(date 1719860866711)
@@ -0,0 +1,29 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]" date="1719682684810" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 29/06/2024 19:36 [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="app/src/main/res/drawable/messenger.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/messenger.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="app/src/main/res/drawable/twitter.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/twitter.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="app/src/main/res/drawable/contact.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/contact.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="app/src/main/res/drawable/whatsapp.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/whatsapp.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="app/src/main/res/drawable/instagram.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/instagram.png" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_27_06_2024_23_03__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_06_2024_23_03__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_06_2024_23_03__Changes_.xml
new file mode 100644
--- /dev/null	(date 1719860866704)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_06_2024_23_03__Changes_.xml	(date 1719860866704)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_27_06_2024_23_03_[Changes]" date="1719522213914" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_06_2024_23_03_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 27/06/2024 23:03 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_1.xml
new file mode 100644
--- /dev/null	(date 1719860866714)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_1.xml	(date 1719860866714)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]1" date="1719683306075" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 29/06/2024 19:48 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_.xml
new file mode 100644
--- /dev/null	(date 1719860866714)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48__Changes_.xml	(date 1719860866714)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]" date="1719683285431" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 29/06/2024 19:48 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	(date 1719860866713)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]1/shelved.patch	(date 1719860866713)
@@ -0,0 +1,669 @@
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch	
++++ /dev/null	
+@@ -1,25 +0,0 @@
+-Index: .idea/appInsightsSettings.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AppInsightsSettings\">\r\n    <option name=\"tabSettings\">\r\n      <map>\r\n        <entry key=\"Firebase Crashlytics\">\r\n          <value>\r\n            <InsightsFilterSettings>\r\n              <option name=\"connection\">\r\n                <ConnectionSetting>\r\n                  <option name=\"appId\" value=\"com.example.civicalertoriginal\" />\r\n                  <option name=\"mobileSdkAppId\" value=\"1:858192785417:android:66010e84f19bcaa329c8d8\" />\r\n                  <option name=\"projectId\" value=\"civicalertoriginal\" />\r\n                  <option name=\"projectNumber\" value=\"858192785417\" />\r\n                </ConnectionSetting>\r\n              </option>\r\n              <option name=\"signal\" value=\"SIGNAL_UNSPECIFIED\" />\r\n              <option name=\"timeIntervalDays\" value=\"THIRTY_DAYS\" />\r\n              <option name=\"visibilityType\" value=\"ALL\" />\r\n            </InsightsFilterSettings>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/appInsightsSettings.xml b/.idea/appInsightsSettings.xml
+---- a/.idea/appInsightsSettings.xml	
+-+++ b/.idea/appInsightsSettings.xml	
+-@@ -6,14 +6,6 @@
+-         <entry key="Firebase Crashlytics">
+-           <value>
+-             <InsightsFilterSettings>
+--              <option name="connection">
+--                <ConnectionSetting>
+--                  <option name="appId" value="com.example.civicalertoriginal" />
+--                  <option name="mobileSdkAppId" value="1:858192785417:android:66010e84f19bcaa329c8d8" />
+--                  <option name="projectId" value="civicalertoriginal" />
+--                  <option name="projectNumber" value="858192785417" />
+--                </ConnectionSetting>
+--              </option>
+-               <option name="signal" value="SIGNAL_UNSPECIFIED" />
+-               <option name="timeIntervalDays" value="THIRTY_DAYS" />
+-               <option name="visibilityType" value="ALL" />
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]" date="1718990254322" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/06/2024 19:17 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1" date="1719056828521" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 22/06/2024 13:47 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,176 +0,0 @@
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>@file:Suppress(\"UNREACHABLE_CODE\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.animation.animateColorAsState\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.hoverable\r\nimport androidx.compose.foundation.interaction.MutableInteractionSource\r\nimport androidx.compose.foundation.interaction.collectIsHoveredAsState\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.BasicText\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.LocalContentColor\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.input.pointer.PointerInputScope\r\nimport androidx.compose.ui.input.pointer.pointerInput\r\nimport androidx.compose.ui.input.pointer.positionChangeConsumed\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.civicalertoriginal.R\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 30.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String, onChange: (String)->Unit, fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String, onChange:(String)->Unit, fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(10.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = {}, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Cards( value: String,){\r\n    Card(modifier = Modifier\r\n        .size(250.dp)\r\n        .padding(16.dp), shape =  RoundedCornerShape(16.dp),\r\n        colors = CardDefaults.cardColors(containerColor = Color.Green), elevation =\r\n            CardDefaults.cardElevation(defaultElevation = 8.dp)\r\n    ) {\r\n        Text(text = value, modifier = Modifier.fillMaxSize(),\r\n            style = MaterialTheme.typography.headlineMedium.copy(\r\n                color = Color.Black,\r\n                fontSize = 25.sp,\r\n                fontWeight = FontWeight.Bold,\r\n                textAlign = TextAlign.Justify\r\n            )\r\n        )\r\n\r\n\r\n    }\r\n}\r\n@Composable\r\nfun HoverableText(\r\n    text: String,\r\n    defaultColor: Color = LocalContentColor.current,\r\n    hoverColor: Color = Color.Red\r\n) {\r\n    val interactionSource = remember { MutableInteractionSource() }\r\n    val isHovered by interactionSource.collectIsHoveredAsState()\r\n\r\n    Text(\r\n        text,\r\n        color = if (isHovered) hoverColor else defaultColor,\r\n        modifier = Modifier.hoverable(interactionSource)\r\n    )\r\n}\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1718955370008)
+-@@ -368,22 +368,6 @@
+-                 textAlign = TextAlign.Justify
+-             )
+-         )
+--
+--
+-     }
+- }
+--@Composable
+--fun HoverableText(
+--    text: String,
+--    defaultColor: Color = LocalContentColor.current,
+--    hoverColor: Color = Color.Red
+--) {
+--    val interactionSource = remember { MutableInteractionSource() }
+--    val isHovered by interactionSource.collectIsHoveredAsState()
+- 
+--    Text(
+--        text,
+--        color = if (isHovered) hoverColor else defaultColor,
+--        modifier = Modifier.hoverable(interactionSource)
+--    )
+--}
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.Screens.Registration\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"Login\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n\r\n    }\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(date 1718958070656)
+-@@ -14,7 +14,8 @@
+- @Composable
+- fun Navigation (){
+-     val navController = rememberNavController()
+--    NavHost(navController = navController, startDestination = "Login") {
+-+    NavHost(navController = navController, startDestination = "registration" +
+-+            "") {
+-         composable("registration"){
+-             Registration(navController)
+-         }
+-Index: app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.Navigation\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.ui.theme.CivicAlertOriginalTheme\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.FirebaseApp\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        FirebaseApp.initializeApp(this)\r\n        setContent {\r\n            CivicAlertOriginalTheme {\r\n                Navigation()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(date 1718954254938)
+-@@ -30,6 +30,7 @@
+-         setContent {
+-             CivicAlertOriginalTheme {
+-                 Navigation()
+-+
+-             }
+-         }
+-     }
+-Index: app/build.gradle.kts
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.google.gms.google.services)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.civicalertoriginal\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.civicalertoriginal\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.firebase.common.ktx)\r\n    implementation(libs.androidx.navigation.compose)\r\n    implementation(libs.firebase.database)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle.kts b/app/build.gradle.kts
+---- a/app/build.gradle.kts	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/build.gradle.kts	(date 1718954601181)
+-@@ -63,6 +63,7 @@
+-     implementation(libs.firebase.common.ktx)
+-     implementation(libs.androidx.navigation.compose)
+-     implementation(libs.firebase.database)
+-+    implementation(libs.firebase.auth)
+-     testImplementation(libs.junit)
+-     androidTestImplementation(libs.androidx.junit)
+-     androidTestImplementation(libs.androidx.espresso.core)
+-Index: gradle/libs.versions.toml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>[versions]\r\nagp = \"8.4.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nlifecycleRuntimeKtx = \"2.8.1\"\r\nactivityCompose = \"1.9.0\"\r\ncomposeBom = \"2023.08.00\"\r\nfirebaseCommonKtx = \"21.0.0\"\r\nnavigationCompose = \"2.7.7\"\r\ngoogleGmsGoogleServices = \"4.4.2\"\r\nfirebaseDatabase = \"21.0.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nfirebase-common-ktx = { group = \"com.google.firebase\", name = \"firebase-common-ktx\", version.ref = \"firebaseCommonKtx\" }\r\nandroidx-navigation-compose = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref = \"navigationCompose\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngoogle-gms-google-services = { id = \"com.google.gms.google-services\", version.ref = \"googleGmsGoogleServices\" }\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+---- a/gradle/libs.versions.toml	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/gradle/libs.versions.toml	(date 1718954601109)
+-@@ -12,6 +12,7 @@
+- navigationCompose = "2.7.7"
+- googleGmsGoogleServices = "4.4.2"
+- firebaseDatabase = "21.0.0"
+-+firebaseAuth = "23.0.0"
+- 
+- [libraries]
+- androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
+-@@ -31,6 +32,7 @@
+- firebase-common-ktx = { group = "com.google.firebase", name = "firebase-common-ktx", version.ref = "firebaseCommonKtx" }
+- androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
+- firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
+-+firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+- 
+- [plugins]
+- android-application = { id = "com.android.application", version.ref = "agp" }
+-Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material.icons.outlined.Info\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.Cards\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun DashBoard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(topBar = {\r\n            TopAppBar(title = {\r\n                Row(\r\n                    verticalAlignment = Alignment.Top,\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier.fillMaxWidth()) {\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.logo), contentDescription = \"\",\r\n                         modifier = Modifier.size(100.dp)\r\n                    )\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.AccountCircle, contentDescription = \"\",\r\n                        modifier = Modifier.size(100.dp)\r\n                    )\r\n                }\r\n            })\r\n        }, bottomBar = {\r\n           Row (verticalAlignment = Alignment.Bottom,\r\n               horizontalArrangement = Arrangement.SpaceAround){\r\n               Icon(imageVector = Icons.Filled.Home, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Outlined.Info, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Rounded.Person, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n           }\r\n        }, content = { innerPadding ->\r\n            Column {\r\n                Cards(value = \"View all new reports\")\r\n                Row {\r\n                    Cards(value = \"REPORT AN INCIDENT\")\r\n                    Cards(value = \"EMERGENCY CONTACTS\")\r\n                }\r\n                Cards(value = \"HELP & SUPPORT\")\r\n            }\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(date 1718740129711)
+-@@ -8,6 +8,8 @@
+- import androidx.compose.foundation.layout.Spacer
+- import androidx.compose.foundation.layout.fillMaxWidth
+- import androidx.compose.foundation.layout.size
+-+import androidx.compose.foundation.lazy.staggeredgrid.LazyVerticalStaggeredGrid
+-+import androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells
+- import androidx.compose.material.icons.Icons
+- import androidx.compose.material.icons.filled.Home
+- import androidx.compose.material.icons.materialIcon
+-@@ -18,14 +20,17 @@
+- import androidx.compose.material3.Icon
+- import androidx.compose.material3.Scaffold
+- import androidx.compose.material3.Surface
+-+import androidx.compose.material3.Text
+- import androidx.compose.material3.TopAppBar
+- import androidx.compose.runtime.Composable
+- import androidx.compose.ui.Alignment
+- import androidx.compose.ui.Modifier
+- import androidx.compose.ui.graphics.Color
+- import androidx.compose.ui.res.painterResource
+-+import androidx.compose.ui.tooling.preview.Preview
+- import androidx.compose.ui.unit.dp
+- import androidx.navigation.NavController
+-+import androidx.navigation.compose.rememberNavController
+- import com.example.civicalertoriginal.Components.Cards
+- import com.example.civicalertoriginal.R
+- 
+-@@ -63,16 +68,17 @@
+-            }
+-         }, content = { innerPadding ->
+-             Column {
+--                Cards(value = "View all new reports")
+--                Row {
+--                    Cards(value = "REPORT AN INCIDENT")
+--                    Cards(value = "EMERGENCY CONTACTS")
+--                }
+--                Cards(value = "HELP & SUPPORT")
+-+
+-             }
+-         }
+-         )
+-     }
+- }
+-+@Preview
+-+@Composable
+-+fun DashBoardPreview(){
+-+    val navController = rememberNavController()
+-+    DashBoard( navController)
+-+}
+- 
+- 
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]" date="1718990148012" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 21/06/2024 19:15 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,317 +0,0 @@
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1718990142616)
+-@@ -1,14 +1,21 @@
+-+@file:Suppress("UNREACHABLE_CODE")
+-+
+- package com.example.civicalertoriginal.Components
+- 
+- import android.widget.Toast
+-+import androidx.compose.animation.animateColorAsState
+- import androidx.compose.foundation.Image
+- import androidx.compose.foundation.background
+- import androidx.compose.foundation.clickable
+-+import androidx.compose.foundation.hoverable
+-+import androidx.compose.foundation.interaction.MutableInteractionSource
+-+import androidx.compose.foundation.interaction.collectIsHoveredAsState
+- import androidx.compose.foundation.layout.Arrangement
+- import androidx.compose.foundation.layout.Box
+- import androidx.compose.foundation.layout.Column
+- import androidx.compose.foundation.layout.Row
+- import androidx.compose.foundation.layout.Spacer
+-+import androidx.compose.foundation.layout.fillMaxSize
+- import androidx.compose.foundation.layout.fillMaxWidth
+- import androidx.compose.foundation.layout.height
+- import androidx.compose.foundation.layout.padding
+-@@ -16,6 +23,7 @@
+- import androidx.compose.foundation.layout.width
+- import androidx.compose.foundation.layout.wrapContentSize
+- import androidx.compose.foundation.shape.RoundedCornerShape
+-+import androidx.compose.foundation.text.BasicText
+- import androidx.compose.foundation.text.KeyboardOptions
+- import androidx.compose.material.icons.Icons
+- import androidx.compose.material.icons.filled.Info
+-@@ -23,12 +31,15 @@
+- import androidx.compose.material.icons.filled.Person
+- import androidx.compose.material3.Button
+- import androidx.compose.material3.ButtonDefaults
+-+import androidx.compose.material3.Card
+-+import androidx.compose.material3.CardDefaults
+- import androidx.compose.material3.Checkbox
+- import androidx.compose.material3.DropdownMenuItem
+- import androidx.compose.material3.ExperimentalMaterial3Api
+- import androidx.compose.material3.ExposedDropdownMenuDefaults
+- import androidx.compose.material3.Icon
+--import androidx.compose.material3.IconButton
+-+import androidx.compose.material3.LocalContentColor
+-+import androidx.compose.material3.MaterialTheme
+- import androidx.compose.material3.OutlinedTextField
+- import androidx.compose.material3.Text
+- import androidx.compose.material3.TextField
+-@@ -41,6 +52,9 @@
+- import androidx.compose.ui.Modifier
+- import androidx.compose.ui.draw.clip
+- import androidx.compose.ui.graphics.Color
+-+import androidx.compose.ui.input.pointer.PointerInputScope
+-+import androidx.compose.ui.input.pointer.pointerInput
+-+import androidx.compose.ui.input.pointer.positionChangeConsumed
+- import androidx.compose.ui.platform.LocalContext
+- import androidx.compose.ui.res.painterResource
+- import androidx.compose.ui.text.TextStyle
+-@@ -49,15 +63,11 @@
+- import androidx.compose.ui.text.font.FontSynthesis
+- import androidx.compose.ui.text.font.FontWeight
+- import androidx.compose.ui.text.input.KeyboardType
+--import androidx.compose.ui.text.input.PasswordVisualTransformation
+--import androidx.compose.ui.text.input.VisualTransformation
+-+import androidx.compose.ui.text.style.TextAlign
+- import androidx.compose.ui.unit.dp
+- import androidx.compose.ui.unit.sp
+- import com.example.civicalertoriginal.R
+- 
+--
+--
+--
+- @Composable
+- fun LogAndForgotHeader(screenLabel:String) {
+-     Column ( modifier = Modifier.fillMaxWidth(),
+-@@ -71,7 +81,7 @@
+-             .wrapContentSize(),
+-             style = TextStyle( color = Color.Black,
+-                 fontStyle = FontStyle.Normal,
+--                fontSize = 20.sp)
+-+                fontSize = 30.sp)
+-         )
+- 
+-     }
+-@@ -111,7 +121,7 @@
+- 
+- //Text fields that accept email only
+- @Composable
+--fun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){
+-+fun EmailTextFields(value:String, onChange: (String)->Unit, fieldLabel:String){
+-     Column (verticalArrangement = Arrangement.Center,
+-         horizontalAlignment = Alignment.CenterHorizontally){
+-         OutlinedTextField(value = value , onValueChange = onChange,
+-@@ -126,33 +136,11 @@
+- }
+- 
+- @Composable
+--fun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){
+--
+--    var passwordVisibility by remember { mutableStateOf(false) }
+--    val icon = if(passwordVisibility )
+--        painterResource(id = R.drawable.eye)
+--    else
+--        painterResource(id = R.drawable.hidden)
+--
+-+fun PasswordTextFields(value:String, onChange:(String)->Unit, fieldLabel:String){
+-     Column (verticalArrangement = Arrangement.Center,
+-         horizontalAlignment = Alignment.CenterHorizontally){
+--        OutlinedTextField(value = value ,
+--            onValueChange = onChange,
+--            supportingText = {
+--                Text(text = "Passwords must match")},
+-+        OutlinedTextField(value = value , onValueChange = onChange,
+-             placeholder = { Text(text = fieldLabel, color = Color.Green)},
+--
+--
+--            trailingIcon = {
+--                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {
+--                               Icon(painter = icon, contentDescription ="",
+--                                   modifier = Modifier.size(20.dp,20.dp))
+--                               
+--                           }
+--
+--            }, visualTransformation = if (passwordVisibility) VisualTransformation.None
+--            else PasswordVisualTransformation(),
+--
+-             keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),
+-             textStyle = TextStyle(color = Color.Black ), modifier = Modifier
+-                 .height(50.dp)
+-@@ -179,7 +167,7 @@
+- 
+- @Composable
+- fun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){
+--    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,
+-+    Button(onClick = onClick, shape = ButtonDefaults.shape,
+-         colors = ButtonDefaults.buttonColors(Color.Green),
+-         modifier = Modifier
+-             .width(200.dp)) {
+-@@ -192,12 +180,12 @@
+- }
+- @Composable
+- fun SignUpText(value: String){
+--    Row ( modifier = Modifier.padding(2.dp)){
+-+    Row ( modifier = Modifier.padding(10.dp)){
+-         var state by remember { mutableStateOf("") }
+-         Text(text = value, modifier = Modifier
+-         )
+- 
+--        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier
+-+        Checkbox(checked = false, onCheckedChange = {}, enabled = true, modifier = Modifier
+-             .size(20.dp)
+-             .padding(end = 16.dp, start = 12.dp)
+- 
+-@@ -363,6 +351,39 @@
+-             color = Color.Black)
+-     }
+- }
+-+@OptIn(ExperimentalMaterial3Api::class)
+-+@Composable
+-+fun Cards( value: String,){
+-+    Card(modifier = Modifier
+-+        .size(250.dp)
+-+        .padding(16.dp), shape =  RoundedCornerShape(16.dp),
+-+        colors = CardDefaults.cardColors(containerColor = Color.Green), elevation =
+-+            CardDefaults.cardElevation(defaultElevation = 8.dp)
+-+    ) {
+-+        Text(text = value, modifier = Modifier.fillMaxSize(),
+-+            style = MaterialTheme.typography.headlineMedium.copy(
+-+                color = Color.Black,
+-+                fontSize = 25.sp,
+-+                fontWeight = FontWeight.Bold,
+-+                textAlign = TextAlign.Justify
+-+            )
+-+        )
+- 
+- 
+-+    }
+-+}
+-+@Composable
+-+fun HoverableText(
+-+    text: String,
+-+    defaultColor: Color = LocalContentColor.current,
+-+    hoverColor: Color = Color.Red
+-+) {
+-+    val interactionSource = remember { MutableInteractionSource() }
+-+    val isHovered by interactionSource.collectIsHoveredAsState()
+- 
+-+    Text(
+-+        text,
+-+        color = if (isHovered) hoverColor else defaultColor,
+-+        modifier = Modifier.hoverable(interactionSource)
+-+    )
+-+}
+-Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material.icons.outlined.Info\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\n\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun DashBoard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(topBar = {\r\n            TopAppBar(title = {\r\n                Row(\r\n                    verticalAlignment = Alignment.Top,\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier.fillMaxWidth()) {\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.logo), contentDescription = \"\",\r\n                         modifier = Modifier.size(100.dp)\r\n                    )\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.AccountCircle, contentDescription = \"\",\r\n                        modifier = Modifier.size(100.dp)\r\n                    )\r\n                }\r\n            })\r\n        }, bottomBar = {\r\n           Row (verticalAlignment = Alignment.Bottom,\r\n               horizontalArrangement = Arrangement.SpaceAround){\r\n               Icon(imageVector = Icons.Filled.Home, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Outlined.Info, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Rounded.Person, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n           }\r\n        }, content = { innerPadding ->\r\n            Column {\r\n\r\n            }\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(date 1718990143112)
+-@@ -26,7 +26,7 @@
+- import androidx.compose.ui.res.painterResource
+- import androidx.compose.ui.unit.dp
+- import androidx.navigation.NavController
+--
+-+import com.example.civicalertoriginal.Components.Cards
+- import com.example.civicalertoriginal.R
+- 
+- 
+-@@ -63,7 +63,12 @@
+-            }
+-         }, content = { innerPadding ->
+-             Column {
+--
+-+                Cards(value = "View all new reports")
+-+                Row {
+-+                    Cards(value = "REPORT AN INCIDENT")
+-+                    Cards(value = "EMERGENCY CONTACTS")
+-+                }
+-+                Cards(value = "HELP & SUPPORT")
+-             }
+-         }
+-         )
+-Index: app/build.gradle.kts
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.google.gms.google.services)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.civicalertoriginal\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.civicalertoriginal\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.firebase.common.ktx)\r\n    implementation(libs.androidx.navigation.compose)\r\n    implementation(libs.firebase.database)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle.kts b/app/build.gradle.kts
+---- a/app/build.gradle.kts	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/build.gradle.kts	(date 1718990142720)
+-@@ -62,6 +62,7 @@
+-     implementation(libs.firebase.common.ktx)
+-     implementation(libs.androidx.navigation.compose)
+-     implementation(libs.firebase.database)
+-+    implementation(libs.firebase.auth)
+-     testImplementation(libs.junit)
+-     androidTestImplementation(libs.androidx.junit)
+-     androidTestImplementation(libs.androidx.espresso.core)
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.Screens.Registration\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"Login\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n\r\n    }\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(date 1718990142683)
+-@@ -14,7 +14,8 @@
+- @Composable
+- fun Navigation (){
+-     val navController = rememberNavController()
+--    NavHost(navController = navController, startDestination = "Login") {
+-+    NavHost(navController = navController, startDestination = "registration" +
+-+            "") {
+-         composable("registration"){
+-             Registration(navController)
+-         }
+-Index: gradle/libs.versions.toml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>[versions]\r\nagp = \"8.4.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nlifecycleRuntimeKtx = \"2.8.1\"\r\nactivityCompose = \"1.9.0\"\r\ncomposeBom = \"2023.08.00\"\r\nfirebaseCommonKtx = \"21.0.0\"\r\nnavigationCompose = \"2.7.7\"\r\ngoogleGmsGoogleServices = \"4.4.2\"\r\nfirebaseDatabase = \"21.0.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nfirebase-common-ktx = { group = \"com.google.firebase\", name = \"firebase-common-ktx\", version.ref = \"firebaseCommonKtx\" }\r\nandroidx-navigation-compose = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref = \"navigationCompose\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngoogle-gms-google-services = { id = \"com.google.gms.google-services\", version.ref = \"googleGmsGoogleServices\" }\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+---- a/gradle/libs.versions.toml	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/gradle/libs.versions.toml	(date 1718990142734)
+-@@ -12,6 +12,7 @@
+- navigationCompose = "2.7.7"
+- googleGmsGoogleServices = "4.4.2"
+- firebaseDatabase = "21.0.0"
+-+firebaseAuth = "23.0.0"
+- 
+- [libraries]
+- androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
+-@@ -31,6 +32,7 @@
+- firebase-common-ktx = { group = "com.google.firebase", name = "firebase-common-ktx", version.ref = "firebaseCommonKtx" }
+- androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
+- firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
+-+firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+- 
+- [plugins]
+- android-application = { id = "com.android.application", version.ref = "agp" }
+-Index: app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.Navigation\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.ui.theme.CivicAlertOriginalTheme\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.FirebaseApp\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        FirebaseApp.initializeApp(this)\r\n        setContent {\r\n            CivicAlertOriginalTheme {\r\n                Navigation()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(date 1718990142702)
+-@@ -30,6 +30,7 @@
+-         setContent {
+-             CivicAlertOriginalTheme {
+-                 Navigation()
+-+
+-             }
+-         }
+-     }
+Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>@file:Suppress(\"UNUSED_EXPRESSION\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Call\r\nimport androidx.compose.material.icons.filled.Email\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.TextFieldValue\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.text.style.TextDecoration\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.window.Dialog\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun Logo(){\r\n    Image(painter = painterResource(id = R.drawable.logo), contentDescription =\"\" )\r\n}\r\n@Composable\r\nfun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {\r\n    Card(\r\n        modifier = Modifier\r\n            .size(160.dp)\r\n            .clickable(onClick = onClick),\r\n        colors = CardDefaults.cardColors(containerColor = Color.White), // Set the background color to white\r\n        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp) // Set elevation to add shadow\r\n    ) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(8.dp),\r\n            verticalArrangement = Arrangement.Center,\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            Image(\r\n                painter = painterResource(id = iconRes),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(40.dp)\r\n            )\r\n            Text(text = label)\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun ProfileText(description: String , value: String) {\r\n    var textFieldVisible by remember { mutableStateOf(false) }\r\n    var textFieldValue by remember { mutableStateOf(TextFieldValue()) }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .padding(10.dp)\r\n            .fillMaxWidth()\r\n    ) {\r\n        // Clickable Text\r\n        Text(text = description, fontFamily = FontFamily.SansSerif, fontSize = 17.sp)\r\n        Spacer(modifier = Modifier.size(10.dp))\r\n        Text(\r\n            text = value,\r\n            modifier = Modifier.clickable {\r\n                textFieldVisible = true\r\n            },\r\n            fontSize = 25.sp,\r\n            fontFamily = FontFamily.Default,\r\n            style = MaterialTheme.typography.bodyMedium.copy(\r\n                textDecoration = TextDecoration.Underline\r\n            )\r\n        )\r\n\r\n        // Conditional Text Field\r\n        if (textFieldVisible) {\r\n            Spacer(modifier = Modifier.height(10.dp))\r\n            TextField(\r\n                value = textFieldValue,\r\n                onValueChange = { textFieldValue = it },\r\n                modifier = Modifier.fillMaxWidth()\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            Button(\r\n                onClick = {\r\n                    textFieldVisible = false\r\n                    // Perform any actions with the text field value here\r\n                },\r\n                modifier = Modifier.align(alignment = androidx.compose.ui.Alignment.End)\r\n            ) {\r\n                Text(\"Save\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    @Composable\r\n    fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {\r\n        Button(\r\n            onClick = onClick, shape = ButtonDefaults.shape,\r\n            colors = ButtonDefaults.buttonColors(Color.Red),\r\n            modifier = Modifier\r\n                .width(400.dp)\r\n        ) {\r\n            Text(\r\n                text = name, modifier = Modifier\r\n                    .size(80.dp, 30.dp)\r\n                    .padding(start = 17.dp, top = 4.dp)\r\n                    .align(Alignment.CenterVertically)\r\n                    .fillMaxWidth(),\r\n                color = Color.Black\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun ContactUsContactButton(value: String){\r\n    Button(onClick = { /* contact logic*/ }, colors = ButtonDefaults.buttonColors(\r\n        contentColor = Color.Black, containerColor = Color.LightGray), shape = RoundedCornerShape(15.dp),\r\n        modifier = Modifier\r\n            .padding(8.dp)\r\n            .size(170.dp, 50.dp)\r\n    ) {\r\n        Icon(imageVector = Icons.Default.Call, contentDescription = \"\", modifier = Modifier.size(20.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = value, fontSize = 15.sp)\r\n\r\n    }\r\n}\r\n@Composable\r\nfun ContactUSEmailButton(value: String){\r\n    Button(onClick = { /*email logic*/ }, colors = ButtonDefaults.buttonColors(\r\n        contentColor = Color.Black, containerColor = Color.LightGray), shape = RoundedCornerShape(15.dp),\r\n        modifier = Modifier\r\n            .padding(8.dp)\r\n            .size(170.dp, 50.dp)\r\n    ) {\r\n        Icon(imageVector = Icons.Default.Email, contentDescription = \"\", modifier = Modifier.size(20.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = value, fontSize = 18.sp)\r\n\r\n    }\r\n\r\n}\r\n@Composable\r\nfun ContactUsWhatsApp(value: String){\r\n    Column(horizontalAlignment = Alignment.CenterHorizontally) {\r\n        Row {\r\n            Image(painter = painterResource(id = R.drawable.whatsapp),\r\n                contentDescription =\"\" , modifier = Modifier.size(50.dp))\r\n            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }\r\n        Text(text = \"083 3456 345\", color = Color.Cyan)\r\n    }\r\n\r\n}\r\n@Composable\r\nfun ContactUsWMessanger(value: String){\r\n    Column (horizontalAlignment = Alignment.CenterHorizontally) {\r\n        Row {\r\n            Image(painter = painterResource(id = R.drawable.messenger), contentDescription =\"\" , modifier = Modifier.size(50.dp))\r\n            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }\r\n        Text(text = \"facebook\", color = Color.Cyan)\r\n    }\r\n\r\n}\r\n@Composable\r\nfun ContactUsInsta(value: String){\r\n    Column (horizontalAlignment = Alignment.CenterHorizontally) {\r\n        Row {\r\n            Image(painter = painterResource(id = R.drawable.instagram), contentDescription =\"\" , modifier = Modifier.size(50.dp))\r\n            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }\r\n        Text(text = \"@civicAlert\", color = Color.Cyan)\r\n    }\r\n\r\n}\r\n@Composable\r\nfun ContactUsTwitter(value: String){\r\n    Column(horizontalAlignment = Alignment.CenterHorizontally) {\r\n        Row {\r\n            Image(painter = painterResource(id = R.drawable.twitter), contentDescription =\"\" , modifier = Modifier.size(50.dp))\r\n            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }\r\n        Text(text = \"@civicAlert\", color = Color.Cyan)\r\n    }\r\n\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+--- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	
++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	
+@@ -475,73 +475,3 @@
+ 
+ 
+ 
+-@Composable
+-fun ContactUsContactButton(value: String){
+-    Button(onClick = { /* contact logic*/ }, colors = ButtonDefaults.buttonColors(
+-        contentColor = Color.Black, containerColor = Color.LightGray), shape = RoundedCornerShape(15.dp),
+-        modifier = Modifier
+-            .padding(8.dp)
+-            .size(170.dp, 50.dp)
+-    ) {
+-        Icon(imageVector = Icons.Default.Call, contentDescription = "", modifier = Modifier.size(20.dp))
+-        Spacer(modifier = Modifier.size(5.dp))
+-        Text(text = value, fontSize = 15.sp)
+-
+-    }
+-}
+-@Composable
+-fun ContactUSEmailButton(value: String){
+-    Button(onClick = { /*email logic*/ }, colors = ButtonDefaults.buttonColors(
+-        contentColor = Color.Black, containerColor = Color.LightGray), shape = RoundedCornerShape(15.dp),
+-        modifier = Modifier
+-            .padding(8.dp)
+-            .size(170.dp, 50.dp)
+-    ) {
+-        Icon(imageVector = Icons.Default.Email, contentDescription = "", modifier = Modifier.size(20.dp))
+-        Spacer(modifier = Modifier.size(5.dp))
+-        Text(text = value, fontSize = 18.sp)
+-
+-    }
+-
+-}
+-@Composable
+-fun ContactUsWhatsApp(value: String){
+-    Column(horizontalAlignment = Alignment.CenterHorizontally) {
+-        Row {
+-            Image(painter = painterResource(id = R.drawable.whatsapp),
+-                contentDescription ="" , modifier = Modifier.size(50.dp))
+-            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
+-        Text(text = "083 3456 345", color = Color.Cyan)
+-    }
+-
+-}
+-@Composable
+-fun ContactUsWMessanger(value: String){
+-    Column (horizontalAlignment = Alignment.CenterHorizontally) {
+-        Row {
+-            Image(painter = painterResource(id = R.drawable.messenger), contentDescription ="" , modifier = Modifier.size(50.dp))
+-            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
+-        Text(text = "facebook", color = Color.Cyan)
+-    }
+-
+-}
+-@Composable
+-fun ContactUsInsta(value: String){
+-    Column (horizontalAlignment = Alignment.CenterHorizontally) {
+-        Row {
+-            Image(painter = painterResource(id = R.drawable.instagram), contentDescription ="" , modifier = Modifier.size(50.dp))
+-            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
+-        Text(text = "@civicAlert", color = Color.Cyan)
+-    }
+-
+-}
+-@Composable
+-fun ContactUsTwitter(value: String){
+-    Column(horizontalAlignment = Alignment.CenterHorizontally) {
+-        Row {
+-            Image(painter = painterResource(id = R.drawable.twitter), contentDescription ="" , modifier = Modifier.size(50.dp))
+-            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
+-        Text(text = "@civicAlert", color = Color.Cyan)
+-    }
+-
+-}
+\ No newline at end of file
Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.civicalertoriginal.Components\r\n\r\n\r\nimport civicalertoriginal.Screen.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.*\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"Login\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            Dashboard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n        composable(\"userProfile\"){\r\n            UpdateProfile(navController)\r\n        }\r\n        composable(\"emergencyContacts\"){\r\n            ContactUs(navController)\r\n        }\r\n        composable(\"Viewreports\"){\r\n            ViewReports(navController)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
--- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(date 1719860866716)
@@ -3,6 +3,7 @@
 
 import civicalertoriginal.Screen.*
 import androidx.compose.runtime.Composable
+import androidx.compose.runtime.internal.composableLambda
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.composable
 import androidx.navigation.compose.rememberNavController
@@ -37,5 +38,8 @@
         composable("Viewreports"){
             ViewReports(navController)
         }
+        composable("helpSupport"){
+            HelpAndSupport(navController)
+        }
     }
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1719860866712)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_48_[Changes]/shelved.patch	(date 1719860866712)
@@ -0,0 +1,39 @@
+Index: app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.*\r\nimport com.example.civicalertoriginal.R\r\n\r\n@Composable\r\nfun ContactUs(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(\r\n            bottomBar = {\r\n                BottomAppBar {\r\n                    Row(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        horizontalArrangement = Arrangement.SpaceAround\r\n                    ) {\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.Home,\r\n                            label = \"HOME\",\r\n                            onClick = { navController.navigate(\"Dashboard\") }\r\n                        )\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.Edit,\r\n                            label = \"MAKE REPORTS\",\r\n                            onClick = { /* Handle make reports click */ }\r\n                        )\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.List,\r\n                            label = \"VIEW REPORTS\",\r\n                            onClick = { /* Handle view reports click */ }\r\n                        )\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.Call,\r\n                            label = \"CALL\",\r\n                            onClick = { navController.navigate(\"emergencyContacts\") }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        ) { innerPadding ->\r\n            Column(\r\n                modifier = Modifier.padding(innerPadding).padding(16.dp),\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n            ) {\r\n                Image(\r\n                    painter = painterResource(id = R.drawable.contact),\r\n                    contentDescription = \"\",\r\n                    modifier = Modifier.size(120.dp, 150.dp)\r\n                )\r\n                Spacer(modifier = Modifier.height(5.dp))\r\n                Text(\r\n                    text = \"Contact Us\",\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    fontSize = 50.sp,\r\n                    fontFamily = FontFamily.Default,\r\n                    fontStyle = FontStyle.Normal,\r\n                    fontWeight = FontWeight.Bold\r\n                )\r\n                Text(text = \"If you have inquiries, get in touch with us. We will be more than happy to help you.\")\r\n                Spacer(modifier = Modifier.height(20.dp))\r\n                Row(\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    verticalAlignment = Alignment.CenterVertically,\r\n                    horizontalArrangement = Arrangement.SpaceEvenly\r\n                ) {\r\n                    ContactUsContactButton(value = \"Call\")\r\n                    ContactUSEmailButton(value = \"Email\")\r\n                }\r\n                Spacer(modifier = Modifier.height(20.dp))\r\n                Text(text = \"Social Media\", fontSize = 25.sp)\r\n                Column(\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    horizontalAlignment = Alignment.CenterHorizontally,\r\n                    verticalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    Spacer(modifier = Modifier.height(15.dp))\r\n                    Row {\r\n                        ContactUsWhatsApp(value = \"WhatsApp\")\r\n                        Spacer(modifier = Modifier.width(35.dp))\r\n                        ContactUsInsta(value = \"Instagram\")\r\n                    }\r\n                    Spacer(modifier = Modifier.height(10.dp))\r\n                    Row {\r\n                        ContactUsWMessanger(value = \"Facebook\")\r\n                        Spacer(modifier = Modifier.width(35.dp))\r\n                        ContactUsTwitter(value = \"Twitter\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun BottomNavItem(icon: ImageVector, label: String, onClick: () -> Unit) {\r\n    Column(\r\n        horizontalAlignment = Alignment.CenterHorizontally,\r\n        modifier = Modifier.clickable { onClick() }\r\n    ) {\r\n        Icon(imageVector = icon, contentDescription = label, modifier = Modifier.size(30.dp))\r\n        Text(text = label, fontSize = 15.sp)\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun ContactUsPreview() {\r\n    val navController = rememberNavController()\r\n    ContactUs(navController)\r\n}
+===================================================================
+diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
+--- a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	
++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	
+@@ -85,8 +85,8 @@
+                     verticalAlignment = Alignment.CenterVertically,
+                     horizontalArrangement = Arrangement.SpaceEvenly
+                 ) {
+-                    ContactUsContactButton(value = "Call")
+-                    ContactUSEmailButton(value = "Email")
++                   // ContactUsContactButton(value = "Call")
++                   // ContactUSEmailButton(value = "Email")
+                 }
+                 Spacer(modifier = Modifier.height(20.dp))
+                 Text(text = "Social Media", fontSize = 25.sp)
+@@ -97,15 +97,15 @@
+                 ) {
+                     Spacer(modifier = Modifier.height(15.dp))
+                     Row {
+-                        ContactUsWhatsApp(value = "WhatsApp")
++                      //  ContactUsWhatsApp(value = "WhatsApp")
+                         Spacer(modifier = Modifier.width(35.dp))
+-                        ContactUsInsta(value = "Instagram")
++                            //  ContactUsInsta(value = "Instagram")
+                     }
+                     Spacer(modifier = Modifier.height(10.dp))
+                     Row {
+-                        ContactUsWMessanger(value = "Facebook")
++                      //  ContactUsWMessanger(value = "Facebook")
+                         Spacer(modifier = Modifier.width(35.dp))
+-                        ContactUsTwitter(value = "Twitter")
++                      //  ContactUsTwitter(value = "Twitter")
+                     }
+                 }
+             }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1\" date=\"1719056828521\" recycled=\"true\" deleted=\"true\">\r\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch\" />\r\n  <option name=\"DESCRIPTION\" value=\"Uncommitted changes before Checkout at 22/06/2024 13:47 [Changes]\" />\r\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml	(date 1719860866703)
@@ -1,4 +1,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1" date="1719056828521" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 22/06/2024 13:47 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1719860866709)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_06_2024_19_36_[Changes]/shelved.patch	(date 1719860866709)
@@ -0,0 +1,3599 @@
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15__Changes_.xml	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ /dev/null	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]" date="1718990148012" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 21/06/2024 19:15 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17__Changes_.xml	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ /dev/null	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]" date="1718990254322" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/06/2024 19:17 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_21_06_2024_19_17_[Changes]/shelved.patch	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ /dev/null	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
+@@ -1,317 +0,0 @@
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1718990142616)
+-@@ -1,14 +1,21 @@
+-+@file:Suppress("UNREACHABLE_CODE")
+-+
+- package com.example.civicalertoriginal.Components
+- 
+- import android.widget.Toast
+-+import androidx.compose.animation.animateColorAsState
+- import androidx.compose.foundation.Image
+- import androidx.compose.foundation.background
+- import androidx.compose.foundation.clickable
+-+import androidx.compose.foundation.hoverable
+-+import androidx.compose.foundation.interaction.MutableInteractionSource
+-+import androidx.compose.foundation.interaction.collectIsHoveredAsState
+- import androidx.compose.foundation.layout.Arrangement
+- import androidx.compose.foundation.layout.Box
+- import androidx.compose.foundation.layout.Column
+- import androidx.compose.foundation.layout.Row
+- import androidx.compose.foundation.layout.Spacer
+-+import androidx.compose.foundation.layout.fillMaxSize
+- import androidx.compose.foundation.layout.fillMaxWidth
+- import androidx.compose.foundation.layout.height
+- import androidx.compose.foundation.layout.padding
+-@@ -16,6 +23,7 @@
+- import androidx.compose.foundation.layout.width
+- import androidx.compose.foundation.layout.wrapContentSize
+- import androidx.compose.foundation.shape.RoundedCornerShape
+-+import androidx.compose.foundation.text.BasicText
+- import androidx.compose.foundation.text.KeyboardOptions
+- import androidx.compose.material.icons.Icons
+- import androidx.compose.material.icons.filled.Info
+-@@ -23,12 +31,15 @@
+- import androidx.compose.material.icons.filled.Person
+- import androidx.compose.material3.Button
+- import androidx.compose.material3.ButtonDefaults
+-+import androidx.compose.material3.Card
+-+import androidx.compose.material3.CardDefaults
+- import androidx.compose.material3.Checkbox
+- import androidx.compose.material3.DropdownMenuItem
+- import androidx.compose.material3.ExperimentalMaterial3Api
+- import androidx.compose.material3.ExposedDropdownMenuDefaults
+- import androidx.compose.material3.Icon
+--import androidx.compose.material3.IconButton
+-+import androidx.compose.material3.LocalContentColor
+-+import androidx.compose.material3.MaterialTheme
+- import androidx.compose.material3.OutlinedTextField
+- import androidx.compose.material3.Text
+- import androidx.compose.material3.TextField
+-@@ -41,6 +52,9 @@
+- import androidx.compose.ui.Modifier
+- import androidx.compose.ui.draw.clip
+- import androidx.compose.ui.graphics.Color
+-+import androidx.compose.ui.input.pointer.PointerInputScope
+-+import androidx.compose.ui.input.pointer.pointerInput
+-+import androidx.compose.ui.input.pointer.positionChangeConsumed
+- import androidx.compose.ui.platform.LocalContext
+- import androidx.compose.ui.res.painterResource
+- import androidx.compose.ui.text.TextStyle
+-@@ -49,15 +63,11 @@
+- import androidx.compose.ui.text.font.FontSynthesis
+- import androidx.compose.ui.text.font.FontWeight
+- import androidx.compose.ui.text.input.KeyboardType
+--import androidx.compose.ui.text.input.PasswordVisualTransformation
+--import androidx.compose.ui.text.input.VisualTransformation
+-+import androidx.compose.ui.text.style.TextAlign
+- import androidx.compose.ui.unit.dp
+- import androidx.compose.ui.unit.sp
+- import com.example.civicalertoriginal.R
+- 
+--
+--
+--
+- @Composable
+- fun LogAndForgotHeader(screenLabel:String) {
+-     Column ( modifier = Modifier.fillMaxWidth(),
+-@@ -71,7 +81,7 @@
+-             .wrapContentSize(),
+-             style = TextStyle( color = Color.Black,
+-                 fontStyle = FontStyle.Normal,
+--                fontSize = 20.sp)
+-+                fontSize = 30.sp)
+-         )
+- 
+-     }
+-@@ -111,7 +121,7 @@
+- 
+- //Text fields that accept email only
+- @Composable
+--fun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){
+-+fun EmailTextFields(value:String, onChange: (String)->Unit, fieldLabel:String){
+-     Column (verticalArrangement = Arrangement.Center,
+-         horizontalAlignment = Alignment.CenterHorizontally){
+-         OutlinedTextField(value = value , onValueChange = onChange,
+-@@ -126,33 +136,11 @@
+- }
+- 
+- @Composable
+--fun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){
+--
+--    var passwordVisibility by remember { mutableStateOf(false) }
+--    val icon = if(passwordVisibility )
+--        painterResource(id = R.drawable.eye)
+--    else
+--        painterResource(id = R.drawable.hidden)
+--
+-+fun PasswordTextFields(value:String, onChange:(String)->Unit, fieldLabel:String){
+-     Column (verticalArrangement = Arrangement.Center,
+-         horizontalAlignment = Alignment.CenterHorizontally){
+--        OutlinedTextField(value = value ,
+--            onValueChange = onChange,
+--            supportingText = {
+--                Text(text = "Passwords must match")},
+-+        OutlinedTextField(value = value , onValueChange = onChange,
+-             placeholder = { Text(text = fieldLabel, color = Color.Green)},
+--
+--
+--            trailingIcon = {
+--                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {
+--                               Icon(painter = icon, contentDescription ="",
+--                                   modifier = Modifier.size(20.dp,20.dp))
+--                               
+--                           }
+--
+--            }, visualTransformation = if (passwordVisibility) VisualTransformation.None
+--            else PasswordVisualTransformation(),
+--
+-             keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),
+-             textStyle = TextStyle(color = Color.Black ), modifier = Modifier
+-                 .height(50.dp)
+-@@ -179,7 +167,7 @@
+- 
+- @Composable
+- fun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){
+--    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,
+-+    Button(onClick = onClick, shape = ButtonDefaults.shape,
+-         colors = ButtonDefaults.buttonColors(Color.Green),
+-         modifier = Modifier
+-             .width(200.dp)) {
+-@@ -192,12 +180,12 @@
+- }
+- @Composable
+- fun SignUpText(value: String){
+--    Row ( modifier = Modifier.padding(2.dp)){
+-+    Row ( modifier = Modifier.padding(10.dp)){
+-         var state by remember { mutableStateOf("") }
+-         Text(text = value, modifier = Modifier
+-         )
+- 
+--        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier
+-+        Checkbox(checked = false, onCheckedChange = {}, enabled = true, modifier = Modifier
+-             .size(20.dp)
+-             .padding(end = 16.dp, start = 12.dp)
+- 
+-@@ -363,6 +351,39 @@
+-             color = Color.Black)
+-     }
+- }
+-+@OptIn(ExperimentalMaterial3Api::class)
+-+@Composable
+-+fun Cards( value: String,){
+-+    Card(modifier = Modifier
+-+        .size(250.dp)
+-+        .padding(16.dp), shape =  RoundedCornerShape(16.dp),
+-+        colors = CardDefaults.cardColors(containerColor = Color.Green), elevation =
+-+            CardDefaults.cardElevation(defaultElevation = 8.dp)
+-+    ) {
+-+        Text(text = value, modifier = Modifier.fillMaxSize(),
+-+            style = MaterialTheme.typography.headlineMedium.copy(
+-+                color = Color.Black,
+-+                fontSize = 25.sp,
+-+                fontWeight = FontWeight.Bold,
+-+                textAlign = TextAlign.Justify
+-+            )
+-+        )
+- 
+- 
+-+    }
+-+}
+-+@Composable
+-+fun HoverableText(
+-+    text: String,
+-+    defaultColor: Color = LocalContentColor.current,
+-+    hoverColor: Color = Color.Red
+-+) {
+-+    val interactionSource = remember { MutableInteractionSource() }
+-+    val isHovered by interactionSource.collectIsHoveredAsState()
+- 
+-+    Text(
+-+        text,
+-+        color = if (isHovered) hoverColor else defaultColor,
+-+        modifier = Modifier.hoverable(interactionSource)
+-+    )
+-+}
+-Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material.icons.outlined.Info\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\n\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun DashBoard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(topBar = {\r\n            TopAppBar(title = {\r\n                Row(\r\n                    verticalAlignment = Alignment.Top,\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier.fillMaxWidth()) {\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.logo), contentDescription = \"\",\r\n                         modifier = Modifier.size(100.dp)\r\n                    )\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.AccountCircle, contentDescription = \"\",\r\n                        modifier = Modifier.size(100.dp)\r\n                    )\r\n                }\r\n            })\r\n        }, bottomBar = {\r\n           Row (verticalAlignment = Alignment.Bottom,\r\n               horizontalArrangement = Arrangement.SpaceAround){\r\n               Icon(imageVector = Icons.Filled.Home, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Outlined.Info, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Rounded.Person, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n           }\r\n        }, content = { innerPadding ->\r\n            Column {\r\n\r\n            }\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(date 1718990143112)
+-@@ -26,7 +26,7 @@
+- import androidx.compose.ui.res.painterResource
+- import androidx.compose.ui.unit.dp
+- import androidx.navigation.NavController
+--
+-+import com.example.civicalertoriginal.Components.Cards
+- import com.example.civicalertoriginal.R
+- 
+- 
+-@@ -63,7 +63,12 @@
+-            }
+-         }, content = { innerPadding ->
+-             Column {
+--
+-+                Cards(value = "View all new reports")
+-+                Row {
+-+                    Cards(value = "REPORT AN INCIDENT")
+-+                    Cards(value = "EMERGENCY CONTACTS")
+-+                }
+-+                Cards(value = "HELP & SUPPORT")
+-             }
+-         }
+-         )
+-Index: app/build.gradle.kts
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.google.gms.google.services)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.civicalertoriginal\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.civicalertoriginal\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.firebase.common.ktx)\r\n    implementation(libs.androidx.navigation.compose)\r\n    implementation(libs.firebase.database)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle.kts b/app/build.gradle.kts
+---- a/app/build.gradle.kts	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/build.gradle.kts	(date 1718990142720)
+-@@ -62,6 +62,7 @@
+-     implementation(libs.firebase.common.ktx)
+-     implementation(libs.androidx.navigation.compose)
+-     implementation(libs.firebase.database)
+-+    implementation(libs.firebase.auth)
+-     testImplementation(libs.junit)
+-     androidTestImplementation(libs.androidx.junit)
+-     androidTestImplementation(libs.androidx.espresso.core)
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.Screens.Registration\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"Login\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n\r\n    }\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(date 1718990142683)
+-@@ -14,7 +14,8 @@
+- @Composable
+- fun Navigation (){
+-     val navController = rememberNavController()
+--    NavHost(navController = navController, startDestination = "Login") {
+-+    NavHost(navController = navController, startDestination = "registration" +
+-+            "") {
+-         composable("registration"){
+-             Registration(navController)
+-         }
+-Index: gradle/libs.versions.toml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>[versions]\r\nagp = \"8.4.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nlifecycleRuntimeKtx = \"2.8.1\"\r\nactivityCompose = \"1.9.0\"\r\ncomposeBom = \"2023.08.00\"\r\nfirebaseCommonKtx = \"21.0.0\"\r\nnavigationCompose = \"2.7.7\"\r\ngoogleGmsGoogleServices = \"4.4.2\"\r\nfirebaseDatabase = \"21.0.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nfirebase-common-ktx = { group = \"com.google.firebase\", name = \"firebase-common-ktx\", version.ref = \"firebaseCommonKtx\" }\r\nandroidx-navigation-compose = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref = \"navigationCompose\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngoogle-gms-google-services = { id = \"com.google.gms.google-services\", version.ref = \"googleGmsGoogleServices\" }\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+---- a/gradle/libs.versions.toml	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/gradle/libs.versions.toml	(date 1718990142734)
+-@@ -12,6 +12,7 @@
+- navigationCompose = "2.7.7"
+- googleGmsGoogleServices = "4.4.2"
+- firebaseDatabase = "21.0.0"
+-+firebaseAuth = "23.0.0"
+- 
+- [libraries]
+- androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
+-@@ -31,6 +32,7 @@
+- firebase-common-ktx = { group = "com.google.firebase", name = "firebase-common-ktx", version.ref = "firebaseCommonKtx" }
+- androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
+- firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
+-+firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+- 
+- [plugins]
+- android-application = { id = "com.android.application", version.ref = "agp" }
+-Index: app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.Navigation\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.ui.theme.CivicAlertOriginalTheme\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.FirebaseApp\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        FirebaseApp.initializeApp(this)\r\n        setContent {\r\n            CivicAlertOriginalTheme {\r\n                Navigation()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(revision dd2ca91062889439b9abd4ca7c5ac9e272463ebb)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(date 1718990142702)
+-@@ -30,6 +30,7 @@
+-         setContent {
+-             CivicAlertOriginalTheme {
+-                 Navigation()
+-+
+-             }
+-         }
+-     }
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ /dev/null	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
+@@ -1,25 +0,0 @@
+-Index: .idea/appInsightsSettings.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AppInsightsSettings\">\r\n    <option name=\"tabSettings\">\r\n      <map>\r\n        <entry key=\"Firebase Crashlytics\">\r\n          <value>\r\n            <InsightsFilterSettings>\r\n              <option name=\"connection\">\r\n                <ConnectionSetting>\r\n                  <option name=\"appId\" value=\"com.example.civicalertoriginal\" />\r\n                  <option name=\"mobileSdkAppId\" value=\"1:858192785417:android:66010e84f19bcaa329c8d8\" />\r\n                  <option name=\"projectId\" value=\"civicalertoriginal\" />\r\n                  <option name=\"projectNumber\" value=\"858192785417\" />\r\n                </ConnectionSetting>\r\n              </option>\r\n              <option name=\"signal\" value=\"SIGNAL_UNSPECIFIED\" />\r\n              <option name=\"timeIntervalDays\" value=\"THIRTY_DAYS\" />\r\n              <option name=\"visibilityType\" value=\"ALL\" />\r\n            </InsightsFilterSettings>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/appInsightsSettings.xml b/.idea/appInsightsSettings.xml
+---- a/.idea/appInsightsSettings.xml	
+-+++ b/.idea/appInsightsSettings.xml	
+-@@ -6,14 +6,6 @@
+-         <entry key="Firebase Crashlytics">
+-           <value>
+-             <InsightsFilterSettings>
+--              <option name="connection">
+--                <ConnectionSetting>
+--                  <option name="appId" value="com.example.civicalertoriginal" />
+--                  <option name="mobileSdkAppId" value="1:858192785417:android:66010e84f19bcaa329c8d8" />
+--                  <option name="projectId" value="civicalertoriginal" />
+--                  <option name="projectNumber" value="858192785417" />
+--                </ConnectionSetting>
+--              </option>
+-               <option name="signal" value="SIGNAL_UNSPECIFIED" />
+-               <option name="timeIntervalDays" value="THIRTY_DAYS" />
+-               <option name="visibilityType" value="ALL" />
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47__Changes_1.xml	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ /dev/null	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1" date="1719056828521" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_06_2024_13_47_[Changes]1/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 22/06/2024 13:47 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_21_06_2024_19_15_[Changes]/shelved.patch	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ /dev/null	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
+@@ -1,176 +0,0 @@
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>@file:Suppress(\"UNREACHABLE_CODE\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.animation.animateColorAsState\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.hoverable\r\nimport androidx.compose.foundation.interaction.MutableInteractionSource\r\nimport androidx.compose.foundation.interaction.collectIsHoveredAsState\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.BasicText\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.LocalContentColor\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.input.pointer.PointerInputScope\r\nimport androidx.compose.ui.input.pointer.pointerInput\r\nimport androidx.compose.ui.input.pointer.positionChangeConsumed\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.civicalertoriginal.R\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 30.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String, onChange: (String)->Unit, fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String, onChange:(String)->Unit, fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(10.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = {}, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Cards( value: String,){\r\n    Card(modifier = Modifier\r\n        .size(250.dp)\r\n        .padding(16.dp), shape =  RoundedCornerShape(16.dp),\r\n        colors = CardDefaults.cardColors(containerColor = Color.Green), elevation =\r\n            CardDefaults.cardElevation(defaultElevation = 8.dp)\r\n    ) {\r\n        Text(text = value, modifier = Modifier.fillMaxSize(),\r\n            style = MaterialTheme.typography.headlineMedium.copy(\r\n                color = Color.Black,\r\n                fontSize = 25.sp,\r\n                fontWeight = FontWeight.Bold,\r\n                textAlign = TextAlign.Justify\r\n            )\r\n        )\r\n\r\n\r\n    }\r\n}\r\n@Composable\r\nfun HoverableText(\r\n    text: String,\r\n    defaultColor: Color = LocalContentColor.current,\r\n    hoverColor: Color = Color.Red\r\n) {\r\n    val interactionSource = remember { MutableInteractionSource() }\r\n    val isHovered by interactionSource.collectIsHoveredAsState()\r\n\r\n    Text(\r\n        text,\r\n        color = if (isHovered) hoverColor else defaultColor,\r\n        modifier = Modifier.hoverable(interactionSource)\r\n    )\r\n}\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1718955370008)
+-@@ -368,22 +368,6 @@
+-                 textAlign = TextAlign.Justify
+-             )
+-         )
+--
+--
+-     }
+- }
+--@Composable
+--fun HoverableText(
+--    text: String,
+--    defaultColor: Color = LocalContentColor.current,
+--    hoverColor: Color = Color.Red
+--) {
+--    val interactionSource = remember { MutableInteractionSource() }
+--    val isHovered by interactionSource.collectIsHoveredAsState()
+- 
+--    Text(
+--        text,
+--        color = if (isHovered) hoverColor else defaultColor,
+--        modifier = Modifier.hoverable(interactionSource)
+--    )
+--}
+-Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.Screens.Registration\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"Login\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n\r\n    }\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(date 1718958070656)
+-@@ -14,7 +14,8 @@
+- @Composable
+- fun Navigation (){
+-     val navController = rememberNavController()
+--    NavHost(navController = navController, startDestination = "Login") {
+-+    NavHost(navController = navController, startDestination = "registration" +
+-+            "") {
+-         composable("registration"){
+-             Registration(navController)
+-         }
+-Index: app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.Navigation\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.ui.theme.CivicAlertOriginalTheme\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.FirebaseApp\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        FirebaseApp.initializeApp(this)\r\n        setContent {\r\n            CivicAlertOriginalTheme {\r\n                Navigation()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	(date 1718954254938)
+-@@ -30,6 +30,7 @@
+-         setContent {
+-             CivicAlertOriginalTheme {
+-                 Navigation()
+-+
+-             }
+-         }
+-     }
+-Index: app/build.gradle.kts
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.google.gms.google.services)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.civicalertoriginal\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.civicalertoriginal\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.firebase.common.ktx)\r\n    implementation(libs.androidx.navigation.compose)\r\n    implementation(libs.firebase.database)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle.kts b/app/build.gradle.kts
+---- a/app/build.gradle.kts	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/build.gradle.kts	(date 1718954601181)
+-@@ -63,6 +63,7 @@
+-     implementation(libs.firebase.common.ktx)
+-     implementation(libs.androidx.navigation.compose)
+-     implementation(libs.firebase.database)
+-+    implementation(libs.firebase.auth)
+-     testImplementation(libs.junit)
+-     androidTestImplementation(libs.androidx.junit)
+-     androidTestImplementation(libs.androidx.espresso.core)
+-Index: gradle/libs.versions.toml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>[versions]\r\nagp = \"8.4.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nlifecycleRuntimeKtx = \"2.8.1\"\r\nactivityCompose = \"1.9.0\"\r\ncomposeBom = \"2023.08.00\"\r\nfirebaseCommonKtx = \"21.0.0\"\r\nnavigationCompose = \"2.7.7\"\r\ngoogleGmsGoogleServices = \"4.4.2\"\r\nfirebaseDatabase = \"21.0.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nfirebase-common-ktx = { group = \"com.google.firebase\", name = \"firebase-common-ktx\", version.ref = \"firebaseCommonKtx\" }\r\nandroidx-navigation-compose = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref = \"navigationCompose\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngoogle-gms-google-services = { id = \"com.google.gms.google-services\", version.ref = \"googleGmsGoogleServices\" }\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+---- a/gradle/libs.versions.toml	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/gradle/libs.versions.toml	(date 1718954601109)
+-@@ -12,6 +12,7 @@
+- navigationCompose = "2.7.7"
+- googleGmsGoogleServices = "4.4.2"
+- firebaseDatabase = "21.0.0"
+-+firebaseAuth = "23.0.0"
+- 
+- [libraries]
+- androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
+-@@ -31,6 +32,7 @@
+- firebase-common-ktx = { group = "com.google.firebase", name = "firebase-common-ktx", version.ref = "firebaseCommonKtx" }
+- androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
+- firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
+-+firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+- 
+- [plugins]
+- android-application = { id = "com.android.application", version.ref = "agp" }
+-Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material.icons.outlined.Info\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.Cards\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun DashBoard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(topBar = {\r\n            TopAppBar(title = {\r\n                Row(\r\n                    verticalAlignment = Alignment.Top,\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier.fillMaxWidth()) {\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.logo), contentDescription = \"\",\r\n                         modifier = Modifier.size(100.dp)\r\n                    )\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.AccountCircle, contentDescription = \"\",\r\n                        modifier = Modifier.size(100.dp)\r\n                    )\r\n                }\r\n            })\r\n        }, bottomBar = {\r\n           Row (verticalAlignment = Alignment.Bottom,\r\n               horizontalArrangement = Arrangement.SpaceAround){\r\n               Icon(imageVector = Icons.Filled.Home, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Outlined.Info, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Rounded.Person, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n           }\r\n        }, content = { innerPadding ->\r\n            Column {\r\n                Cards(value = \"View all new reports\")\r\n                Row {\r\n                    Cards(value = \"REPORT AN INCIDENT\")\r\n                    Cards(value = \"EMERGENCY CONTACTS\")\r\n                }\r\n                Cards(value = \"HELP & SUPPORT\")\r\n            }\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
+---- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision b2b86ad232f23063f6266f588b32415464e32740)
+-+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(date 1718740129711)
+-@@ -8,6 +8,8 @@
+- import androidx.compose.foundation.layout.Spacer
+- import androidx.compose.foundation.layout.fillMaxWidth
+- import androidx.compose.foundation.layout.size
+-+import androidx.compose.foundation.lazy.staggeredgrid.LazyVerticalStaggeredGrid
+-+import androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells
+- import androidx.compose.material.icons.Icons
+- import androidx.compose.material.icons.filled.Home
+- import androidx.compose.material.icons.materialIcon
+-@@ -18,14 +20,17 @@
+- import androidx.compose.material3.Icon
+- import androidx.compose.material3.Scaffold
+- import androidx.compose.material3.Surface
+-+import androidx.compose.material3.Text
+- import androidx.compose.material3.TopAppBar
+- import androidx.compose.runtime.Composable
+- import androidx.compose.ui.Alignment
+- import androidx.compose.ui.Modifier
+- import androidx.compose.ui.graphics.Color
+- import androidx.compose.ui.res.painterResource
+-+import androidx.compose.ui.tooling.preview.Preview
+- import androidx.compose.ui.unit.dp
+- import androidx.navigation.NavController
+-+import androidx.navigation.compose.rememberNavController
+- import com.example.civicalertoriginal.Components.Cards
+- import com.example.civicalertoriginal.R
+- 
+-@@ -63,16 +68,17 @@
+-            }
+-         }, content = { innerPadding ->
+-             Column {
+--                Cards(value = "View all new reports")
+--                Row {
+--                    Cards(value = "REPORT AN INCIDENT")
+--                    Cards(value = "EMERGENCY CONTACTS")
+--                }
+--                Cards(value = "HELP & SUPPORT")
+-+
+-             }
+-         }
+-         )
+-     }
+- }
+-+@Preview
+-+@Composable
+-+fun DashBoardPreview(){
+-+    val navController = rememberNavController()
+-+    DashBoard( navController)
+-+}
+- 
+- 
+Index: app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
+new file mode 100644
+--- /dev/null	(date 1719524679778)
++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	(date 1719524679778)
+@@ -0,0 +1,132 @@
++package com.example.civicalertoriginal.Screens
++
++import androidx.compose.foundation.Image
++import androidx.compose.foundation.clickable
++import androidx.compose.foundation.layout.*
++import androidx.compose.material.icons.Icons
++import androidx.compose.material.icons.rounded.Call
++import androidx.compose.material.icons.rounded.Edit
++import androidx.compose.material.icons.rounded.Home
++import androidx.compose.material.icons.rounded.List
++import androidx.compose.material3.*
++import androidx.compose.runtime.Composable
++import androidx.compose.ui.Alignment
++import androidx.compose.ui.Modifier
++import androidx.compose.ui.graphics.Color
++import androidx.compose.ui.graphics.vector.ImageVector
++import androidx.compose.ui.res.painterResource
++import androidx.compose.ui.text.font.FontFamily
++import androidx.compose.ui.text.font.FontStyle
++import androidx.compose.ui.text.font.FontWeight
++import androidx.compose.ui.tooling.preview.Preview
++import androidx.compose.ui.unit.dp
++import androidx.compose.ui.unit.sp
++import androidx.navigation.NavController
++import androidx.navigation.compose.rememberNavController
++import com.example.civicalertoriginal.Components.*
++import com.example.civicalertoriginal.R
++
++@Composable
++fun ContactUs(navController: NavController) {
++    Surface(color = Color.White) {
++        Scaffold(
++            bottomBar = {
++                BottomAppBar {
++                    Row(
++                        modifier = Modifier.fillMaxWidth(),
++                        horizontalArrangement = Arrangement.SpaceAround
++                    ) {
++                        BottomNavItem(
++                            icon = Icons.Rounded.Home,
++                            label = "HOME",
++                            onClick = { navController.navigate("Dashboard") }
++                        )
++                        BottomNavItem(
++                            icon = Icons.Rounded.Edit,
++                            label = "MAKE REPORTS",
++                            onClick = { /* Handle make reports click */ }
++                        )
++                        BottomNavItem(
++                            icon = Icons.Rounded.List,
++                            label = "VIEW REPORTS",
++                            onClick = { /* Handle view reports click */ }
++                        )
++                        BottomNavItem(
++                            icon = Icons.Rounded.Call,
++                            label = "CALL",
++                            onClick = { navController.navigate("emergencyContacts") }
++                        )
++                    }
++                }
++            }
++        ) { innerPadding ->
++            Column(
++                modifier = Modifier.padding(innerPadding).padding(16.dp),
++                horizontalAlignment = Alignment.CenterHorizontally
++            ) {
++                Image(
++                    painter = painterResource(id = R.drawable.contact),
++                    contentDescription = "",
++                    modifier = Modifier.size(120.dp, 150.dp)
++                )
++                Spacer(modifier = Modifier.height(5.dp))
++                Text(
++                    text = "Contact Us",
++                    modifier = Modifier.fillMaxWidth(),
++                    fontSize = 50.sp,
++                    fontFamily = FontFamily.Default,
++                    fontStyle = FontStyle.Normal,
++                    fontWeight = FontWeight.Bold
++                )
++                Text(text = "If you have inquiries, get in touch with us. We will be more than happy to help you.")
++                Spacer(modifier = Modifier.height(20.dp))
++                Row(
++                    modifier = Modifier.fillMaxWidth(),
++                    verticalAlignment = Alignment.CenterVertically,
++                    horizontalArrangement = Arrangement.SpaceEvenly
++                ) {
++                    ContactUsContactButton(value = "Call")
++                    ContactUSEmailButton(value = "Email")
++                }
++                Spacer(modifier = Modifier.height(20.dp))
++                Text(text = "Social Media", fontSize = 25.sp)
++                Column(
++                    modifier = Modifier.fillMaxWidth(),
++                    horizontalAlignment = Alignment.CenterHorizontally,
++                    verticalArrangement = Arrangement.SpaceAround
++                ) {
++                    Spacer(modifier = Modifier.height(15.dp))
++                    Row {
++                        ContactUsWhatsApp(value = "WhatsApp")
++                        Spacer(modifier = Modifier.width(35.dp))
++                        ContactUsInsta(value = "Instagram")
++                    }
++                    Spacer(modifier = Modifier.height(10.dp))
++                    Row {
++                        ContactUsWMessanger(value = "Facebook")
++                        Spacer(modifier = Modifier.width(35.dp))
++                        ContactUsTwitter(value = "Twitter")
++                    }
++                }
++            }
++        }
++    }
++}
++
++@Composable
++fun BottomNavItem(icon: ImageVector, label: String, onClick: () -> Unit) {
++    Column(
++        horizontalAlignment = Alignment.CenterHorizontally,
++        modifier = Modifier.clickable { onClick() }
++    ) {
++        Icon(imageVector = icon, contentDescription = label, modifier = Modifier.size(30.dp))
++        Text(text = label, fontSize = 15.sp)
++    }
++}
++
++@Preview
++@Composable
++fun ContactUsPreview() {
++    val navController = rememberNavController()
++    ContactUs(navController)
++}
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]1/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]1/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679761)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]1/shelved.patch	(date 1719524679761)
+@@ -0,0 +1,157 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++deleted file mode 100644
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	
+++++ /dev/null	
++@@ -1,150 +0,0 @@
++-package com.example.civicalertoriginal.Screens
++-
++-import androidx.compose.foundation.Image
++-import androidx.compose.foundation.clickable
++-import androidx.compose.foundation.layout.Arrangement
++-import androidx.compose.foundation.layout.Column
++-import androidx.compose.foundation.layout.Row
++-import androidx.compose.foundation.layout.fillMaxHeight
++-import androidx.compose.foundation.layout.fillMaxSize
++-import androidx.compose.foundation.layout.fillMaxWidth
++-import androidx.compose.foundation.layout.height
++-import androidx.compose.foundation.layout.padding
++-import androidx.compose.foundation.layout.size
++-import androidx.compose.foundation.lazy.LazyColumn
++-import androidx.compose.foundation.lazy.items
++-import androidx.compose.material3.Card
++-import androidx.compose.material3.CardDefaults
++-import androidx.compose.material3.ExperimentalMaterial3Api
++-import androidx.compose.material3.Surface
++-import androidx.compose.material3.Text
++-import androidx.compose.runtime.Composable
++-import androidx.compose.ui.Alignment
++-import androidx.compose.ui.Modifier
++-import androidx.compose.ui.graphics.Color
++-import androidx.compose.ui.res.painterResource
++-import androidx.compose.ui.text.font.FontWeight
++-import androidx.compose.ui.tooling.preview.Preview
++-import androidx.compose.ui.unit.dp
++-import androidx.compose.ui.unit.sp
++-import androidx.navigation.NavController
++-import androidx.navigation.compose.rememberNavController
++-import com.example.civicalertoriginal.Components.CardButton
++-import com.example.civicalertoriginal.Components.Logo
++-import com.example.civicalertoriginal.R
++-
++-@OptIn(ExperimentalMaterial3Api::class)
++-@Composable
++-fun Dashboard(navController: NavController) {
++-    Surface(color = Color.White) {
++-        LazyColumn(
++-            modifier = Modifier
++-                .fillMaxSize()
++-                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),
++-            verticalArrangement = Arrangement.spacedBy(18.dp),
++-            horizontalAlignment = Alignment.CenterHorizontally
++-        ) {
++-            item {
++-                Row(
++-                    horizontalArrangement = Arrangement.SpaceBetween,
++-                    modifier = Modifier
++-                        .height(80.dp)
++-                        .fillMaxWidth()
++-                ) {
++-                    Logo()
++-                    Image(
++-                        painter = painterResource(id = R.drawable.profie),
++-                        contentDescription = "",
++-                        modifier = Modifier
++-                            .size(50.dp, 70.dp)
++-                            .clickable { }
++-                    )
++-                }
++-            }
++-
++-            item {
++-                Column(
++-                    modifier = Modifier.height(300.dp)
++-                ) {
++-                    Card(
++-                        modifier = Modifier
++-                            .fillMaxWidth()
++-                            .fillMaxHeight(),
++-                        colors = CardDefaults.cardColors(containerColor = Color.White),
++-                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
++-                    ) {
++-                        Column(
++-                            modifier = Modifier
++-                                .padding(16.dp)
++-                        ) {
++-                            Text(
++-                                text = "Recent report",
++-                                fontWeight = FontWeight.Bold,
++-                                fontSize = 20.sp
++-                            )
++-                            Image(
++-                                painter = painterResource(id = R.drawable.photo),
++-                                contentDescription = "Picture of reported incident",
++-                                modifier = Modifier.height(150.dp)
++-                            )
++-                            Text(
++-                                text = "Broken Street Light",
++-                                fontWeight = FontWeight.Bold,
++-                                fontSize = 20.sp
++-                            )
++-                            Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
++-                            Text(text = "14 March")
++-                            Text(text = "Streetlight")
++-                        }
++-                    }
++-                }
++-            }
++-
++-            item {
++-                Row(
++-                    modifier = Modifier
++-                        .fillMaxWidth()
++-                        .padding(top = 20.dp),
++-                    horizontalArrangement = Arrangement.SpaceAround
++-                ) {
++-                    CardButton(iconRes = R.drawable.info, label = "Report Incident") {
++-                        // logic to take you to report incident page
++-                    }
++-                    CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
++-                        // logic to take you to reported incidents page
++-                    }
++-                }
++-            }
++-
++-            item {
++-                Row(
++-                    modifier = Modifier
++-                        .fillMaxWidth(),
++-                    horizontalArrangement = Arrangement.SpaceAround
++-                ) {
++-                    CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
++-                        // logic to take you to help page
++-                    }
++-                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
++-                        // logic to take you to emergency contacts page
++-                    }
++-                }
++-            }
++-
++-            item {
++-                Row(
++-                    modifier = Modifier.height(20.dp)
++-                ) {
++-                    // Placeholder for spacing
++-                }
++-            }
++-        }
++-    }
++-}
++-
++-@Preview
++-@Composable
++-fun DashboardPreview() {
++-    val navController = rememberNavController()
++-    Dashboard(navController)
++-}
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679772)
++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch	(date 1719524679772)
+@@ -0,0 +1,324 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material.icons.outlined.Info\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\n\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun DashBoard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(topBar = {\r\n            TopAppBar(title = {\r\n                Row(\r\n                    verticalAlignment = Alignment.Top,\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier.fillMaxWidth()) {\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.logo), contentDescription = \"\",\r\n                         modifier = Modifier.size(100.dp)\r\n                    )\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.AccountCircle, contentDescription = \"\",\r\n                        modifier = Modifier.size(100.dp)\r\n                    )\r\n                }\r\n            })\r\n        }, bottomBar = {\r\n           Row (verticalAlignment = Alignment.Bottom,\r\n               horizontalArrangement = Arrangement.SpaceAround){\r\n               Icon(imageVector = Icons.Filled.Home, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Outlined.Info, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Rounded.Person, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n           }\r\n        }, content = { innerPadding ->\r\n            Column {\r\n\r\n            }\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(date 1719304551788)
++@@ -1,73 +1,150 @@
++ package com.example.civicalertoriginal.Screens
++ 
++-import android.annotation.SuppressLint
++ import androidx.compose.foundation.Image
+++import androidx.compose.foundation.clickable
++ import androidx.compose.foundation.layout.Arrangement
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++-import androidx.compose.foundation.layout.Spacer
+++import androidx.compose.foundation.layout.fillMaxHeight
+++import androidx.compose.foundation.layout.fillMaxSize
++ import androidx.compose.foundation.layout.fillMaxWidth
+++import androidx.compose.foundation.layout.height
+++import androidx.compose.foundation.layout.padding
++ import androidx.compose.foundation.layout.size
++-import androidx.compose.material.icons.Icons
++-import androidx.compose.material.icons.filled.Home
++-import androidx.compose.material.icons.materialIcon
++-import androidx.compose.material.icons.outlined.Info
++-import androidx.compose.material.icons.rounded.AccountCircle
++-import androidx.compose.material.icons.rounded.Person
+++import androidx.compose.foundation.lazy.LazyColumn
+++import androidx.compose.foundation.lazy.items
+++import androidx.compose.material3.Card
+++import androidx.compose.material3.CardDefaults
++ import androidx.compose.material3.ExperimentalMaterial3Api
++-import androidx.compose.material3.Icon
++-import androidx.compose.material3.Scaffold
++ import androidx.compose.material3.Surface
++-import androidx.compose.material3.TopAppBar
+++import androidx.compose.material3.Text
++ import androidx.compose.runtime.Composable
++ import androidx.compose.ui.Alignment
++ import androidx.compose.ui.Modifier
++ import androidx.compose.ui.graphics.Color
++ import androidx.compose.ui.res.painterResource
+++import androidx.compose.ui.text.font.FontWeight
+++import androidx.compose.ui.tooling.preview.Preview
++ import androidx.compose.ui.unit.dp
+++import androidx.compose.ui.unit.sp
++ import androidx.navigation.NavController
++-
+++import androidx.navigation.compose.rememberNavController
+++import com.example.civicalertoriginal.Components.CardButton
+++import com.example.civicalertoriginal.Components.Logo
++ import com.example.civicalertoriginal.R
++ 
++-
++-
++-@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
++ @OptIn(ExperimentalMaterial3Api::class)
++ @Composable
++-fun DashBoard(navController: NavController) {
+++fun Dashboard(navController: NavController) {
++     Surface(color = Color.White) {
++-        Scaffold(topBar = {
++-            TopAppBar(title = {
+++        LazyColumn(
+++            modifier = Modifier
+++                .fillMaxSize()
+++                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),
+++            verticalArrangement = Arrangement.spacedBy(18.dp),
+++            horizontalAlignment = Alignment.CenterHorizontally
+++        ) {
+++            item {
++                 Row(
++-                    verticalAlignment = Alignment.Top,
++                     horizontalArrangement = Arrangement.SpaceBetween,
++-                    modifier = Modifier.fillMaxWidth()) {
+++                    modifier = Modifier
+++                        .height(80.dp)
+++                        .fillMaxWidth()
+++                ) {
+++                    Logo()
++                     Image(
++-                        painter = painterResource(id = R.drawable.logo), contentDescription = "",
++-                         modifier = Modifier.size(100.dp)
++-                    )
++-                    Icon(
++-                        imageVector = Icons.Rounded.AccountCircle, contentDescription = "",
++-                        modifier = Modifier.size(100.dp)
++-                    )
+++                        painter = painterResource(id = R.drawable.profie),
+++                        contentDescription = "",
+++                        modifier = Modifier
+++                            .size(50.dp, 70.dp)
+++                            .clickable { }
+++                    )
+++                }
+++            }
+++
+++            item {
+++                Column(
+++                    modifier = Modifier.height(300.dp)
+++                ) {
+++                    Card(
+++                        modifier = Modifier
+++                            .fillMaxWidth()
+++                            .fillMaxHeight(),
+++                        colors = CardDefaults.cardColors(containerColor = Color.White),
+++                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
+++                    ) {
+++                        Column(
+++                            modifier = Modifier
+++                                .padding(16.dp)
+++                        ) {
+++                            Text(
+++                                text = "Recent report",
+++                                fontWeight = FontWeight.Bold,
+++                                fontSize = 20.sp
+++                            )
+++                            Image(
+++                                painter = painterResource(id = R.drawable.photo),
+++                                contentDescription = "Picture of reported incident",
+++                                modifier = Modifier.height(150.dp)
+++                            )
+++                            Text(
+++                                text = "Broken Street Light",
+++                                fontWeight = FontWeight.Bold,
+++                                fontSize = 20.sp
+++                            )
+++                            Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
+++                            Text(text = "14 March")
+++                            Text(text = "Streetlight")
+++                        }
+++                    }
++                 }
++-            })
++-        }, bottomBar = {
++-           Row (verticalAlignment = Alignment.Bottom,
++-               horizontalArrangement = Arrangement.SpaceAround){
++-               Icon(imageVector = Icons.Filled.Home, contentDescription = "", modifier = Modifier.size(50.dp))
++-               Spacer(modifier = Modifier.size(140.dp))
++-               Icon(imageVector = Icons.Outlined.Info, contentDescription = "", modifier = Modifier.size(50.dp))
++-               Spacer(modifier = Modifier.size(140.dp))
++-               Icon(imageVector = Icons.Rounded.Person, contentDescription = "", modifier = Modifier.size(50.dp))
++-           }
++-        }, content = { innerPadding ->
++-            Column {
+++            }
++ 
+++            item {
+++                Row(
+++                    modifier = Modifier
+++                        .fillMaxWidth()
+++                        .padding(top = 20.dp),
+++                    horizontalArrangement = Arrangement.SpaceAround
+++                ) {
+++                    CardButton(iconRes = R.drawable.info, label = "Report Incident") {
+++                        // logic to take you to report incident page
+++                    }
+++                    CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
+++                        // logic to take you to reported incidents page
+++                    }
+++                }
++             }
++-        }
++-        )
++-    }
++-}
+++
+++            item {
+++                Row(
+++                    modifier = Modifier
+++                        .fillMaxWidth(),
+++                    horizontalArrangement = Arrangement.SpaceAround
+++                ) {
+++                    CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
+++                        // logic to take you to help page
+++                    }
+++                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
+++                        // logic to take you to emergency contacts page
+++                    }
+++                }
+++            }
++ 
+++            item {
+++                Row(
+++                    modifier = Modifier.height(20.dp)
+++                ) {
+++                    // Placeholder for spacing
+++                }
+++            }
+++        }
+++    }
+++}
++ 
+++@Preview
+++@Composable
+++fun DashboardPreview() {
+++    val navController = rememberNavController()
+++    Dashboard(navController)
+++}
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Face\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardColors\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\n\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.BottomButtonsMyProfile\r\nimport com.example.civicalertoriginal.Components.ProfileText\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun UpdateProfile (navController: NavController){\r\n    Surface( color = Color.White) {\r\n        Scaffold (bottomBar = {\r\n            BottomAppBar {\r\n\r\n                Row {\r\n\r\n                    Column (\r\n                    ) {\r\n                        Icon(imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"HOME\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column (){\r\n                        Icon(imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"MAKE REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"VIEW REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"CALL\")\r\n                    }\r\n\r\n                }\r\n            }\r\n        }){innerPadding ->\r\n            Column {\r\n                Spacer(modifier = Modifier.size(10.dp))\r\n                Column ( modifier = Modifier.fillMaxWidth() ,\r\n                    verticalArrangement = Arrangement.Center, horizontalAlignment = Alignment.CenterHorizontally){\r\n                    Icon(imageVector = Icons.Rounded.Face, contentDescription = \"\", modifier = Modifier.size(80.dp\r\n                    ))\r\n                    Text(text = \"USER NAME\", fontSize = 25.sp)\r\n                }\r\n                val cardColor by remember {\r\n                    mutableStateOf(Color.Green)\r\n                }\r\n\r\n                Card (  modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .background(cardColor) ){\r\n                    Column {\r\n                        ProfileText(description = \"First Name\", value = \"User name\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Last Name\", value = \"Sirname\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Email address\", value = \"emailInForm@gmail.com\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Phone number\", value = \"+27 68801025\")\r\n\r\n                    } }\r\n\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"UPDATE\") {}\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"Log Out\") {}\r\n            }\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n}\r\n@Preview\r\n@Composable\r\nfun SignUpPreview(){\r\n\r\n}
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(date 1719304551828)
++@@ -6,11 +6,8 @@
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++ import androidx.compose.foundation.layout.Spacer
++-import androidx.compose.foundation.layout.fillMaxHeight
++ import androidx.compose.foundation.layout.fillMaxWidth
++-import androidx.compose.foundation.layout.padding
++ import androidx.compose.foundation.layout.size
++-import androidx.compose.foundation.shape.RoundedCornerShape
++ import androidx.compose.material.icons.Icons
++ import androidx.compose.material.icons.rounded.Call
++ import androidx.compose.material.icons.rounded.Edit
++@@ -19,7 +16,7 @@
++ import androidx.compose.material.icons.rounded.List
++ import androidx.compose.material3.BottomAppBar
++ import androidx.compose.material3.Card
++-import androidx.compose.material3.CardColors
+++import androidx.compose.material3.CardDefaults
++ import androidx.compose.material3.Icon
++ import androidx.compose.material3.Scaffold
++ import androidx.compose.material3.Surface
++@@ -94,7 +91,8 @@
++ 
++                 Card (  modifier = Modifier
++                     .fillMaxWidth()
++-                    .background(cardColor) ){
+++                    , colors = CardDefaults.cardColors(containerColor = Color.White),
+++                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)){
++                     Column {
++                         ProfileText(description = "First Name", value = "User name")
++                         Spacer(modifier = Modifier.size(10.dp))
++Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>@file:Suppress(\"UNUSED_EXPRESSION\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.TextFieldValue\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.text.style.TextDecoration\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun ProfileText(description: String , value: String) {\r\n    var textFieldVisible by remember { mutableStateOf(false) }\r\n    var textFieldValue by remember { mutableStateOf(TextFieldValue()) }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .padding(16.dp)\r\n            .fillMaxWidth()\r\n    ) {\r\n        // Clickable Text\r\n        Text(text = description, fontFamily = FontFamily.SansSerif, fontSize = 17.sp)\r\n        Spacer(modifier = Modifier.size(10.dp))\r\n        Text(\r\n            text = value,\r\n            modifier = Modifier.clickable {\r\n                textFieldVisible = true\r\n            },\r\n            fontSize = 25.sp,\r\n            fontFamily = FontFamily.Default,\r\n            style = MaterialTheme.typography.bodyMedium.copy(\r\n                textDecoration = TextDecoration.Underline\r\n            )\r\n        )\r\n\r\n        // Conditional Text Field\r\n        if (textFieldVisible) {\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            TextField(\r\n                value = textFieldValue,\r\n                onValueChange = { textFieldValue = it },\r\n                modifier = Modifier.fillMaxWidth()\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            Button(\r\n                onClick = {\r\n                    textFieldVisible = false\r\n                    // Perform any actions with the text field value here\r\n                },\r\n                modifier = Modifier.align(alignment = androidx.compose.ui.Alignment.End)\r\n            ) {\r\n                Text(\"Save\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    @Composable\r\n    fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {\r\n        Button(\r\n            onClick = onClick, shape = ButtonDefaults.shape,\r\n            colors = ButtonDefaults.buttonColors(Color.Green),\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n        ) {\r\n            Text(\r\n                text = name, modifier = Modifier\r\n                    .size(80.dp, 30.dp)\r\n                    .padding(start = 17.dp, top = 4.dp)\r\n                    .align(Alignment.CenterVertically)\r\n                    .fillMaxWidth(),\r\n                color = Color.Black\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1719304771078)
++@@ -11,6 +11,7 @@
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++ import androidx.compose.foundation.layout.Spacer
+++import androidx.compose.foundation.layout.fillMaxSize
++ import androidx.compose.foundation.layout.fillMaxWidth
++ import androidx.compose.foundation.layout.height
++ import androidx.compose.foundation.layout.padding
++@@ -25,6 +26,8 @@
++ import androidx.compose.material.icons.filled.Person
++ import androidx.compose.material3.Button
++ import androidx.compose.material3.ButtonDefaults
+++import androidx.compose.material3.Card
+++import androidx.compose.material3.CardDefaults
++ import androidx.compose.material3.Checkbox
++ import androidx.compose.material3.DropdownMenuItem
++ import androidx.compose.material3.ExperimentalMaterial3Api
++@@ -61,8 +64,35 @@
++ import com.example.civicalertoriginal.R
++ 
++ 
++-
++-
+++@Composable
+++fun Logo(){
+++    Image(painter = painterResource(id = R.drawable.logo), contentDescription ="" )
+++}
+++@Composable
+++fun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {
+++    Card(
+++        modifier = Modifier
+++            .size(160.dp)
+++            .clickable(onClick = onClick),
+++        colors = CardDefaults.cardColors(containerColor = Color.White), // Set the background color to white
+++        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp) // Set elevation to add shadow
+++    ) {
+++        Column(
+++            modifier = Modifier
+++                .fillMaxSize()
+++                .padding(8.dp),
+++            verticalArrangement = Arrangement.Center,
+++            horizontalAlignment = Alignment.CenterHorizontally
+++        ) {
+++            Image(
+++                painter = painterResource(id = iconRes),
+++                contentDescription = "",
+++                modifier = Modifier.size(40.dp)
+++            )
+++            Text(text = label)
+++        }
+++    }
+++}
++ @Composable
++ fun LogAndForgotHeader(screenLabel:String) {
++     Column ( modifier = Modifier.fillMaxWidth(),
++Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
++===================================================================
++diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
++deleted file mode 100644
++--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
+++++ /dev/null	(revision 79d2e52cc04ed59db94e1f8f0afb12a02ae19eaf)
++@@ -1,4 +0,0 @@
++-<changelist name="Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]" date="1718542854526" recycled="true" deleted="true">
++-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch" />
++-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 16/06/2024 15:00 [Changes]" />
++-</changelist>
++\ No newline at end of file
++diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch
++deleted file mode 100644
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679741)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]/shelved.patch	(date 1719524679741)
+@@ -0,0 +1,19 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.Screens.Registration\r\nimport com.example.civicalertoriginal.Screens.UserProfile\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"userProfile\" +\r\n            \"\" +\r\n            \"\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n        composable(\"userProfile\"){\r\n            UserProfile(navController)\r\n        }\r\n\r\n    }\r\n}
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	
++@@ -15,9 +15,7 @@
++ @Composable
++ fun Navigation (){
++     val navController = rememberNavController()
++-    NavHost(navController = navController, startDestination = "userProfile" +
++-            "" +
++-            "") {
+++    NavHost(navController = navController, startDestination = "Login" ) {
++         composable("registration"){
++             Registration(navController)
++         }
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679756)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch	(date 1719524679756)
+@@ -0,0 +1,19 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable { }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.info, label = \"Report Incident\") {\r\n                        // logic to take you to report incident page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.clipboard, label = \"View Reports\") {\r\n                        // logic to take you to reported incidents page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth(),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.headphones, label = \"Help & Support\") {\r\n                        // logic to take you to help page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.emergency_contacts, label = \"Emergency Contacts\") {\r\n                        // logic to take you to emergency contacts page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier.height(20.dp)\r\n                ) {\r\n                    // Placeholder for spacing\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun DashboardPreview() {\r\n    val navController = rememberNavController()\r\n    Dashboard(navController)\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(revision 29e21a0dea470f01c5297f0fc0d8b85dcdf80ade)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719310516707)
++@@ -33,7 +33,7 @@
++ import com.example.civicalertoriginal.Components.Logo
++ import com.example.civicalertoriginal.R
++ 
++-@OptIn(ExperimentalMaterial3Api::class)
+++
++ @Composable
++ fun Dashboard(navController: NavController) {
++     Surface(color = Color.White) {
+Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>@file:Suppress(\"UNUSED_EXPRESSION\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.TextFieldValue\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.text.style.TextDecoration\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.window.Dialog\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun Logo(){\r\n    Image(painter = painterResource(id = R.drawable.logo), contentDescription =\"\" )\r\n}\r\n@Composable\r\nfun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {\r\n    Card(\r\n        modifier = Modifier\r\n            .size(160.dp)\r\n            .clickable(onClick = onClick),\r\n        colors = CardDefaults.cardColors(containerColor = Color.White), // Set the background color to white\r\n        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp) // Set elevation to add shadow\r\n    ) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(8.dp),\r\n            verticalArrangement = Arrangement.Center,\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            Image(\r\n                painter = painterResource(id = iconRes),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(40.dp)\r\n            )\r\n            Text(text = label)\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun ProfileText(description: String , value: String) {\r\n    var textFieldVisible by remember { mutableStateOf(false) }\r\n    var textFieldValue by remember { mutableStateOf(TextFieldValue()) }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .padding(10.dp)\r\n            .fillMaxWidth()\r\n    ) {\r\n        // Clickable Text\r\n        Text(text = description, fontFamily = FontFamily.SansSerif, fontSize = 17.sp)\r\n        Spacer(modifier = Modifier.size(10.dp))\r\n        Text(\r\n            text = value,\r\n            modifier = Modifier.clickable {\r\n                textFieldVisible = true\r\n            },\r\n            fontSize = 25.sp,\r\n            fontFamily = FontFamily.Default,\r\n            style = MaterialTheme.typography.bodyMedium.copy(\r\n                textDecoration = TextDecoration.Underline\r\n            )\r\n        )\r\n\r\n        // Conditional Text Field\r\n        if (textFieldVisible) {\r\n            Spacer(modifier = Modifier.height(10.dp))\r\n            TextField(\r\n                value = textFieldValue,\r\n                onValueChange = { textFieldValue = it },\r\n                modifier = Modifier.fillMaxWidth()\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            Button(\r\n                onClick = {\r\n                    textFieldVisible = false\r\n                    // Perform any actions with the text field value here\r\n                },\r\n                modifier = Modifier.align(alignment = androidx.compose.ui.Alignment.End)\r\n            ) {\r\n                Text(\"Save\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    @Composable\r\n    fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {\r\n        Button(\r\n            onClick = onClick, shape = ButtonDefaults.shape,\r\n            colors = ButtonDefaults.buttonColors(Color.Red),\r\n            modifier = Modifier\r\n                .width(400.dp)\r\n        ) {\r\n            Text(\r\n                text = name, modifier = Modifier\r\n                    .size(80.dp, 30.dp)\r\n                    .padding(start = 17.dp, top = 4.dp)\r\n                    .align(Alignment.CenterVertically)\r\n                    .fillMaxWidth(),\r\n                color = Color.Black\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
+--- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1719682560853)
+@@ -21,6 +21,8 @@
+ import androidx.compose.foundation.shape.RoundedCornerShape
+ import androidx.compose.foundation.text.KeyboardOptions
+ import androidx.compose.material.icons.Icons
++import androidx.compose.material.icons.filled.Call
++import androidx.compose.material.icons.filled.Email
+ import androidx.compose.material.icons.filled.Info
+ import androidx.compose.material.icons.filled.LocationOn
+ import androidx.compose.material.icons.filled.Person
+@@ -473,3 +475,74 @@
+ 
+ 
+ 
++@Composable
++fun ContactUsContactButton(value: String){
++    Button(onClick = { /* contact logic*/ }, colors = ButtonDefaults.buttonColors(
++        contentColor = Color.Black, containerColor = Color.LightGray), shape = RoundedCornerShape(15.dp),
++        modifier = Modifier
++            .padding(8.dp)
++            .size(170.dp, 50.dp)
++    ) {
++        Icon(imageVector = Icons.Default.Call, contentDescription = "", modifier = Modifier.size(20.dp))
++        Spacer(modifier = Modifier.size(5.dp))
++        Text(text = value, fontSize = 15.sp)
++
++    }
++}
++@Composable
++fun ContactUSEmailButton(value: String){
++    Button(onClick = { /*email logic*/ }, colors = ButtonDefaults.buttonColors(
++        contentColor = Color.Black, containerColor = Color.LightGray), shape = RoundedCornerShape(15.dp),
++        modifier = Modifier
++            .padding(8.dp)
++            .size(170.dp, 50.dp)
++    ) {
++        Icon(imageVector = Icons.Default.Email, contentDescription = "", modifier = Modifier.size(20.dp))
++        Spacer(modifier = Modifier.size(5.dp))
++        Text(text = value, fontSize = 18.sp)
++
++    }
++
++}
++@Composable
++fun ContactUsWhatsApp(value: String){
++    Column(horizontalAlignment = Alignment.CenterHorizontally) {
++        Row {
++            Image(painter = painterResource(id = R.drawable.whatsapp),
++                contentDescription ="" , modifier = Modifier.size(50.dp))
++            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
++        Text(text = "083 3456 345", color = Color.Cyan)
++    }
++
++}
++@Composable
++fun ContactUsWMessanger(value: String){
++    Column (horizontalAlignment = Alignment.CenterHorizontally) {
++        Row {
++            Image(painter = painterResource(id = R.drawable.messenger), contentDescription ="" , modifier = Modifier.size(50.dp))
++            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
++        Text(text = "facebook", color = Color.Cyan)
++    }
++
++}
++@Composable
++fun ContactUsInsta(value: String){
++    Column (horizontalAlignment = Alignment.CenterHorizontally) {
++        Row {
++            Image(painter = painterResource(id = R.drawable.instagram), contentDescription ="" , modifier = Modifier.size(50.dp))
++            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
++        Text(text = "@civicAlert", color = Color.Cyan)
++    }
++
++}
++@Composable
++fun ContactUsTwitter(value: String){
++    Column(horizontalAlignment = Alignment.CenterHorizontally) {
++        Row {
++            Image(painter = painterResource(id = R.drawable.twitter), contentDescription ="" , modifier = Modifier.size(50.dp))
++            Text(text = value, fontSize = 25.sp, fontWeight = FontWeight.Bold) }
++        Text(text = "@civicAlert", color = Color.Cyan)
++    }
++
++}
++
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679760)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]/shelved.patch	(date 1719524679760)
+@@ -0,0 +1,261 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.ContactUSEmailButton\r\nimport com.example.civicalertoriginal.Components.ContactUsContactButton\r\nimport com.example.civicalertoriginal.Components.ContactUsInsta\r\nimport com.example.civicalertoriginal.Components.ContactUsTwitter\r\nimport com.example.civicalertoriginal.Components.ContactUsWMessanger\r\nimport com.example.civicalertoriginal.Components.ContactUsWhatsApp\r\nimport com.example.civicalertoriginal.R\r\n\r\n@Composable\r\nfun ContactUs (navController: NavController){\r\n    Surface(color = Color.White) {\r\n       Scaffold (bottomBar = {\r\n           BottomAppBar {\r\n\r\n               Row {\r\n\r\n                   Column (\r\n                   ) {\r\n                       Icon(imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally)\r\n                           .clickable { navController.navigate(\"dashBoard\") })\r\n                       Text(text = \"HOME\", fontSize = 15.sp)\r\n                   }\r\n                   Spacer(modifier = Modifier.size(20.dp))\r\n                   Column (){\r\n                       Icon(imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally))\r\n                       Text(text = \"MAKE REPORTS\", fontSize = 15.sp)\r\n                   }\r\n                   Spacer(modifier = Modifier.size(20.dp))\r\n                   Column () {\r\n                       Icon(imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally))\r\n                       Text(text = \"VIEW REPORTS\", fontSize = 15.sp)\r\n                   }\r\n                   Spacer(modifier = Modifier.size(20.dp))\r\n                   Column () {\r\n                       Icon(imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally)\r\n                           .clickable { navController.navigate(\"contactUs\") })\r\n                       Text(text = \"CALL\", fontSize = 15.sp)\r\n                   }\r\n               } } }){innerPadding ->\r\n           Column {\r\n               Image(contentDescription =\"\", painter = painterResource(id = R.drawable.contact), modifier = Modifier.size(120.dp,150.dp) )\r\n               Spacer(modifier = Modifier.size(5.dp))\r\n               Text(text = \"Contact Us\", modifier = Modifier\r\n                   .fillMaxWidth(), fontSize = 50.sp, fontFamily = FontFamily.Default, fontStyle = FontStyle.Normal, fontWeight = FontWeight.Bold)\r\n               Text(text = \"If you have enquires get in touch with us. We will be more than happy to help you.\")\r\n               Spacer(modifier = Modifier.size(20.dp))\r\n               Row (modifier = Modifier.fillMaxWidth() , verticalAlignment = Alignment.CenterVertically, horizontalArrangement = Arrangement.SpaceEvenly){\r\n                   ContactUsContactButton(value = \"Call\")\r\n                   ContactUSEmailButton(value = \"Email\")\r\n               }\r\n               Spacer(modifier = Modifier\r\n                   .size(20.dp)\r\n                   .align(Alignment.Start))\r\n               Text(text = \"Social Media\", fontSize = 25.sp)\r\n               Column (modifier = Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.SpaceAround){\r\n                   Spacer(modifier = Modifier.size(15.dp))\r\n                   Row {\r\n                       ContactUsWhatsApp(value = \"WhatsApp\")\r\n                       Spacer(modifier = Modifier.size(35.dp))\r\n                       ContactUsInsta(value = \"Instagram\")\r\n                   }\r\n                   Row {\r\n                       ContactUsWMessanger(value = \"Facebook\")\r\n                       Spacer(modifier = Modifier.size(35.dp))\r\n                       ContactUsTwitter(value = \"Twitter\")\r\n                   }\r\n\r\n               }\r\n\r\n\r\n           }\r\n       }\r\n\r\n    }\r\n}
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	
++@@ -2,26 +2,18 @@
++ 
++ import androidx.compose.foundation.Image
++ import androidx.compose.foundation.clickable
++-import androidx.compose.foundation.layout.Arrangement
++-import androidx.compose.foundation.layout.Column
++-import androidx.compose.foundation.layout.Row
++-import androidx.compose.foundation.layout.Spacer
++-import androidx.compose.foundation.layout.fillMaxWidth
++-import androidx.compose.foundation.layout.size
+++import androidx.compose.foundation.layout.*
++ import androidx.compose.material.icons.Icons
++ import androidx.compose.material.icons.rounded.Call
++ import androidx.compose.material.icons.rounded.Edit
++ import androidx.compose.material.icons.rounded.Home
++ import androidx.compose.material.icons.rounded.List
++-import androidx.compose.material3.BottomAppBar
++-import androidx.compose.material3.Icon
++-import androidx.compose.material3.Scaffold
++-import androidx.compose.material3.Surface
++-import androidx.compose.material3.Text
+++import androidx.compose.material3.*
++ import androidx.compose.runtime.Composable
++ import androidx.compose.ui.Alignment
++ import androidx.compose.ui.Modifier
++ import androidx.compose.ui.graphics.Color
+++import androidx.compose.ui.graphics.vector.ImageVector
++ import androidx.compose.ui.res.painterResource
++ import androidx.compose.ui.text.font.FontFamily
++ import androidx.compose.ui.text.font.FontStyle
++@@ -29,86 +21,144 @@
++ import androidx.compose.ui.unit.dp
++ import androidx.compose.ui.unit.sp
++ import androidx.navigation.NavController
++-import com.example.civicalertoriginal.Components.ContactUSEmailButton
++-import com.example.civicalertoriginal.Components.ContactUsContactButton
++-import com.example.civicalertoriginal.Components.ContactUsInsta
++-import com.example.civicalertoriginal.Components.ContactUsTwitter
++-import com.example.civicalertoriginal.Components.ContactUsWMessanger
++-import com.example.civicalertoriginal.Components.ContactUsWhatsApp
+++import androidx.compose.ui.tooling.preview.Preview
+++import androidx.navigation.compose.rememberNavController
+++import com.example.civicalertoriginal.Components.*
++ import com.example.civicalertoriginal.R
++ 
++ @Composable
++-fun ContactUs (navController: NavController){
+++fun ContactUs(navController: NavController) {
++     Surface(color = Color.White) {
++-       Scaffold (bottomBar = {
++-           BottomAppBar {
+++        Scaffold(bottomBar = { ContactUsBottomAppBar(navController) }) { innerPadding ->
+++            Column(
+++                modifier = Modifier
+++                    .padding(innerPadding)
+++                    .fillMaxWidth(),
+++                horizontalAlignment = Alignment.CenterHorizontally,
+++            ) {
+++                Image(
+++                    painter = painterResource(id = R.drawable.contact),
+++                    contentDescription = "",
+++                    modifier = Modifier
+++                        .size(120.dp, 150.dp)
+++                        .padding(top = 16.dp)
+++                )
+++                Spacer(modifier = Modifier.height(16.dp))
+++                Text(
+++                    text = "Contact Us",
+++                    fontSize = 36.sp,
+++                    fontFamily = FontFamily.Default,
+++                    fontStyle = FontStyle.Normal,
+++                    fontWeight = FontWeight.Bold
+++                )
+++                Text(
+++                    text = "If you have inquiries, get in touch with us. We will be more than happy to help you.",
+++                    modifier = Modifier.padding(16.dp),
+++                    fontSize = 16.sp,
+++                )
+++                Spacer(modifier = Modifier.height(16.dp))
+++                ContactUsActions()
+++                Spacer(modifier = Modifier.height(24.dp))
+++                Text(text = "Social Media", fontSize = 25.sp, fontWeight = FontWeight.Bold)
+++                Spacer(modifier = Modifier.height(16.dp))
+++                SocialMediaButtons()
+++            }
+++        }
+++    }
+++}
+++
+++@Composable
+++fun ContactUsBottomAppBar(navController: NavController) {
+++    BottomAppBar {
+++        Row(
+++            modifier = Modifier.fillMaxWidth(),
+++            horizontalArrangement = Arrangement.SpaceEvenly,
+++            verticalAlignment = Alignment.CenterVertically
+++        ) {
+++            BottomNavItem(
+++                icon = Icons.Rounded.Home,
+++                label = "HOME",
+++                onClick = { navController.navigate("dashBoard") }
+++            )
+++            BottomNavItem(
+++                icon = Icons.Rounded.Edit,
+++                label = "MAKE REPORTS",
+++                onClick = { /* Add your action here */ }
+++            )
+++            BottomNavItem(
+++                icon = Icons.Rounded.List,
+++                label = "VIEW REPORTS",
+++                onClick = { /* Add your action here */ }
+++            )
+++            BottomNavItem(
+++                icon = Icons.Rounded.Call,
+++                label = "CALL",
+++                onClick = { navController.navigate("contactUs") }
+++            )
+++        }
+++    }
+++}
++ 
++-               Row {
++-
++-                   Column (
++-                   ) {
++-                       Icon(imageVector = Icons.Rounded.Home, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally)
++-                           .clickable { navController.navigate("dashBoard") })
++-                       Text(text = "HOME", fontSize = 15.sp)
++-                   }
++-                   Spacer(modifier = Modifier.size(20.dp))
++-                   Column (){
++-                       Icon(imageVector = Icons.Rounded.Edit, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally))
++-                       Text(text = "MAKE REPORTS", fontSize = 15.sp)
++-                   }
++-                   Spacer(modifier = Modifier.size(20.dp))
++-                   Column () {
++-                       Icon(imageVector = Icons.Rounded.List, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally))
++-                       Text(text = "VIEW REPORTS", fontSize = 15.sp)
++-                   }
++-                   Spacer(modifier = Modifier.size(20.dp))
++-                   Column () {
++-                       Icon(imageVector = Icons.Rounded.Call, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally)
++-                           .clickable { navController.navigate("contactUs") })
++-                       Text(text = "CALL", fontSize = 15.sp)
++-                   }
++-               } } }){innerPadding ->
++-           Column {
++-               Image(contentDescription ="", painter = painterResource(id = R.drawable.contact), modifier = Modifier.size(120.dp,150.dp) )
++-               Spacer(modifier = Modifier.size(5.dp))
++-               Text(text = "Contact Us", modifier = Modifier
++-                   .fillMaxWidth(), fontSize = 50.sp, fontFamily = FontFamily.Default, fontStyle = FontStyle.Normal, fontWeight = FontWeight.Bold)
++-               Text(text = "If you have enquires get in touch with us. We will be more than happy to help you.")
++-               Spacer(modifier = Modifier.size(20.dp))
++-               Row (modifier = Modifier.fillMaxWidth() , verticalAlignment = Alignment.CenterVertically, horizontalArrangement = Arrangement.SpaceEvenly){
++-                   ContactUsContactButton(value = "Call")
++-                   ContactUSEmailButton(value = "Email")
++-               }
++-               Spacer(modifier = Modifier
++-                   .size(20.dp)
++-                   .align(Alignment.Start))
++-               Text(text = "Social Media", fontSize = 25.sp)
++-               Column (modifier = Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.SpaceAround){
++-                   Spacer(modifier = Modifier.size(15.dp))
++-                   Row {
++-                       ContactUsWhatsApp(value = "WhatsApp")
++-                       Spacer(modifier = Modifier.size(35.dp))
++-                       ContactUsInsta(value = "Instagram")
++-                   }
++-                   Row {
++-                       ContactUsWMessanger(value = "Facebook")
++-                       Spacer(modifier = Modifier.size(35.dp))
++-                       ContactUsTwitter(value = "Twitter")
++-                   }
++-
++-               }
++-
++-
++-           }
++-       }
+++@Composable
+++fun BottomNavItem(icon: ImageVector, label: String, onClick: () -> Unit) {
+++    Column(
+++        horizontalAlignment = Alignment.CenterHorizontally,
+++        modifier = Modifier
+++            .clickable(onClick = onClick)
+++            .padding(8.dp)
+++    ) {
+++        Icon(
+++            imageVector = icon,
+++            contentDescription = null,
+++            modifier = Modifier.size(30.dp)
+++        )
+++        Text(text = label, fontSize = 12.sp)
+++    }
+++}
+++
+++@Composable
+++fun ContactUsActions() {
+++    Row(
+++        modifier = Modifier.fillMaxWidth(),
+++        horizontalArrangement = Arrangement.SpaceEvenly,
+++        verticalAlignment = Alignment.CenterVertically
+++    ) {
+++        ContactUsContactButton(value = "Call")
+++        ContactUSEmailButton(value = "Email")
+++    }
+++}
+++
+++@Composable
+++fun SocialMediaButtons() {
+++    Column(
+++        modifier = Modifier.fillMaxWidth(),
+++        horizontalAlignment = Alignment.CenterHorizontally,
+++    ) {
+++        Row(
+++            horizontalArrangement = Arrangement.SpaceEvenly,
+++            verticalAlignment = Alignment.CenterVertically,
+++            modifier = Modifier.fillMaxWidth()
+++        ) {
+++            ContactUsWhatsApp(value = "WhatsApp")
+++            Spacer(modifier = Modifier.width(35.dp))
+++            ContactUsInsta(value = "Instagram")
+++        }
+++        Spacer(modifier = Modifier.height(16.dp))
+++        Row(
+++            horizontalArrangement = Arrangement.SpaceEvenly,
+++            verticalAlignment = Alignment.CenterVertically,
+++            modifier = Modifier.fillMaxWidth()
+++        ) {
+++            ContactUsWMessanger(value = "Facebook")
+++            Spacer(modifier = Modifier.width(35.dp))
+++            ContactUsTwitter(value = "Twitter")
+++        }
+++    }
+++}
++ 
++-    }
++-}
++\ No newline at end of file
+++@Preview()
+++@Composable
+++fun PreviewContactUs() {
+++    val navController = rememberNavController()
+++    ContactUs(navController)
+++}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679747)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch	(date 1719524679747)
+@@ -0,0 +1,83 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable { }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.info, label = \"Report Incident\") {\r\n                        // logic to take you to report incident page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.clipboard, label = \"View Reports\") {\r\n                        // logic to take you to reported incidents page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth(),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.headphones, label = \"Help & Support\") {\r\n                        // logic to take you to help page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.emergency_contacts, label = \"Emergency Contacts\") {\r\n                        // logic to take you to emergency contacts page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier.height(20.dp)\r\n                ) {\r\n                    // Placeholder for spacing\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun DashboardPreview() {\r\n    val navController = rememberNavController()\r\n    Dashboard(navController)\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719134728082)
++@@ -57,7 +57,7 @@
++                         contentDescription = "",
++                         modifier = Modifier
++                             .size(50.dp, 70.dp)
++-                            .clickable { }
+++                            .clickable {navController.navigate("userProfile")}
++                     )
++                 }
++             }
++@@ -125,7 +125,7 @@
++                     CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
++                         // logic to take you to help page
++                     }
++-                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
+++                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency \n Contacts") {
++                         // logic to take you to emergency contacts page
++                     }
++                 }
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Face\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardColors\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\n\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.BottomButtonsMyProfile\r\nimport com.example.civicalertoriginal.Components.ProfileText\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun UpdateProfile (navController: NavController){\r\n    Surface( color = Color.White) {\r\n        Scaffold (bottomBar = {\r\n            BottomAppBar {\r\n\r\n                Row {\r\n\r\n                    Column (\r\n                    ) {\r\n                        Icon(imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"HOME\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column (){\r\n                        Icon(imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"MAKE REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"VIEW REPORTS\")\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column () {\r\n                        Icon(imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                            .size(30.dp)\r\n                            .align(Alignment.CenterHorizontally))\r\n                        Text(text = \"CALL\")\r\n                    }\r\n\r\n                }\r\n            }\r\n        }){innerPadding ->\r\n            Column {\r\n                Spacer(modifier = Modifier.size(10.dp))\r\n                Column ( modifier = Modifier.fillMaxWidth() ,\r\n                    verticalArrangement = Arrangement.Center, horizontalAlignment = Alignment.CenterHorizontally){\r\n                    Icon(imageVector = Icons.Rounded.Face, contentDescription = \"\", modifier = Modifier.size(80.dp\r\n                    ))\r\n                    Text(text = \"USER NAME\", fontSize = 25.sp)\r\n                }\r\n                val cardColor by remember {\r\n                    mutableStateOf(Color.Green)\r\n                }\r\n\r\n                Card (  modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .background(cardColor) ){\r\n                    Column {\r\n                        ProfileText(description = \"First Name\", value = \"User name\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Last Name\", value = \"Sirname\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Email address\", value = \"emailInForm@gmail.com\")\r\n                        Spacer(modifier = Modifier.size(10.dp))\r\n                        ProfileText(description = \"Phone number\", value = \"+27 68801025\")\r\n\r\n                    } }\r\n\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"UPDATE\") {}\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n                BottomButtonsMyProfile(name = \"Log Out\") {}\r\n            }\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n}\r\n@Preview\r\n@Composable\r\nfun SignUpPreview(){\r\n\r\n}
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(date 1719134622814)
++@@ -6,11 +6,8 @@
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++ import androidx.compose.foundation.layout.Spacer
++-import androidx.compose.foundation.layout.fillMaxHeight
++ import androidx.compose.foundation.layout.fillMaxWidth
++-import androidx.compose.foundation.layout.padding
++ import androidx.compose.foundation.layout.size
++-import androidx.compose.foundation.shape.RoundedCornerShape
++ import androidx.compose.material.icons.Icons
++ import androidx.compose.material.icons.rounded.Call
++ import androidx.compose.material.icons.rounded.Edit
++@@ -19,7 +16,7 @@
++ import androidx.compose.material.icons.rounded.List
++ import androidx.compose.material3.BottomAppBar
++ import androidx.compose.material3.Card
++-import androidx.compose.material3.CardColors
+++import androidx.compose.material3.CardDefaults
++ import androidx.compose.material3.Icon
++ import androidx.compose.material3.Scaffold
++ import androidx.compose.material3.Surface
++@@ -94,7 +91,8 @@
++ 
++                 Card (  modifier = Modifier
++                     .fillMaxWidth()
++-                    .background(cardColor) ){
+++                    , colors = CardDefaults.cardColors(containerColor = Color.White),
+++                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)){
++                     Column {
++                         ProfileText(description = "First Name", value = "User name")
++                         Spacer(modifier = Modifier.size(10.dp))
++Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
++===================================================================
++diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml
++deleted file mode 100644
++--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00__Changes_.xml	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
+++++ /dev/null	(revision 0e08f9c7ba278f824c32ae6d6bde036498ba53f3)
++@@ -1,4 +0,0 @@
++-<changelist name="Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]" date="1718542854526" recycled="true" deleted="true">
++-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch" />
++-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 16/06/2024 15:00 [Changes]" />
++-</changelist>
++\ No newline at end of file
++diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_16_06_2024_15_00_[Changes]/shelved.patch
++deleted file mode 100644
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679735)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]/shelved.patch	(date 1719524679735)
+@@ -0,0 +1,19 @@
++Index: app/src/main/java/com/example/Civicalert/Components/Navigation.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.Civicalert.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.Civicalert.Screens.DashBoard\r\nimport com.example.Civicalert.Screens.ForgotPassword\r\nimport com.example.Civicalert.Screens.LogIn\r\nimport com.example.Civicalert.Screens.Registration\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"logIn\" +\r\n            \"\" +\r\n            \"\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n\r\n    }\r\n}
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Components/Navigation.kt b/app/src/main/java/com/example/Civicalert/Components/Navigation.kt
++--- a/app/src/main/java/com/example/Civicalert/Components/Navigation.kt	
+++++ b/app/src/main/java/com/example/Civicalert/Components/Navigation.kt	
++@@ -14,9 +14,7 @@
++ @Composable
++ fun Navigation (){
++     val navController = rememberNavController()
++-    NavHost(navController = navController, startDestination = "logIn" +
++-            "" +
++-            "") {
+++    NavHost(navController = navController, startDestination = "Dashboard") {
++         composable("registration"){
++             Registration(navController)
++         }
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679767)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]/shelved.patch	(date 1719524679767)
+@@ -0,0 +1,124 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.ContactUSEmailButton\r\nimport com.example.civicalertoriginal.Components.ContactUsContactButton\r\nimport com.example.civicalertoriginal.Components.ContactUsInsta\r\nimport com.example.civicalertoriginal.Components.ContactUsTwitter\r\nimport com.example.civicalertoriginal.Components.ContactUsWMessanger\r\nimport com.example.civicalertoriginal.Components.ContactUsWhatsApp\r\nimport com.example.civicalertoriginal.R\r\n\r\n@Composable\r\nfun ContactUs (navController: NavController){\r\n    Surface(color = Color.White) {\r\n       Scaffold (bottomBar = {\r\n           BottomAppBar {\r\n\r\n               Row {\r\n\r\n                   Column (\r\n                   ) {\r\n                       Icon(imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally)\r\n                           .clickable { navController.navigate(\"dashBoard\") })\r\n                       Text(text = \"HOME\", fontSize = 15.sp)\r\n                   }\r\n                   Spacer(modifier = Modifier.size(20.dp))\r\n                   Column (){\r\n                       Icon(imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally))\r\n                       Text(text = \"MAKE REPORTS\", fontSize = 15.sp)\r\n                   }\r\n                   Spacer(modifier = Modifier.size(20.dp))\r\n                   Column () {\r\n                       Icon(imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally))\r\n                       Text(text = \"VIEW REPORTS\", fontSize = 15.sp)\r\n                   }\r\n                   Spacer(modifier = Modifier.size(20.dp))\r\n                   Column () {\r\n                       Icon(imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                           .size(30.dp)\r\n                           .align(Alignment.CenterHorizontally)\r\n                           .clickable { navController.navigate(\"contactUs\") })\r\n                       Text(text = \"CALL\", fontSize = 15.sp)\r\n                   }\r\n               } } }){innerPadding ->\r\n           Column {\r\n               Image(contentDescription =\"\", painter = painterResource(id = R.drawable.contact), modifier = Modifier.size(120.dp,150.dp) )\r\n               Spacer(modifier = Modifier.size(5.dp))\r\n               Text(text = \"Contact Us\", modifier = Modifier\r\n                   .fillMaxWidth(), fontSize = 50.sp, fontFamily = FontFamily.Default, fontStyle = FontStyle.Normal, fontWeight = FontWeight.Bold)\r\n               Text(text = \"If you have enquires get in touch with us. We will be more than happy to help you.\")\r\n               Spacer(modifier = Modifier.size(20.dp))\r\n               Row (modifier = Modifier.fillMaxWidth() , verticalAlignment = Alignment.CenterVertically, horizontalArrangement = Arrangement.SpaceEvenly){\r\n                   ContactUsContactButton(value = \"Call\")\r\n                   ContactUSEmailButton(value = \"Email\")\r\n               }\r\n               Spacer(modifier = Modifier\r\n                   .size(20.dp)\r\n                   .align(Alignment.Start))\r\n               Text(text = \"Social Media\", fontSize = 25.sp)\r\n               Column (modifier = Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.SpaceAround){\r\n                   Spacer(modifier = Modifier.size(15.dp))\r\n                   Row {\r\n                       ContactUsWhatsApp(value = \"WhatsApp\")\r\n                       Spacer(modifier = Modifier.size(35.dp))\r\n                       ContactUsInsta(value = \"Instagram\")\r\n                   }\r\n                   Row {\r\n                       ContactUsWMessanger(value = \"Facebook\")\r\n                       Spacer(modifier = Modifier.size(35.dp))\r\n                       ContactUsTwitter(value = \"Twitter\")\r\n                   }\r\n\r\n               }\r\n\r\n\r\n           }\r\n       }\r\n\r\n    }\r\n}
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	
++@@ -1,114 +1,0 @@
++-package com.example.civicalertoriginal.Screens
++-
++-import androidx.compose.foundation.Image
++-import androidx.compose.foundation.clickable
++-import androidx.compose.foundation.layout.Arrangement
++-import androidx.compose.foundation.layout.Column
++-import androidx.compose.foundation.layout.Row
++-import androidx.compose.foundation.layout.Spacer
++-import androidx.compose.foundation.layout.fillMaxWidth
++-import androidx.compose.foundation.layout.size
++-import androidx.compose.material.icons.Icons
++-import androidx.compose.material.icons.rounded.Call
++-import androidx.compose.material.icons.rounded.Edit
++-import androidx.compose.material.icons.rounded.Home
++-import androidx.compose.material.icons.rounded.List
++-import androidx.compose.material3.BottomAppBar
++-import androidx.compose.material3.Icon
++-import androidx.compose.material3.Scaffold
++-import androidx.compose.material3.Surface
++-import androidx.compose.material3.Text
++-import androidx.compose.runtime.Composable
++-import androidx.compose.ui.Alignment
++-import androidx.compose.ui.Modifier
++-import androidx.compose.ui.graphics.Color
++-import androidx.compose.ui.res.painterResource
++-import androidx.compose.ui.text.font.FontFamily
++-import androidx.compose.ui.text.font.FontStyle
++-import androidx.compose.ui.text.font.FontWeight
++-import androidx.compose.ui.unit.dp
++-import androidx.compose.ui.unit.sp
++-import androidx.navigation.NavController
++-import com.example.civicalertoriginal.Components.ContactUSEmailButton
++-import com.example.civicalertoriginal.Components.ContactUsContactButton
++-import com.example.civicalertoriginal.Components.ContactUsInsta
++-import com.example.civicalertoriginal.Components.ContactUsTwitter
++-import com.example.civicalertoriginal.Components.ContactUsWMessanger
++-import com.example.civicalertoriginal.Components.ContactUsWhatsApp
++-import com.example.civicalertoriginal.R
++-
++-@Composable
++-fun ContactUs (navController: NavController){
++-    Surface(color = Color.White) {
++-       Scaffold (bottomBar = {
++-           BottomAppBar {
++-
++-               Row {
++-
++-                   Column (
++-                   ) {
++-                       Icon(imageVector = Icons.Rounded.Home, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally)
++-                           .clickable { navController.navigate("dashBoard") })
++-                       Text(text = "HOME", fontSize = 15.sp)
++-                   }
++-                   Spacer(modifier = Modifier.size(20.dp))
++-                   Column (){
++-                       Icon(imageVector = Icons.Rounded.Edit, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally))
++-                       Text(text = "MAKE REPORTS", fontSize = 15.sp)
++-                   }
++-                   Spacer(modifier = Modifier.size(20.dp))
++-                   Column () {
++-                       Icon(imageVector = Icons.Rounded.List, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally))
++-                       Text(text = "VIEW REPORTS", fontSize = 15.sp)
++-                   }
++-                   Spacer(modifier = Modifier.size(20.dp))
++-                   Column () {
++-                       Icon(imageVector = Icons.Rounded.Call, contentDescription = "", modifier = Modifier
++-                           .size(30.dp)
++-                           .align(Alignment.CenterHorizontally)
++-                           .clickable { navController.navigate("contactUs") })
++-                       Text(text = "CALL", fontSize = 15.sp)
++-                   }
++-               } } }){innerPadding ->
++-           Column {
++-               Image(contentDescription ="", painter = painterResource(id = R.drawable.contact), modifier = Modifier.size(120.dp,150.dp) )
++-               Spacer(modifier = Modifier.size(5.dp))
++-               Text(text = "Contact Us", modifier = Modifier
++-                   .fillMaxWidth(), fontSize = 50.sp, fontFamily = FontFamily.Default, fontStyle = FontStyle.Normal, fontWeight = FontWeight.Bold)
++-               Text(text = "If you have enquires get in touch with us. We will be more than happy to help you.")
++-               Spacer(modifier = Modifier.size(20.dp))
++-               Row (modifier = Modifier.fillMaxWidth() , verticalAlignment = Alignment.CenterVertically, horizontalArrangement = Arrangement.SpaceEvenly){
++-                   ContactUsContactButton(value = "Call")
++-                   ContactUSEmailButton(value = "Email")
++-               }
++-               Spacer(modifier = Modifier
++-                   .size(20.dp)
++-                   .align(Alignment.Start))
++-               Text(text = "Social Media", fontSize = 25.sp)
++-               Column (modifier = Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.SpaceAround){
++-                   Spacer(modifier = Modifier.size(15.dp))
++-                   Row {
++-                       ContactUsWhatsApp(value = "WhatsApp")
++-                       Spacer(modifier = Modifier.size(35.dp))
++-                       ContactUsInsta(value = "Instagram")
++-                   }
++-                   Row {
++-                       ContactUsWMessanger(value = "Facebook")
++-                       Spacer(modifier = Modifier.size(35.dp))
++-                       ContactUsTwitter(value = "Twitter")
++-                   }
++-
++-               }
++-
++-
++-           }
++-       }
++-
++-    }
++-}
++\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679752)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]/shelved.patch	(date 1719524679752)
+@@ -0,0 +1,48 @@
++Index: app/src/main/java/com/example/Civicalert/Components/Components.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.Civicalert.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun Logo(){\r\n    Image(painter = painterResource(id = R.drawable.logo),\r\n        contentDescription = \"\", modifier = Modifier.size(120.dp, 120.dp))\r\n}\r\n@Composable\r\nfun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {\r\n    Card(\r\n        modifier = Modifier\r\n            .size(160.dp)\r\n            .clickable(onClick = onClick),\r\n        colors = CardDefaults.cardColors(containerColor = Color.White), // Set the background color to white\r\n        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp) // Set elevation to add shadow\r\n    ) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(8.dp),\r\n            verticalArrangement = Arrangement.Center,\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            Image(\r\n                painter = painterResource(id = iconRes),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(40.dp)\r\n            )\r\n            Text(text = label)\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n\r\n\r\n
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Components/Components.kt b/app/src/main/java/com/example/Civicalert/Components/Components.kt
++--- a/app/src/main/java/com/example/Civicalert/Components/Components.kt	
+++++ b/app/src/main/java/com/example/Civicalert/Components/Components.kt	
++@@ -191,6 +191,7 @@
++             color = Color.Black)
++     }
++ }
+++
++ @Composable
++ fun SignUpText(value: String){
++     Row ( modifier = Modifier.padding(2.dp)){
++@@ -200,8 +201,7 @@
++ 
++         Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier
++             .size(20.dp)
++-            .padding(end = 16.dp, start = 12.dp)
++-
+++            .padding(end = 20.dp, start = 12.dp)
++             .clip(RoundedCornerShape(50.dp))
++         )
++     }
++@@ -257,11 +257,13 @@
++         )
++     }
++ }
+++
++ @Composable
++ fun Logo(){
++     Image(painter = painterResource(id = R.drawable.logo),
++         contentDescription = "", modifier = Modifier.size(120.dp, 120.dp))
++ }
+++
++ @Composable
++ fun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {
++     Card(
++@@ -379,6 +381,7 @@
++         }
++     }
++ }
+++
++ @Composable
++ fun SignUpBottomButtons( name:String , onClick : ()-> Unit ){
++     Button(
+Index: app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.EmailTextFields\r\nimport com.example.civicalertoriginal.Components.InstructionText\r\nimport com.example.civicalertoriginal.Components.LogAndForgotHeader\r\nimport com.example.civicalertoriginal.Components.PasswordTextFields\r\nimport com.example.civicalertoriginal.Components.SignUpBottomButtons\r\nimport com.example.civicalertoriginal.R\r\n\r\nimport java.util.regex.Pattern\r\n\r\n\r\n@Composable\r\nfun LogIn(navController: NavController) {\r\n    Surface(\r\n        color = Color.White\r\n    ) {\r\n        Column (\r\n            horizontalAlignment = Alignment.CenterHorizontally,\r\n            modifier = Modifier\r\n                .padding(start = 16.dp, end = 16.dp, top = 80.dp)\r\n                .fillMaxSize()\r\n\r\n        ){\r\n         LogAndForgotHeader(screenLabel = \"Login\")\r\n            val context = LocalContext.current\r\n\r\n            Spacer(modifier = Modifier.size(40.dp))\r\n            var email by remember { mutableStateOf(\"\") }\r\n            var password by remember {mutableStateOf(\"\")}\r\n\r\n            Spacer(modifier = Modifier.padding(10.dp))\r\n\r\n            fun validatePassword(password:String):Boolean{\r\n                val passwordPattern = \"[a-zA-Z0-9]\"\r\n               return  Pattern.matches(passwordPattern,password)\r\n            }\r\n            fun validateEmail(email: String): Boolean {\r\n                val emailPattern = \"[a-zA-Z0-9_]+@+\\\\.[a-zA-Z]\"\r\n                return Pattern.matches(emailPattern, email)\r\n            }\r\n            //matches the alphas numerics, matches the @, matches alpha numeric, matches atleast two charecters\r\n\r\n\r\n\r\n\r\n            EmailTextFields(value = email, onChange = {\r\n                if (email.length<=100){\r\n                    email=it\r\n                    validateEmail(email)\r\n                }                                     },\r\n                fieldLabel = \"Enter Email Address\" )\r\n\r\n\r\n            Spacer(modifier = Modifier.size(10.dp))\r\n            PasswordTextFields(value = password, onChange = {\r\n\r\n                if (password.length<9){\r\n                    password=it\r\n                    validatePassword(password)\r\n                }\r\n\r\n             },\r\n                fieldLabel = \"Enter your password\")\r\n\r\n            Spacer(modifier = Modifier.padding(6.dp))\r\n\r\n            Row( verticalAlignment = Alignment.Bottom,\r\n                horizontalArrangement = Arrangement.SpaceBetween, modifier = Modifier\r\n                    .padding(20.dp)\r\n                    .align(Alignment.CenterHorizontally)\r\n\r\n            ) {\r\n\r\n              Text(text = \"Forgot Password?\", modifier = Modifier\r\n                  .clickable { navController.navigate(\"ForgotPassword\") }\r\n                  .padding(end = 25.dp),\r\n                    style = TextStyle(\r\n                        fontStyle = FontStyle.Normal,\r\n                        color = Color.Blue\r\n                    )\r\n                )\r\n                Spacer(modifier = Modifier.size(15.dp))\r\n\r\n                Text(text = \"Register\", modifier = Modifier\r\n                    .clickable { navController.navigate(\"registration\") }\r\n                    .padding(start = 25.dp),\r\n                    style = TextStyle( fontStyle = FontStyle.Normal,\r\n                        color = Color.Blue)\r\n                )\r\n\r\n            }\r\n\r\n            Spacer(modifier = Modifier.size(50.dp))\r\n            InstructionText(value = \"Sign with google\")\r\n\r\n                Image( modifier = Modifier\r\n                    .size(50.dp,55.dp)\r\n                    .clickable {  },painter = painterResource(id = R.drawable.googlepic),\r\n                    contentDescription = \"Google SignIn\" )\r\n\r\n            Spacer(modifier = Modifier.size(18.dp))\r\n\r\n            SignUpBottomButtons(\r\n                name = \"Sign in\",\r\n                onClick = {\r\n                    Toast.makeText(context, \"Sign in Successful\", Toast.LENGTH_SHORT).show()\r\n                    navController.navigate(\"dashboard\")\r\n                }\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun LogInPreview(){\r\n    val navController = rememberNavController()\r\n    LogIn( navController)\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
+--- a/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt	(revision 7bad70f467c4fad9b0eeae76e07474de36d97ae6)
++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt	(date 1719524679780)
+@@ -1,5 +1,6 @@
+ package com.example.civicalertoriginal.Screens
+ 
++import android.provider.ContactsContract.CommonDataKinds.Email
+ import android.widget.Toast
+ import androidx.compose.foundation.Image
+ import androidx.compose.foundation.clickable
+@@ -13,6 +14,7 @@
+ import androidx.compose.material3.Surface
+ import androidx.compose.material3.Text
+ import androidx.compose.runtime.Composable
++import androidx.compose.runtime.MutableState
+ import androidx.compose.runtime.getValue
+ import androidx.compose.runtime.mutableStateOf
+ import androidx.compose.runtime.remember
+@@ -28,13 +30,14 @@
+ import androidx.compose.ui.unit.dp
+ import androidx.navigation.NavController
+ import androidx.navigation.compose.rememberNavController
++import com.example.civicalertoriginal.Components.BottomButtons
+ import com.example.civicalertoriginal.Components.EmailTextFields
+ import com.example.civicalertoriginal.Components.InstructionText
+ import com.example.civicalertoriginal.Components.LogAndForgotHeader
+ import com.example.civicalertoriginal.Components.PasswordTextFields
+-import com.example.civicalertoriginal.Components.SignUpBottomButtons
++import com.example.civicalertoriginal.Components.TextFields
++
+ import com.example.civicalertoriginal.R
+-
+ import java.util.regex.Pattern
+ 
+ 
+@@ -123,19 +126,12 @@
+             InstructionText(value = "Sign with google")
+ 
+                 Image( modifier = Modifier
+-                    .size(50.dp,55.dp)
+-                    .clickable {  },painter = painterResource(id = R.drawable.googlepic),
++                    .size(50.dp,55.dp),painter = painterResource(id = R.drawable.googlepic),
+                     contentDescription = "Google SignIn" )
+-
+             Spacer(modifier = Modifier.size(18.dp))
++            BottomButtons(name = "Sign Up") {Toast.makeText(context,"Sign in Successful",Toast.LENGTH_SHORT).show()
++            navController.navigate("Dashboard")}
+ 
+-            SignUpBottomButtons(
+-                name = "Sign in",
+-                onClick = {
+-                    Toast.makeText(context, "Sign in Successful", Toast.LENGTH_SHORT).show()
+-                    navController.navigate("dashboard")
+-                }
+-            )
+ 
+         }
+     }
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679745)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch	(date 1719524679745)
+@@ -0,0 +1,374 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Components\r\n\r\nimport CivicAlert.Screen.MakeReports\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Screens.DashBoard\r\nimport com.example.civicalertoriginal.Screens.ForgotPassword\r\nimport com.example.civicalertoriginal.Screens.LogIn\r\nimport com.example.civicalertoriginal.Screens.Registration\r\nimport com.example.civicalertoriginal.Screens.UpdateProfile\r\n\r\n\r\n@Composable\r\nfun Navigation (){\r\n    val navController = rememberNavController()\r\n    NavHost(navController = navController, startDestination = \"login\") {\r\n        composable(\"registration\"){\r\n            Registration(navController)\r\n        }\r\n        composable(\"Login\"){\r\n            LogIn(navController)\r\n        }\r\n        composable(\"forgotPassword\"){\r\n            ForgotPassword(navController)\r\n        }\r\n        composable(\"Dashboard\"){\r\n            DashBoard(navController)\r\n        }\r\n        composable(\"makeReports\"){\r\n            MakeReports(navController)\r\n        }\r\n        composable(\"userProfile\"){\r\n            UpdateProfile(navController)\r\n        }\r\n\r\n    }\r\n}
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	(date 1719131720777)
++@@ -5,7 +5,7 @@
++ import androidx.navigation.compose.NavHost
++ import androidx.navigation.compose.composable
++ import androidx.navigation.compose.rememberNavController
++-import com.example.civicalertoriginal.Screens.DashBoard
+++import com.example.civicalertoriginal.Screens.Dashboard
++ import com.example.civicalertoriginal.Screens.ForgotPassword
++ import com.example.civicalertoriginal.Screens.LogIn
++ import com.example.civicalertoriginal.Screens.Registration
++@@ -15,7 +15,7 @@
++ @Composable
++ fun Navigation (){
++     val navController = rememberNavController()
++-    NavHost(navController = navController, startDestination = "login") {
+++    NavHost(navController = navController, startDestination = "Login") {
++         composable("registration"){
++             Registration(navController)
++         }
++@@ -26,7 +26,7 @@
++             ForgotPassword(navController)
++         }
++         composable("Dashboard"){
++-            DashBoard(navController)
+++            Dashboard(navController)
++         }
++         composable("makeReports"){
++             MakeReports(navController)
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.EmailTextFields\r\nimport com.example.civicalertoriginal.Components.InstructionText\r\nimport com.example.civicalertoriginal.Components.LogAndForgotHeader\r\nimport com.example.civicalertoriginal.Components.PasswordTextFields\r\nimport com.example.civicalertoriginal.Components.SignUpBottomButtons\r\nimport com.example.civicalertoriginal.R\r\n\r\nimport java.util.regex.Pattern\r\n\r\n\r\n@Composable\r\nfun LogIn(navController: NavController) {\r\n    Surface(\r\n        color = Color.White\r\n    ) {\r\n        Column (\r\n            horizontalAlignment = Alignment.CenterHorizontally,\r\n            modifier = Modifier\r\n                .padding(start = 16.dp, end = 16.dp, top = 80.dp)\r\n                .fillMaxSize()\r\n\r\n        ){\r\n         LogAndForgotHeader(screenLabel = \"Login\")\r\n            val context = LocalContext.current\r\n\r\n            Spacer(modifier = Modifier.size(40.dp))\r\n            var email by remember { mutableStateOf(\"\") }\r\n            var password by remember {mutableStateOf(\"\")}\r\n\r\n            Spacer(modifier = Modifier.padding(10.dp))\r\n\r\n            fun validatePassword(password:String):Boolean{\r\n                val passwordPattern = \"[a-zA-Z0-9]\"\r\n               return  Pattern.matches(passwordPattern,password)\r\n            }\r\n            fun validateEmail(email: String): Boolean {\r\n                val emailPattern = \"[a-zA-Z0-9_]+@+\\\\.[a-zA-Z]\"\r\n                return Pattern.matches(emailPattern, email)\r\n            }\r\n            //matches the alphas numerics, matches the @, matches alpha numeric, matches atleast two charecters\r\n\r\n\r\n\r\n\r\n            EmailTextFields(value = email, onChange = {\r\n                if (email.length<=100){\r\n                    email=it\r\n                    validateEmail(email)\r\n                }                                     },\r\n                fieldLabel = \"Enter Email Address\" )\r\n\r\n\r\n            Spacer(modifier = Modifier.size(10.dp))\r\n            PasswordTextFields(value = password, onChange = {\r\n\r\n                if (password.length<9){\r\n                    password=it\r\n                    validatePassword(password)\r\n                }\r\n\r\n             },\r\n                fieldLabel = \"Enter your password\")\r\n\r\n            Spacer(modifier = Modifier.padding(6.dp))\r\n\r\n            Row( verticalAlignment = Alignment.Bottom,\r\n                horizontalArrangement = Arrangement.SpaceBetween, modifier = Modifier\r\n                    .padding(20.dp)\r\n                    .align(Alignment.CenterHorizontally)\r\n\r\n            ) {\r\n\r\n              Text(text = \"Forgot Password?\", modifier = Modifier\r\n                  .clickable { navController.navigate(\"ForgotPassword\") }\r\n                  .padding(end = 25.dp),\r\n                    style = TextStyle(\r\n                        fontStyle = FontStyle.Normal,\r\n                        color = Color.Blue\r\n                    )\r\n                )\r\n                Spacer(modifier = Modifier.size(15.dp))\r\n\r\n                Text(text = \"Register\", modifier = Modifier\r\n                    .clickable { navController.navigate(\"registration\") }\r\n                    .padding(start = 25.dp),\r\n                    style = TextStyle( fontStyle = FontStyle.Normal,\r\n                        color = Color.Blue)\r\n                )\r\n\r\n            }\r\n\r\n            Spacer(modifier = Modifier.size(50.dp))\r\n            InstructionText(value = \"Sign with google\")\r\n\r\n                Image( modifier = Modifier\r\n                    .size(50.dp,55.dp)\r\n                    .clickable {  },painter = painterResource(id = R.drawable.googlepic),\r\n                    contentDescription = \"Google SignIn\" )\r\n\r\n            Spacer(modifier = Modifier.size(18.dp))\r\n\r\n            SignUpBottomButtons(name = \"Sign in\",)\r\n\r\n            {Toast.makeText(context,\"Sign in Successful\",Toast.LENGTH_SHORT).show()}\r\n\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun LogInPreview(){\r\n    val navController = rememberNavController()\r\n    LogIn( navController)\r\n}
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt	(date 1719131527443)
++@@ -129,9 +129,13 @@
++ 
++             Spacer(modifier = Modifier.size(18.dp))
++ 
++-            SignUpBottomButtons(name = "Sign in",)
++-
++-            {Toast.makeText(context,"Sign in Successful",Toast.LENGTH_SHORT).show()}
+++            SignUpBottomButtons(
+++                name = "Sign in",
+++                onClick = {
+++                    Toast.makeText(context, "Sign in Successful", Toast.LENGTH_SHORT).show()
+++                    navController.navigate("dashboard")
+++                }
+++            )
++ 
++         }
++     }
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++deleted file mode 100644
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
+++++ /dev/null	(revision 50634f59fabe006ec475185a3db59e48b29c455b)
++@@ -1,139 +0,0 @@
++-package com.example.civicalertoriginal.Screens
++-
++-import androidx.compose.foundation.Image
++-import androidx.compose.foundation.clickable
++-import androidx.compose.foundation.layout.Arrangement
++-import androidx.compose.foundation.layout.Column
++-import androidx.compose.foundation.layout.Row
++-import androidx.compose.foundation.layout.fillMaxHeight
++-import androidx.compose.foundation.layout.fillMaxSize
++-import androidx.compose.foundation.layout.fillMaxWidth
++-import androidx.compose.foundation.layout.height
++-import androidx.compose.foundation.layout.padding
++-import androidx.compose.foundation.layout.size
++-import androidx.compose.foundation.rememberScrollState
++-import androidx.compose.foundation.verticalScroll
++-import androidx.compose.material3.Card
++-import androidx.compose.material3.CardDefaults
++-import androidx.compose.material3.ExperimentalMaterial3Api
++-import androidx.compose.material3.Surface
++-import androidx.compose.material3.Text
++-import androidx.compose.runtime.Composable
++-import androidx.compose.ui.Alignment
++-import androidx.compose.ui.Modifier
++-import androidx.compose.ui.graphics.Color
++-import androidx.compose.ui.res.painterResource
++-import androidx.compose.ui.text.font.FontWeight
++-import androidx.compose.ui.tooling.preview.Preview
++-import androidx.compose.ui.unit.dp
++-import androidx.compose.ui.unit.sp
++-import androidx.navigation.NavController
++-import androidx.navigation.compose.rememberNavController
++-import com.example.civicalertoriginal.Components.CardButton
++-import com.example.civicalertoriginal.Components.Logo
++-import com.example.civicalertoriginal.R
++-
++-@OptIn(ExperimentalMaterial3Api::class)
++-@Composable
++-fun DashBoard(navController: NavController){
++-
++-    Surface(color = Color.White,
++-        modifier = Modifier.verticalScroll(rememberScrollState())
++-    ) {
++-        Column (
++-            modifier = Modifier
++-                .fillMaxSize()
++-                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp)
++-                .verticalScroll(rememberScrollState()),
++-            verticalArrangement = Arrangement.spacedBy(18.dp),
++-            horizontalAlignment = Alignment.CenterHorizontally
++-        ){
++-            Row (
++-                horizontalArrangement = Arrangement.SpaceBetween,
++-                modifier = Modifier
++-                    .height(80.dp)
++-                    .fillMaxWidth()
++-            ) {
++-                Logo()
++-                Image(
++-                    painter = painterResource(id = R.drawable.profie),
++-                    contentDescription = "",
++-                    modifier = Modifier
++-                        .size(50.dp, 70.dp)
++-                        .clickable { }
++-                )
++-            }
++-
++-            Column(
++-                modifier = Modifier.height(300.dp)
++-            ) {
++-                Card(
++-                    modifier = Modifier
++-                        .fillMaxWidth()
++-                        .fillMaxHeight(),
++-                    colors = CardDefaults.cardColors(containerColor = Color.White),
++-                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
++-                ) {
++-                    Column(
++-                        modifier = Modifier
++-                            .padding(16.dp)
++-                    ) {
++-                        Text(text = "Recent report",
++-                            fontWeight = FontWeight.Bold, fontSize = 20.sp)
++-                        Image(
++-                            painter = painterResource(id = R.drawable.photo),
++-                            contentDescription = "Picture of reported incident",
++-                            modifier = Modifier.height(150.dp)
++-                        )
++-                        Text(text = "Broken Street Light",
++-                            fontWeight = FontWeight.Bold, fontSize = 20.sp)
++-                        Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
++-                        Text(text = "14 March")
++-                        Text(text = "Streetlight")
++-                    }
++-                }
++-            }
++-
++-            Row(
++-                modifier = Modifier
++-                    .fillMaxWidth()
++-                    .padding(top = 20.dp),
++-                horizontalArrangement = Arrangement.SpaceAround
++-            ) {
++-                CardButton(iconRes = R.drawable.info, label = "Report Incident") {
++-                    // logic to take you to report incident  page
++-                }
++-                CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
++-                    // logic to take you reported incidents  page
++-                }
++-            }
++-
++-            Row(
++-                modifier = Modifier
++-                    .fillMaxWidth(),
++-                horizontalArrangement = Arrangement.SpaceAround
++-            ) {
++-                CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
++-                    // logic to take you to help page
++-                }
++-                CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
++-                    // logic to take you to emergency contacts page
++-                }
++-            }
++-
++-            Row (modifier = Modifier
++-                .height(20.dp)){
++-
++-            }
++-        }
++-    }
++-}
++-
++-
++-
++-@Preview
++-@Composable
++-fun DashBoardPreview(){
++-    val navController = rememberNavController()
++-    DashBoard(navController)
++-}
++\ No newline at end of file
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++new file mode 100644
++--- /dev/null	(date 1719133281367)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719133281367)
++@@ -0,0 +1,150 @@
+++package com.example.civicalertoriginal.Screens
+++
+++import androidx.compose.foundation.Image
+++import androidx.compose.foundation.clickable
+++import androidx.compose.foundation.layout.Arrangement
+++import androidx.compose.foundation.layout.Column
+++import androidx.compose.foundation.layout.Row
+++import androidx.compose.foundation.layout.fillMaxHeight
+++import androidx.compose.foundation.layout.fillMaxSize
+++import androidx.compose.foundation.layout.fillMaxWidth
+++import androidx.compose.foundation.layout.height
+++import androidx.compose.foundation.layout.padding
+++import androidx.compose.foundation.layout.size
+++import androidx.compose.foundation.lazy.LazyColumn
+++import androidx.compose.foundation.lazy.items
+++import androidx.compose.material3.Card
+++import androidx.compose.material3.CardDefaults
+++import androidx.compose.material3.ExperimentalMaterial3Api
+++import androidx.compose.material3.Surface
+++import androidx.compose.material3.Text
+++import androidx.compose.runtime.Composable
+++import androidx.compose.ui.Alignment
+++import androidx.compose.ui.Modifier
+++import androidx.compose.ui.graphics.Color
+++import androidx.compose.ui.res.painterResource
+++import androidx.compose.ui.text.font.FontWeight
+++import androidx.compose.ui.tooling.preview.Preview
+++import androidx.compose.ui.unit.dp
+++import androidx.compose.ui.unit.sp
+++import androidx.navigation.NavController
+++import androidx.navigation.compose.rememberNavController
+++import com.example.civicalertoriginal.Components.CardButton
+++import com.example.civicalertoriginal.Components.Logo
+++import com.example.civicalertoriginal.R
+++
+++@OptIn(ExperimentalMaterial3Api::class)
+++@Composable
+++fun Dashboard(navController: NavController) {
+++    Surface(color = Color.White) {
+++        LazyColumn(
+++            modifier = Modifier
+++                .fillMaxSize()
+++                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),
+++            verticalArrangement = Arrangement.spacedBy(18.dp),
+++            horizontalAlignment = Alignment.CenterHorizontally
+++        ) {
+++            item {
+++                Row(
+++                    horizontalArrangement = Arrangement.SpaceBetween,
+++                    modifier = Modifier
+++                        .height(80.dp)
+++                        .fillMaxWidth()
+++                ) {
+++                    Logo()
+++                    Image(
+++                        painter = painterResource(id = R.drawable.profie),
+++                        contentDescription = "",
+++                        modifier = Modifier
+++                            .size(50.dp, 70.dp)
+++                            .clickable { }
+++                    )
+++                }
+++            }
+++
+++            item {
+++                Column(
+++                    modifier = Modifier.height(300.dp)
+++                ) {
+++                    Card(
+++                        modifier = Modifier
+++                            .fillMaxWidth()
+++                            .fillMaxHeight(),
+++                        colors = CardDefaults.cardColors(containerColor = Color.White),
+++                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
+++                    ) {
+++                        Column(
+++                            modifier = Modifier
+++                                .padding(16.dp)
+++                        ) {
+++                            Text(
+++                                text = "Recent report",
+++                                fontWeight = FontWeight.Bold,
+++                                fontSize = 20.sp
+++                            )
+++                            Image(
+++                                painter = painterResource(id = R.drawable.photo),
+++                                contentDescription = "Picture of reported incident",
+++                                modifier = Modifier.height(150.dp)
+++                            )
+++                            Text(
+++                                text = "Broken Street Light",
+++                                fontWeight = FontWeight.Bold,
+++                                fontSize = 20.sp
+++                            )
+++                            Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
+++                            Text(text = "14 March")
+++                            Text(text = "Streetlight")
+++                        }
+++                    }
+++                }
+++            }
+++
+++            item {
+++                Row(
+++                    modifier = Modifier
+++                        .fillMaxWidth()
+++                        .padding(top = 20.dp),
+++                    horizontalArrangement = Arrangement.SpaceAround
+++                ) {
+++                    CardButton(iconRes = R.drawable.info, label = "Report Incident") {
+++                        // logic to take you to report incident page
+++                    }
+++                    CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
+++                        // logic to take you to reported incidents page
+++                    }
+++                }
+++            }
+++
+++            item {
+++                Row(
+++                    modifier = Modifier
+++                        .fillMaxWidth(),
+++                    horizontalArrangement = Arrangement.SpaceAround
+++                ) {
+++                    CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
+++                        // logic to take you to help page
+++                    }
+++                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
+++                        // logic to take you to emergency contacts page
+++                    }
+++                }
+++            }
+++
+++            item {
+++                Row(
+++                    modifier = Modifier.height(20.dp)
+++                ) {
+++                    // Placeholder for spacing
+++                }
+++            }
+++        }
+++    }
+++}
+++
+++@Preview
+++@Composable
+++fun DashboardPreview() {
+++    val navController = rememberNavController()
+++    Dashboard(navController)
+++}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679739)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]/shelved.patch	(date 1719524679739)
+@@ -0,0 +1,356 @@
++Index: app/src/main/java/com/example/Civicalert/Screens/DashBoard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++rename from app/src/main/java/com/example/Civicalert/Screens/DashBoard.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++--- a/app/src/main/java/com/example/Civicalert/Screens/DashBoard.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	
++@@ -1,4 +1,4 @@
++-package com.example.Civicalert.Screens
+++package com.example.civicalertoriginal.Screens
++ 
++ import androidx.compose.foundation.Image
++ import androidx.compose.foundation.clickable
++@@ -29,13 +29,12 @@
++ import androidx.compose.ui.unit.sp
++ import androidx.navigation.NavController
++ import androidx.navigation.compose.rememberNavController
++-import com.example.Civicalert.Components.CardButton
++-import com.example.Civicalert.Components.Logo
+++import com.example.civicalertoriginal.Components.*
++ import com.example.civicalertoriginal.R
++ 
++ @OptIn(ExperimentalMaterial3Api::class)
++ @Composable
++-fun DashBoard(navController: NavController){
+++fun DashBoard(navController: NavController) {
++ 
++     Surface(color = Color.White,
++         modifier = Modifier.verticalScroll(rememberScrollState())
++@@ -101,10 +100,10 @@
++                 horizontalArrangement = Arrangement.SpaceAround
++             ) {
++                 CardButton(iconRes = R.drawable.info, label = "Report Incident") {
++-                    // logic to take you to report incident  page
+++                    navController.navigate("report_incident")
++                 }
++                 CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
++-                    // logic to take you reported incidents  page
+++                    navController.navigate("View_reports")
++                 }
++             }
++ 
++@@ -114,10 +113,10 @@
++                 horizontalArrangement = Arrangement.SpaceAround
++             ) {
++                 CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
++-                    // logic to take you to help page
+++                    navController.navigate("help_&_support")
++                 }
++                 CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
++-                    // logic to take you to emergency contacts page
+++                    navController.navigate("emergency_contacts")
++                 }
++             }
++ 
++Index: app/src/main/java/com/example/Civicalert/Screens/LogIn.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Screens/LogIn.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
++rename from app/src/main/java/com/example/Civicalert/Screens/LogIn.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt
++--- a/app/src/main/java/com/example/Civicalert/Screens/LogIn.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/LogIn.kt	
++@@ -1,4 +1,4 @@
++-package com.example.Civicalert.Screens
+++package com.example.civicalertoriginal.Screens
++ 
++ import android.widget.Toast
++ import androidx.compose.foundation.Image
++@@ -28,12 +28,11 @@
++ import androidx.compose.ui.unit.dp
++ import androidx.navigation.NavController
++ import androidx.navigation.compose.rememberNavController
++-import com.example.Civicalert.Components.BottomButtons
++-import com.example.Civicalert.Components.EmailTextFields
++-import com.example.Civicalert.Components.InstructionText
++-import com.example.Civicalert.Components.LogAndForgotHeader
++-import com.example.Civicalert.Components.PasswordTextFields
++-import com.example.Civicalert.Components.SignUpBottomButtons
+++import com.example.civicalertoriginal.Components.EmailTextFields
+++import com.example.civicalertoriginal.Components.InstructionText
+++import com.example.civicalertoriginal.Components.LogAndForgotHeader
+++import com.example.civicalertoriginal.Components.PasswordTextFields
+++import com.example.civicalertoriginal.Components.SignUpBottomButtons
++ import com.example.civicalertoriginal.R
++ 
++ import java.util.regex.Pattern
++@@ -130,10 +129,13 @@
++ 
++             Spacer(modifier = Modifier.size(18.dp))
++ 
++-            SignUpBottomButtons(name = "Sign in",)
++-
++-            {Toast.makeText(context,"Sign in Successful",Toast.LENGTH_SHORT).show()}
++-
+++            SignUpBottomButtons(
+++                name = "Sign in",
+++                onClick = {
+++                    Toast.makeText(context, "Sign in Successful", Toast.LENGTH_SHORT).show()
+++                    navController.navigate("Dashboard")
+++                }
+++            )
++         }
++     }
++ }
++Index: app/src/main/java/com/example/Civicalert/Components/Navigation.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Components/Navigation.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
++rename from app/src/main/java/com/example/Civicalert/Components/Navigation.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt
++--- a/app/src/main/java/com/example/Civicalert/Components/Navigation.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Navigation.kt	
++@@ -15,7 +15,7 @@
++ @Composable
++ fun Navigation (){
++     val navController = rememberNavController()
++-    NavHost(navController = navController, startDestination = "userProfile") {
+++    NavHost(navController = navController, startDestination = "Login") {
++         composable("registration"){
++             Registration(navController)
++         }
++Index: app/src/main/java/com/example/Civicalert/Screens/Registration.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Screens/Registration.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Registration.kt
++rename from app/src/main/java/com/example/Civicalert/Screens/Registration.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Screens/Registration.kt
++--- a/app/src/main/java/com/example/Civicalert/Screens/Registration.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Registration.kt	
++@@ -1,4 +1,4 @@
++-package com.example.Civicalert.Screens
+++package com.example.civicalertoriginal.Screens
++ 
++ import android.util.Patterns
++ import androidx.compose.foundation.layout.*
++@@ -15,7 +15,13 @@
++ import androidx.compose.ui.unit.sp
++ import androidx.navigation.NavController
++ import androidx.navigation.compose.rememberNavController
++-import com.example.Civicalert.Components.*
+++import com.example.civicalertoriginal.Components.EmailTextFields
+++import com.example.civicalertoriginal.Components.InstructionText
+++import com.example.civicalertoriginal.Components.LogBottomButtons
+++import com.example.civicalertoriginal.Components.NumberTextFields
+++import com.example.civicalertoriginal.Components.PasswordTextFields
+++import com.example.civicalertoriginal.Components.SignUpText
+++import com.example.civicalertoriginal.Components.TextFields
++ import com.google.firebase.database.ktx.database
++ import com.google.firebase.ktx.Firebase
++ 
++Index: app/src/main/java/com/example/Civicalert/Screens/ResetPassword.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Screens/ResetPassword.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/ResetPassword.kt
++rename from app/src/main/java/com/example/Civicalert/Screens/ResetPassword.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Screens/ResetPassword.kt
++--- a/app/src/main/java/com/example/Civicalert/Screens/ResetPassword.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/ResetPassword.kt	
++@@ -1,4 +1,4 @@
++-package com.example.Civicalert.Screens
+++package com.example.civicalertoriginal.Screens
++ 
++ import android.widget.Toast
++ import androidx.compose.foundation.layout.Arrangement
++@@ -21,10 +21,7 @@
++ import androidx.compose.ui.unit.dp
++ import androidx.navigation.NavController
++ import androidx.navigation.compose.rememberNavController
++-import com.example.Civicalert.Components.BottomButtons
++-import com.example.Civicalert.Components.EmailTextFields
++-import com.example.Civicalert.Components.InstructionText
++-import com.example.Civicalert.Components.LogAndForgotHeader
+++import com.example.civicalertoriginal.Components.*
++ import java.util.regex.Pattern
++ 
++ @Composable
++Index: app/src/main/java/com/example/Civicalert/MainActivity.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/MainActivity.kt b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
++rename from app/src/main/java/com/example/Civicalert/MainActivity.kt
++rename to app/src/main/java/com/example/civicalertoriginal/MainActivity.kt
++--- a/app/src/main/java/com/example/Civicalert/MainActivity.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/MainActivity.kt	
++@@ -1,10 +1,10 @@
++-package com.example.Civicalert
+++package com.example.civicalertoriginal
++ 
++ import android.os.Bundle
++ import androidx.activity.ComponentActivity
++ import androidx.activity.compose.setContent
++-import com.example.Civicalert.Components.Navigation
++-import com.example.Civicalert.ui.theme.CivicAlertOriginalTheme
+++import com.example.civicalertoriginal.Components.*
+++import com.example.civicalertoriginal.ui.theme.CivicAlertOriginalTheme
++ import com.google.firebase.FirebaseApp
++ 
++ class MainActivity : ComponentActivity() {
++Index: app/src/main/java/com/example/Civicalert/ui/theme/Type.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/ui/theme/Type.kt b/app/src/main/java/com/example/civicalertoriginal/ui/theme/Type.kt
++rename from app/src/main/java/com/example/Civicalert/ui/theme/Type.kt
++rename to app/src/main/java/com/example/civicalertoriginal/ui/theme/Type.kt
++--- a/app/src/main/java/com/example/Civicalert/ui/theme/Type.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/ui/theme/Type.kt	
++@@ -1,4 +1,4 @@
++-package com.example.Civicalert.ui.theme
+++package com.example.civicalertoriginal.ui.theme
++ 
++ import androidx.compose.material3.Typography
++ import androidx.compose.ui.text.TextStyle
++Index: app/src/main/java/com/example/Civicalert/ui/theme/Color.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/ui/theme/Color.kt b/app/src/main/java/com/example/civicalertoriginal/ui/theme/Color.kt
++rename from app/src/main/java/com/example/Civicalert/ui/theme/Color.kt
++rename to app/src/main/java/com/example/civicalertoriginal/ui/theme/Color.kt
++--- a/app/src/main/java/com/example/Civicalert/ui/theme/Color.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/ui/theme/Color.kt	
++@@ -1,4 +1,4 @@
++-package com.example.Civicalert.ui.theme
+++package com.example.civicalertoriginal.ui.theme
++ 
++ import androidx.compose.ui.graphics.Color
++ 
++Index: app/src/main/java/com/example/Civicalert/Screens/MakeReports.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Screens/MakeReports.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt
++rename from app/src/main/java/com/example/Civicalert/Screens/MakeReports.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt
++--- a/app/src/main/java/com/example/Civicalert/Screens/MakeReports.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt	
++@@ -13,12 +13,12 @@
++ import androidx.compose.ui.unit.sp
++ import androidx.navigation.NavController
++ import androidx.navigation.compose.rememberNavController
++-import com.example.Civicalert.Components.BottomButtons
++-import com.example.Civicalert.Components.DescriptionTextFields
++-import com.example.Civicalert.Components.ExposedDropdownMenuBox
++-import com.example.Civicalert.Components.LocationTextFields
++-import com.example.Civicalert.Components.PictureTextFields
++-import com.example.Civicalert.Components.ReportDescriptionText
+++import com.example.civicalertoriginal.Components.BottomButtons
+++import com.example.civicalertoriginal.Components.DescriptionTextFields
+++import com.example.civicalertoriginal.Components.ExposedDropdownMenuBox
+++import com.example.civicalertoriginal.Components.LocationTextFields
+++import com.example.civicalertoriginal.Components.PictureTextFields
+++import com.example.civicalertoriginal.Components.ReportDescriptionText
++ import com.google.firebase.database.ktx.database
++ import com.google.firebase.ktx.Firebase
++ 
++Index: app/src/main/java/com/example/Civicalert/Components/Components.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
++rename from app/src/main/java/com/example/Civicalert/Components/Components.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
++--- a/app/src/main/java/com/example/Civicalert/Components/Components.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	
++@@ -11,6 +11,7 @@
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++ import androidx.compose.foundation.layout.Spacer
+++import androidx.compose.foundation.layout.fillMaxSize
++ import androidx.compose.foundation.layout.fillMaxWidth
++ import androidx.compose.foundation.layout.height
++ import androidx.compose.foundation.layout.padding
++@@ -25,6 +26,8 @@
++ import androidx.compose.material.icons.filled.Person
++ import androidx.compose.material3.Button
++ import androidx.compose.material3.ButtonDefaults
+++import androidx.compose.material3.Card
+++import androidx.compose.material3.CardDefaults
++ import androidx.compose.material3.Checkbox
++ import androidx.compose.material3.DropdownMenuItem
++ import androidx.compose.material3.ExperimentalMaterial3Api
++@@ -368,6 +371,36 @@
++             color = Color.Black)
++     }
++ }
+++@Composable
+++fun Logo(){
+++    Image(painter = painterResource(id = R.drawable.logo), contentDescription ="" )
+++}
+++@Composable
+++fun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {
+++    Card(
+++        modifier = Modifier
+++            .size(160.dp)
+++            .clickable(onClick = onClick),
+++        colors = CardDefaults.cardColors(containerColor = Color.White), // Set the background color to white
+++        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp) // Set elevation to add shadow
+++    ) {
+++        Column(
+++            modifier = Modifier
+++                .fillMaxSize()
+++                .padding(8.dp),
+++            verticalArrangement = Arrangement.Center,
+++            horizontalAlignment = Alignment.CenterHorizontally
+++        ) {
+++            Image(
+++                painter = painterResource(id = iconRes),
+++                contentDescription = "",
+++                modifier = Modifier.size(40.dp)
+++            )
+++            Text(text = label)
+++        }
+++    }
+++}
+++
++ @Composable
++ fun ProfileText(description: String , value: String) {
++     var textFieldVisible by remember { mutableStateOf(false) }
++Index: app/src/main/java/com/example/Civicalert/ui/theme/Theme.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/Civicalert/ui/theme/Theme.kt b/app/src/main/java/com/example/civicalertoriginal/ui/theme/Theme.kt
++rename from app/src/main/java/com/example/Civicalert/ui/theme/Theme.kt
++rename to app/src/main/java/com/example/civicalertoriginal/ui/theme/Theme.kt
++--- a/app/src/main/java/com/example/Civicalert/ui/theme/Theme.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/ui/theme/Theme.kt	
++@@ -1,4 +1,4 @@
++-package com.example.Civicalert.ui.theme
+++package com.example.civicalertoriginal.ui.theme
++ 
++ import android.os.Build
++ import androidx.compose.foundation.isSystemInDarkTheme
++diff --git a/app/src/main/java/com/example/Civicalert/Screens/UpdateProfile.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
++rename from app/src/main/java/com/example/Civicalert/Screens/UpdateProfile.kt
++rename to app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864084)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10__Changes_.xml	(date 1719681864084)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]" date="1719115818243" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 23/06/2024 06:10 [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864206)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_.xml	(date 1719681864206)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]" date="1719435013923" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/26/2024 10:50 PM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679765)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM_[Changes]/shelved.patch	(date 1719524679765)
+@@ -0,0 +1,17 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable {\r\n                                navController.navigate(\"userProfile\")\r\n                            }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.info, label = \"Report Incident\") {\r\n                        // logic to take you to report incident page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.clipboard, label = \"View Reports\") {\r\n                        // logic to take you to reported incidents page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth(),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.headphones, label = \"Help & Support\") {\r\n                        // logic to take you to help page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.emergency_contacts, label = \"Emergency Contacts\") {\r\n                        // logic to take you to emergency contacts page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier.height(20.dp)\r\n                ) {\r\n                    // Placeholder for spacing\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun DashboardPreview() {\r\n    val navController = rememberNavController()\r\n    Dashboard(navController)\r\n}
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(revision 8946f0f0a30c567da742075852e65bdb1f719b2a)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	(date 1719470183457)
++@@ -1,5 +1,6 @@
++ package com.example.civicalertoriginal.Screens
++ 
+++import android.os.Build.VERSION_CODES.R
++ import androidx.compose.foundation.Image
++ import androidx.compose.foundation.clickable
++ import androidx.compose.foundation.layout.Arrangement
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679774)
++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM_[Changes]/shelved.patch	(date 1719524679774)
+@@ -0,0 +1,19 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable { }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.info, label = \"Report Incident\") {\r\n                        // logic to take you to report incident page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.clipboard, label = \"View Reports\") {\r\n                        // logic to take you to reported incidents page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth(),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(iconRes = R.drawable.headphones, label = \"Help & Support\") {\r\n                        // logic to take you to help page\r\n                    }\r\n                    CardButton(iconRes = R.drawable.emergency_contacts, label = \"Emergency Contacts\") {\r\n                        // logic to take you to emergency contacts page\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier.height(20.dp)\r\n                ) {\r\n                    // Placeholder for spacing\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun DashboardPreview() {\r\n    val navController = rememberNavController()\r\n    Dashboard(navController)\r\n}\r\n
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(revision 29e21a0dea470f01c5297f0fc0d8b85dcdf80ade)
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719472821539)
++@@ -50,7 +50,7 @@
++                     modifier = Modifier
++                         .height(80.dp)
++                         .fillMaxWidth()
++-                ) {
+++                ){
++                     Logo()
++                     Image(
++                         painter = painterResource(id = R.drawable.profie),
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864262)
++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM__Changes_.xml	(date 1719681864262)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM_[Changes]" date="1719472911236" recycled="true" deleted="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_27_2024_9_21_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Update at 6/27/2024 9:21 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1719524679749)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]/shelved.patch	(date 1719524679749)
+@@ -0,0 +1,540 @@
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material.icons.outlined.Info\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\n\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun DashBoard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(topBar = {\r\n            TopAppBar(title = {\r\n                Row(\r\n                    verticalAlignment = Alignment.Top,\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier.fillMaxWidth()) {\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.logo), contentDescription = \"\",\r\n                         modifier = Modifier.size(100.dp)\r\n                    )\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.AccountCircle, contentDescription = \"\",\r\n                        modifier = Modifier.size(100.dp)\r\n                    )\r\n                }\r\n            })\r\n        }, bottomBar = {\r\n           Row (verticalAlignment = Alignment.Bottom,\r\n               horizontalArrangement = Arrangement.SpaceAround){\r\n               Icon(imageVector = Icons.Filled.Home, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Outlined.Info, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n               Spacer(modifier = Modifier.size(140.dp))\r\n               Icon(imageVector = Icons.Rounded.Person, contentDescription = \"\", modifier = Modifier.size(50.dp))\r\n           }\r\n        }, content = { innerPadding ->\r\n            Column {\r\n\r\n            }\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/DashBoard.kt	
++@@ -1,73 +1,150 @@
++ package com.example.civicalertoriginal.Screens
++ 
++-import android.annotation.SuppressLint
++ import androidx.compose.foundation.Image
+++import androidx.compose.foundation.clickable
++ import androidx.compose.foundation.layout.Arrangement
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++-import androidx.compose.foundation.layout.Spacer
+++import androidx.compose.foundation.layout.fillMaxHeight
+++import androidx.compose.foundation.layout.fillMaxSize
++ import androidx.compose.foundation.layout.fillMaxWidth
+++import androidx.compose.foundation.layout.height
+++import androidx.compose.foundation.layout.padding
++ import androidx.compose.foundation.layout.size
++-import androidx.compose.material.icons.Icons
++-import androidx.compose.material.icons.filled.Home
++-import androidx.compose.material.icons.materialIcon
++-import androidx.compose.material.icons.outlined.Info
++-import androidx.compose.material.icons.rounded.AccountCircle
++-import androidx.compose.material.icons.rounded.Person
+++import androidx.compose.foundation.lazy.LazyColumn
+++import androidx.compose.foundation.lazy.items
+++import androidx.compose.material3.Card
+++import androidx.compose.material3.CardDefaults
++ import androidx.compose.material3.ExperimentalMaterial3Api
++-import androidx.compose.material3.Icon
++-import androidx.compose.material3.Scaffold
++ import androidx.compose.material3.Surface
++-import androidx.compose.material3.TopAppBar
+++import androidx.compose.material3.Text
++ import androidx.compose.runtime.Composable
++ import androidx.compose.ui.Alignment
++ import androidx.compose.ui.Modifier
++ import androidx.compose.ui.graphics.Color
++ import androidx.compose.ui.res.painterResource
+++import androidx.compose.ui.text.font.FontWeight
+++import androidx.compose.ui.tooling.preview.Preview
++ import androidx.compose.ui.unit.dp
+++import androidx.compose.ui.unit.sp
++ import androidx.navigation.NavController
++-
+++import androidx.navigation.compose.rememberNavController
+++import com.example.civicalertoriginal.Components.CardButton
+++import com.example.civicalertoriginal.Components.Logo
++ import com.example.civicalertoriginal.R
++ 
++-
++-
++-@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
++ @OptIn(ExperimentalMaterial3Api::class)
++ @Composable
++-fun DashBoard(navController: NavController) {
+++fun Dashboard(navController: NavController) {
++     Surface(color = Color.White) {
++-        Scaffold(topBar = {
++-            TopAppBar(title = {
+++        LazyColumn(
+++            modifier = Modifier
+++                .fillMaxSize()
+++                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),
+++            verticalArrangement = Arrangement.spacedBy(18.dp),
+++            horizontalAlignment = Alignment.CenterHorizontally
+++        ) {
+++            item {
++                 Row(
++-                    verticalAlignment = Alignment.Top,
++                     horizontalArrangement = Arrangement.SpaceBetween,
++-                    modifier = Modifier.fillMaxWidth()) {
+++                    modifier = Modifier
+++                        .height(80.dp)
+++                        .fillMaxWidth()
+++                ) {
+++                    Logo()
++                     Image(
++-                        painter = painterResource(id = R.drawable.logo), contentDescription = "",
++-                         modifier = Modifier.size(100.dp)
++-                    )
++-                    Icon(
++-                        imageVector = Icons.Rounded.AccountCircle, contentDescription = "",
++-                        modifier = Modifier.size(100.dp)
++-                    )
+++                        painter = painterResource(id = R.drawable.profie),
+++                        contentDescription = "",
+++                        modifier = Modifier
+++                            .size(50.dp, 70.dp)
+++                            .clickable { }
+++                    )
+++                }
+++            }
+++
+++            item {
+++                Column(
+++                    modifier = Modifier.height(300.dp)
+++                ) {
+++                    Card(
+++                        modifier = Modifier
+++                            .fillMaxWidth()
+++                            .fillMaxHeight(),
+++                        colors = CardDefaults.cardColors(containerColor = Color.White),
+++                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)
+++                    ) {
+++                        Column(
+++                            modifier = Modifier
+++                                .padding(16.dp)
+++                        ) {
+++                            Text(
+++                                text = "Recent report",
+++                                fontWeight = FontWeight.Bold,
+++                                fontSize = 20.sp
+++                            )
+++                            Image(
+++                                painter = painterResource(id = R.drawable.photo),
+++                                contentDescription = "Picture of reported incident",
+++                                modifier = Modifier.height(150.dp)
+++                            )
+++                            Text(
+++                                text = "Broken Street Light",
+++                                fontWeight = FontWeight.Bold,
+++                                fontSize = 20.sp
+++                            )
+++                            Text(text = "3 Webb St, Sonheuwal Central, Mbombela")
+++                            Text(text = "14 March")
+++                            Text(text = "Streetlight")
+++                        }
+++                    }
++                 }
++-            })
++-        }, bottomBar = {
++-           Row (verticalAlignment = Alignment.Bottom,
++-               horizontalArrangement = Arrangement.SpaceAround){
++-               Icon(imageVector = Icons.Filled.Home, contentDescription = "", modifier = Modifier.size(50.dp))
++-               Spacer(modifier = Modifier.size(140.dp))
++-               Icon(imageVector = Icons.Outlined.Info, contentDescription = "", modifier = Modifier.size(50.dp))
++-               Spacer(modifier = Modifier.size(140.dp))
++-               Icon(imageVector = Icons.Rounded.Person, contentDescription = "", modifier = Modifier.size(50.dp))
++-           }
++-        }, content = { innerPadding ->
++-            Column {
+++            }
++ 
+++            item {
+++                Row(
+++                    modifier = Modifier
+++                        .fillMaxWidth()
+++                        .padding(top = 20.dp),
+++                    horizontalArrangement = Arrangement.SpaceAround
+++                ) {
+++                    CardButton(iconRes = R.drawable.info, label = "Report Incident") {
+++                        // logic to take you to report incident page
+++                    }
+++                    CardButton(iconRes = R.drawable.clipboard, label = "View Reports") {
+++                        // logic to take you to reported incidents page
+++                    }
+++                }
++             }
++-        }
++-        )
++-    }
++-}
+++
+++            item {
+++                Row(
+++                    modifier = Modifier
+++                        .fillMaxWidth(),
+++                    horizontalArrangement = Arrangement.SpaceAround
+++                ) {
+++                    CardButton(iconRes = R.drawable.headphones, label = "Help & Support") {
+++                        // logic to take you to help page
+++                    }
+++                    CardButton(iconRes = R.drawable.emergency_contacts, label = "Emergency Contacts") {
+++                        // logic to take you to emergency contacts page
+++                    }
+++                }
+++            }
++ 
+++            item {
+++                Row(
+++                    modifier = Modifier.height(20.dp)
+++                ) {
+++                    // Placeholder for spacing
+++                }
+++            }
+++        }
+++    }
+++}
++ 
+++@Preview
+++@Composable
+++fun DashboardPreview() {
+++    val navController = rememberNavController()
+++    Dashboard(navController)
+++}
++Index: app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.BorderStroke\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Face\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.AlertDialog\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.BottomButtonsMyProfile\r\nimport com.example.civicalertoriginal.Components.ProfileText\r\nimport com.google.firebase.database.core.Context\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun UpdateProfile(navController: NavController) {\r\n    var showDialog by remember { mutableStateOf(false) }\r\n    var registrationMessage by remember { mutableStateOf(\"\") }\r\n\r\n    Surface(color = Color.White) {\r\n        Scaffold(bottomBar = {\r\n            BottomAppBar {\r\n                Row {\r\n                    Column( modifier = Modifier.clickable { navController.navigate(\"Dashboard\") }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"HOME\", fontSize = 12.sp)\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column(modifier = Modifier.clickable {  }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"MAKE REPORTS\", fontSize = 12.sp)\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column( modifier = Modifier.clickable {  }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"VIEW REPORTS\", fontSize = 12.sp)\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column(modifier = Modifier.clickable {  }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"EMERGENCY CALL\", fontSize = 12.sp)\r\n                    }\r\n                }\r\n            }\r\n        }) { innerPadding ->\r\n            Column {\r\n                Spacer(modifier = Modifier.size(10.dp))\r\n                var current = LocalContext.current\r\n\r\n                Column(\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    verticalArrangement = Arrangement.Center,\r\n                    horizontalAlignment = Alignment.CenterHorizontally\r\n                ) {\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.Face, contentDescription = \"\", modifier = Modifier.size(80.dp)\r\n                    )\r\n                    Text(text = \"USER NAME\", fontSize = 25.sp)\r\n                }\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n\r\n                Column (horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .size(400.dp,350.dp),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        border = BorderStroke(2.dp, Color.LightGray),\r\n                        shape = RoundedCornerShape(15.dp),\r\n                    ) {\r\n                        Column {\r\n                            ProfileText(description = \"First Name\", value = \"User name\")\r\n                            ProfileText(description = \"Last Name\", value = \"Sirname\")\r\n                            ProfileText(description = \"Email address\", value = \"emailInForm@gmail.com\")\r\n                            ProfileText(description = \"Phone number\", value = \"+27 68801025\")\r\n                        }\r\n                    }\r\n\r\n                    Spacer(modifier = Modifier.size(50.dp))\r\n                    BottomButtonsMyProfile(name = \"UPDATE\")\r\n                    { showDialog = true }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    BottomButtonsMyProfile(name = \"Log Out\") {\r\n                        navController.navigate(\"Login\") }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (showDialog) {\r\n        ConfirmationDialog(\r\n            title = \"Confirm Update\",\r\n            message = \"Are you sure you want to update your profile?\",\r\n            onConfirm = {\r\n                registrationMessage = \"Profile updated successfully!\"\r\n                showDialog = false\r\n            },\r\n            onDismiss = {\r\n                showDialog = false\r\n            }\r\n        )\r\n    }\r\n\r\n    if (registrationMessage.isNotEmpty()) {\r\n        Toast.makeText(LocalContext.current, registrationMessage, Toast.LENGTH_LONG).show()\r\n        registrationMessage = \"\"\r\n    }\r\n}\r\n\r\n@Composable\r\nfun ConfirmationDialog(\r\n    title: String,\r\n    message: String,\r\n    onConfirm: () -> Unit,\r\n    onDismiss: () -> Unit\r\n) {\r\n    AlertDialog(\r\n        onDismissRequest = onDismiss,\r\n        title = { Text(text = title) },\r\n        text = { Text(text = message) },\r\n        confirmButton = {\r\n            Button(\r\n                onClick = onConfirm,\r\n                colors = ButtonDefaults.buttonColors(Color.Green)\r\n            ) {\r\n                Text(\"Confirm\", color = Color.Black)\r\n            }\r\n        },\r\n        dismissButton = {\r\n            Button(\r\n                onClick = onDismiss,\r\n                colors = ButtonDefaults.buttonColors(Color.Green)\r\n            ) {\r\n                Text(\"Cancel\", color = Color.Black)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun SignUpPreview() {\r\n    UpdateProfile(navController = NavController(LocalContext.current))\r\n}\r\n
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	
++@@ -1,16 +1,14 @@
++ package com.example.civicalertoriginal.Screens
++ 
++ import android.annotation.SuppressLint
++-import android.widget.Toast
++-import androidx.compose.foundation.BorderStroke
++ import androidx.compose.foundation.background
++-import androidx.compose.foundation.clickable
++ import androidx.compose.foundation.layout.Arrangement
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++ import androidx.compose.foundation.layout.Spacer
++ import androidx.compose.foundation.layout.fillMaxHeight
++ import androidx.compose.foundation.layout.fillMaxWidth
+++import androidx.compose.foundation.layout.padding
++ import androidx.compose.foundation.layout.size
++ import androidx.compose.foundation.shape.RoundedCornerShape
++ import androidx.compose.material.icons.Icons
++@@ -19,12 +17,9 @@
++ import androidx.compose.material.icons.rounded.Face
++ import androidx.compose.material.icons.rounded.Home
++ import androidx.compose.material.icons.rounded.List
++-import androidx.compose.material3.AlertDialog
++ import androidx.compose.material3.BottomAppBar
++-import androidx.compose.material3.Button
++-import androidx.compose.material3.ButtonDefaults
++ import androidx.compose.material3.Card
++-import androidx.compose.material3.CardDefaults
+++import androidx.compose.material3.CardColors
++ import androidx.compose.material3.Icon
++ import androidx.compose.material3.Scaffold
++ import androidx.compose.material3.Surface
++@@ -33,162 +28,97 @@
++ import androidx.compose.runtime.getValue
++ import androidx.compose.runtime.mutableStateOf
++ import androidx.compose.runtime.remember
++-import androidx.compose.runtime.setValue
+++
++ import androidx.compose.ui.Alignment
++ import androidx.compose.ui.Modifier
++ import androidx.compose.ui.graphics.Color
++-import androidx.compose.ui.platform.LocalContext
++ import androidx.compose.ui.tooling.preview.Preview
++ import androidx.compose.ui.unit.dp
++ import androidx.compose.ui.unit.sp
++ import androidx.navigation.NavController
++ import com.example.civicalertoriginal.Components.BottomButtonsMyProfile
++ import com.example.civicalertoriginal.Components.ProfileText
++-import com.google.firebase.database.core.Context
++ 
++ @SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
++ @Composable
++-fun UpdateProfile(navController: NavController) {
++-    var showDialog by remember { mutableStateOf(false) }
++-    var registrationMessage by remember { mutableStateOf("") }
++-
++-    Surface(color = Color.White) {
++-        Scaffold(bottomBar = {
+++fun UpdateProfile (navController: NavController){
+++    Surface( color = Color.White) {
+++        Scaffold (bottomBar = {
++             BottomAppBar {
+++
++                 Row {
++-                    Column( modifier = Modifier.clickable { navController.navigate("Dashboard") }) {
++-                        Icon(
++-                            imageVector = Icons.Rounded.Home, contentDescription = "", modifier = Modifier
++-                                .size(30.dp)
++-                                .align(Alignment.CenterHorizontally)
++-                        )
++-                        Text(text = "HOME", fontSize = 12.sp)
+++
+++                    Column (
+++                    ) {
+++                        Icon(imageVector = Icons.Rounded.Home, contentDescription = "", modifier = Modifier
+++                            .size(30.dp)
+++                            .align(Alignment.CenterHorizontally))
+++                        Text(text = "HOME")
++                     }
++                     Spacer(modifier = Modifier.size(20.dp))
++-                    Column(modifier = Modifier.clickable {  }) {
++-                        Icon(
++-                            imageVector = Icons.Rounded.Edit, contentDescription = "", modifier = Modifier
++-                                .size(30.dp)
++-                                .align(Alignment.CenterHorizontally)
++-                        )
++-                        Text(text = "MAKE REPORTS", fontSize = 12.sp)
+++                    Column (){
+++                        Icon(imageVector = Icons.Rounded.Edit, contentDescription = "", modifier = Modifier
+++                            .size(30.dp)
+++                            .align(Alignment.CenterHorizontally))
+++                        Text(text = "MAKE REPORTS")
++                     }
++                     Spacer(modifier = Modifier.size(20.dp))
++-                    Column( modifier = Modifier.clickable {  }) {
++-                        Icon(
++-                            imageVector = Icons.Rounded.List, contentDescription = "", modifier = Modifier
++-                                .size(30.dp)
++-                                .align(Alignment.CenterHorizontally)
++-                        )
++-                        Text(text = "VIEW REPORTS", fontSize = 12.sp)
+++                    Column () {
+++                        Icon(imageVector = Icons.Rounded.List, contentDescription = "", modifier = Modifier
+++                            .size(30.dp)
+++                            .align(Alignment.CenterHorizontally))
+++                        Text(text = "VIEW REPORTS")
++                     }
++                     Spacer(modifier = Modifier.size(20.dp))
++-                    Column(modifier = Modifier.clickable {  }) {
++-                        Icon(
++-                            imageVector = Icons.Rounded.Call, contentDescription = "", modifier = Modifier
++-                                .size(30.dp)
++-                                .align(Alignment.CenterHorizontally)
++-                        )
++-                        Text(text = "EMERGENCY CALL", fontSize = 12.sp)
+++                    Column () {
+++                        Icon(imageVector = Icons.Rounded.Call, contentDescription = "", modifier = Modifier
+++                            .size(30.dp)
+++                            .align(Alignment.CenterHorizontally))
+++                        Text(text = "CALL")
++                     }
+++
++                 }
++             }
++-        }) { innerPadding ->
+++        }){innerPadding ->
++             Column {
++                 Spacer(modifier = Modifier.size(10.dp))
++-                var current = LocalContext.current
++-
++-                Column(
++-                    modifier = Modifier.fillMaxWidth(),
++-                    verticalArrangement = Arrangement.Center,
++-                    horizontalAlignment = Alignment.CenterHorizontally
++-                ) {
++-                    Icon(
++-                        imageVector = Icons.Rounded.Face, contentDescription = "", modifier = Modifier.size(80.dp)
++-                    )
+++                Column ( modifier = Modifier.fillMaxWidth() ,
+++                    verticalArrangement = Arrangement.Center, horizontalAlignment = Alignment.CenterHorizontally){
+++                    Icon(imageVector = Icons.Rounded.Face, contentDescription = "", modifier = Modifier.size(80.dp
+++                    ))
++                     Text(text = "USER NAME", fontSize = 25.sp)
++                 }
++-                Spacer(modifier = Modifier.size(20.dp))
+++                val cardColor by remember {
+++                    mutableStateOf(Color.Green)
+++                }
++ 
++-                Column (horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center) {
++-                    Card(
++-                        modifier = Modifier
++-                            .size(400.dp,350.dp),
++-                        colors = CardDefaults.cardColors(containerColor = Color.White),
++-                        border = BorderStroke(2.dp, Color.LightGray),
++-                        shape = RoundedCornerShape(15.dp),
++-                    ) {
++-                        Column {
++-                            ProfileText(description = "First Name", value = "User name")
++-                            ProfileText(description = "Last Name", value = "Sirname")
++-                            ProfileText(description = "Email address", value = "emailInForm@gmail.com")
++-                            ProfileText(description = "Phone number", value = "+27 68801025")
++-                        }
++-                    }
+++                Card (  modifier = Modifier
+++                    .fillMaxWidth()
+++                    .background(cardColor) ){
+++                    Column {
+++                        ProfileText(description = "First Name", value = "User name")
+++                        Spacer(modifier = Modifier.size(10.dp))
+++                        ProfileText(description = "Last Name", value = "Sirname")
+++                        Spacer(modifier = Modifier.size(10.dp))
+++                        ProfileText(description = "Email address", value = "emailInForm@gmail.com")
+++                        Spacer(modifier = Modifier.size(10.dp))
+++                        ProfileText(description = "Phone number", value = "+27 68801025")
++ 
++-                    Spacer(modifier = Modifier.size(50.dp))
++-                    BottomButtonsMyProfile(name = "UPDATE")
++-                    { showDialog = true }
++-                    Spacer(modifier = Modifier.size(20.dp))
++-                    BottomButtonsMyProfile(name = "Log Out") {
++-                        navController.navigate("Login") }
++-                }
+++                    } }
+++
+++                Spacer(modifier = Modifier.size(20.dp))
+++                BottomButtonsMyProfile(name = "UPDATE") {}
+++                Spacer(modifier = Modifier.size(20.dp))
+++                BottomButtonsMyProfile(name = "Log Out") {}
++             }
++         }
++-    }
++ 
++-    if (showDialog) {
++-        ConfirmationDialog(
++-            title = "Confirm Update",
++-            message = "Are you sure you want to update your profile?",
++-            onConfirm = {
++-                registrationMessage = "Profile updated successfully!"
++-                showDialog = false
++-            },
++-            onDismiss = {
++-                showDialog = false
++-            }
++-        )
++-    }
++-
++-    if (registrationMessage.isNotEmpty()) {
++-        Toast.makeText(LocalContext.current, registrationMessage, Toast.LENGTH_LONG).show()
++-        registrationMessage = ""
++-    }
++-}
++-
++-@Composable
++-fun ConfirmationDialog(
++-    title: String,
++-    message: String,
++-    onConfirm: () -> Unit,
++-    onDismiss: () -> Unit
++-) {
++-    AlertDialog(
++-        onDismissRequest = onDismiss,
++-        title = { Text(text = title) },
++-        text = { Text(text = message) },
++-        confirmButton = {
++-            Button(
++-                onClick = onConfirm,
++-                colors = ButtonDefaults.buttonColors(Color.Green)
++-            ) {
++-                Text("Confirm", color = Color.Black)
++-            }
++-        },
++-        dismissButton = {
++-            Button(
++-                onClick = onDismiss,
++-                colors = ButtonDefaults.buttonColors(Color.Green)
++-            ) {
++-                Text("Cancel", color = Color.Black)
++-            }
++-        }
++-    )
+++        
+++        
+++    }
++ }
++-
++ @Preview
++ @Composable
++-fun SignUpPreview() {
++-    UpdateProfile(navController = NavController(LocalContext.current))
++-}
+++fun SignUpPreview(){
+++
+++}
++\ No newline at end of file
++Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>@file:Suppress(\"UNUSED_EXPRESSION\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.TextFieldValue\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.text.style.TextDecoration\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.window.Dialog\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun ProfileText(description: String , value: String) {\r\n    var textFieldVisible by remember { mutableStateOf(false) }\r\n    var textFieldValue by remember { mutableStateOf(TextFieldValue()) }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .padding(10.dp)\r\n            .fillMaxWidth()\r\n    ) {\r\n        // Clickable Text\r\n        Text(text = description, fontFamily = FontFamily.SansSerif, fontSize = 17.sp)\r\n        Spacer(modifier = Modifier.size(10.dp))\r\n        Text(\r\n            text = value,\r\n            modifier = Modifier.clickable {\r\n                textFieldVisible = true\r\n            },\r\n            fontSize = 25.sp,\r\n            fontFamily = FontFamily.Default,\r\n            style = MaterialTheme.typography.bodyMedium.copy(\r\n                textDecoration = TextDecoration.Underline\r\n            )\r\n        )\r\n\r\n        // Conditional Text Field\r\n        if (textFieldVisible) {\r\n            Spacer(modifier = Modifier.height(10.dp))\r\n            TextField(\r\n                value = textFieldValue,\r\n                onValueChange = { textFieldValue = it },\r\n                modifier = Modifier.fillMaxWidth()\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            Button(\r\n                onClick = {\r\n                    textFieldVisible = false\r\n                    // Perform any actions with the text field value here\r\n                },\r\n                modifier = Modifier.align(alignment = androidx.compose.ui.Alignment.End)\r\n            ) {\r\n                Text(\"Save\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    @Composable\r\n    fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {\r\n        Button(\r\n            onClick = onClick, shape = ButtonDefaults.shape,\r\n            colors = ButtonDefaults.buttonColors(Color.Red),\r\n            modifier = Modifier\r\n                .width(400.dp)\r\n        ) {\r\n            Text(\r\n                text = name, modifier = Modifier\r\n                    .size(80.dp, 30.dp)\r\n                    .padding(start = 17.dp, top = 4.dp)\r\n                    .align(Alignment.CenterVertically)\r\n                    .fillMaxWidth(),\r\n                color = Color.Black\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n
++===================================================================
++diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
++--- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	
+++++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	
++@@ -11,7 +11,6 @@
++ import androidx.compose.foundation.layout.Column
++ import androidx.compose.foundation.layout.Row
++ import androidx.compose.foundation.layout.Spacer
++-import androidx.compose.foundation.layout.fillMaxSize
++ import androidx.compose.foundation.layout.fillMaxWidth
++ import androidx.compose.foundation.layout.height
++ import androidx.compose.foundation.layout.padding
++@@ -26,7 +25,6 @@
++ import androidx.compose.material.icons.filled.Person
++ import androidx.compose.material3.Button
++ import androidx.compose.material3.ButtonDefaults
++-import androidx.compose.material3.Card
++ import androidx.compose.material3.Checkbox
++ import androidx.compose.material3.DropdownMenuItem
++ import androidx.compose.material3.ExperimentalMaterial3Api
++@@ -35,7 +33,6 @@
++ import androidx.compose.material3.IconButton
++ import androidx.compose.material3.MaterialTheme
++ import androidx.compose.material3.OutlinedTextField
++-import androidx.compose.material3.Surface
++ import androidx.compose.material3.Text
++ import androidx.compose.material3.TextField
++ import androidx.compose.runtime.Composable
++@@ -61,7 +58,6 @@
++ import androidx.compose.ui.text.style.TextDecoration
++ import androidx.compose.ui.unit.dp
++ import androidx.compose.ui.unit.sp
++-import androidx.compose.ui.window.Dialog
++ import com.example.civicalertoriginal.R
++ 
++ 
++@@ -379,7 +375,7 @@
++ 
++     Column(
++         modifier = Modifier
++-            .padding(10.dp)
+++            .padding(16.dp)
++             .fillMaxWidth()
++     ) {
++         // Clickable Text
++@@ -399,7 +395,7 @@
++ 
++         // Conditional Text Field
++         if (textFieldVisible) {
++-            Spacer(modifier = Modifier.height(10.dp))
+++            Spacer(modifier = Modifier.height(16.dp))
++             TextField(
++                 value = textFieldValue,
++                 onValueChange = { textFieldValue = it },
++@@ -425,9 +421,9 @@
++     fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {
++         Button(
++             onClick = onClick, shape = ButtonDefaults.shape,
++-            colors = ButtonDefaults.buttonColors(Color.Red),
+++            colors = ButtonDefaults.buttonColors(Color.Green),
++             modifier = Modifier
++-                .width(400.dp)
+++                .fillMaxWidth()
++         ) {
++             Text(
++                 text = name, modifier = Modifier
++@@ -442,4 +438,3 @@
++ 
++ 
++ 
++-
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864187)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM__Changes_.xml	(date 1719681864187)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]" date="1719309424319" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/25/2024 11:57 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864178)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM__Changes_.xml	(date 1719681864178)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]" date="1719305158462" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/25/2024 10:45 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864196)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM__Changes_.xml	(date 1719681864196)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]" date="1719310948895" recycled="true" deleted="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_12_22_PM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/25/2024 12:22 PM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864163)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM__Changes_.xml	(date 1719681864163)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]" date="1719133442772" recycled="true" deleted="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_23_2024_11_04_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/23/2024 11:04 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864150)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM__Changes_.xml	(date 1719681864150)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]" date="1719086995384" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/22/2024 10:09 PM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864251)
++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM__Changes_.xml	(date 1719681864251)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]" date="1719305028485" recycled="true" deleted="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_25_2024_10_43_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Update at 6/25/2024 10:43 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_1.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_1.xml
+new file mode 100644
+--- /dev/null	(date 1719681864214)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM__Changes_1.xml	(date 1719681864214)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]1" date="1719435019337" recycled="true" deleted="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2024_10_50_PM_[Changes]1/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/26/2024 10:50 PM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864170)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM__Changes_.xml	(date 1719681864170)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]" date="1719304551988" recycled="true" deleted="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_35_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/25/2024 10:35 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864226)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM__Changes_.xml	(date 1719681864226)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM_[Changes]" date="1719470240838" recycled="true" deleted="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_8_37_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/27/2024 8:37 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864156)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM__Changes_.xml	(date 1719681864156)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]" date="1719087979957" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/22/2024 10:26 PM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1719681864236)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM__Changes_.xml	(date 1719681864236)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]" date="1719472407849" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 6/27/2024 9:13 AM [Changes]" />
++</changelist>
+\ No newline at end of file
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_27_2024_9_13_AM_[Changes]1/shelved.patch
+new file mode 100644
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_09_PM_[Changes]1/shelved.patch
+new file mode 100644
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_10_45_AM_[Changes]1/shelved.patch
+new file mode 100644
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_25_2024_11_57_AM_[Changes]1/shelved.patch
+new file mode 100644
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_22_2024_10_26_PM_[Changes]1/shelved.patch
+new file mode 100644
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_06_2024_06_10_[Changes]1/shelved.patch
+new file mode 100644
Index: app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.BorderStroke\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.rememberScrollState\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.verticalScroll\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Face\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.AlertDialog\r\nimport androidx.compose.material3.BottomAppBar\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.civicalertoriginal.Components.BottomButtonsMyProfile\r\nimport com.example.civicalertoriginal.Components.ProfileText\r\nimport com.google.firebase.database.core.Context\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun UpdateProfile(navController: NavController) {\r\n    var showDialog by remember { mutableStateOf(false) }\r\n    var registrationMessage by remember { mutableStateOf(\"\") }\r\n\r\n    Surface(color = Color.White) {\r\n        Scaffold(bottomBar = {\r\n            BottomAppBar {\r\n                Row {\r\n                    Column( modifier = Modifier.clickable { navController.navigate(\"Dashboard\") }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.Home, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"HOME\", fontSize = 12.sp)\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column(modifier = Modifier.clickable { navController.navigate(\"makeReports\") }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.Edit, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"MAKE REPORTS\", fontSize = 12.sp)\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column( modifier = Modifier.clickable {  }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.List, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"VIEW REPORTS\", fontSize = 12.sp)\r\n                    }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    Column(modifier = Modifier.clickable { navController.navigate(\"emergencyContacts\") }) {\r\n                        Icon(\r\n                            imageVector = Icons.Rounded.Call, contentDescription = \"\", modifier = Modifier\r\n                                .size(30.dp)\r\n                                .align(Alignment.CenterHorizontally)\r\n                        )\r\n                        Text(text = \"EMERGENCY CALL\", fontSize = 12.sp)\r\n                    }\r\n                }\r\n            }\r\n        }) { innerPadding ->\r\n            Column {\r\n                Spacer(modifier = Modifier.size(10.dp))\r\n                var current = LocalContext.current\r\n\r\n                Column(\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    verticalArrangement = Arrangement.Center,\r\n                    horizontalAlignment = Alignment.CenterHorizontally\r\n                ) {\r\n                    Icon(\r\n                        imageVector = Icons.Rounded.Face, contentDescription = \"\", modifier = Modifier.size(80.dp)\r\n                    )\r\n                    Text(text = \"Tshepiso Makuoa\", fontSize = 25.sp)\r\n                }\r\n                Spacer(modifier = Modifier.size(20.dp))\r\n\r\n                Column (horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center) {\r\n                    val items =\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .size(400.dp,350.dp),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        border = BorderStroke(2.dp, Color.LightGray),\r\n                        shape = RoundedCornerShape(15.dp),\r\n                    ) {\r\n                       data class ProfileData(val description: String, val value: String)\r\n\r\n                        val profileItems = listOf(\r\n                            ProfileData(\"First Name\", \"Tshepiso\"),\r\n                            ProfileData(\"Last Name\", \"Makuoa\"),\r\n                            ProfileData(\"Email address\", \"userEmail@gmail.com\"),\r\n                            ProfileData(\"Phone number\", \"+27 68801025\")\r\n                        )\r\n                        LazyColumn (modifier = Modifier\r\n                            .fillMaxSize()\r\n                           /* .verticalScroll(rememberScrollState())*/){\r\n                            items(profileItems){ profileItems->\r\n                                ProfileText(description = profileItems.description, value = profileItems.value)\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    Spacer(modifier = Modifier.size(50.dp))\r\n                    BottomButtonsMyProfile(name = \"UPDATE\")\r\n                    { showDialog = true }\r\n                    Spacer(modifier = Modifier.size(20.dp))\r\n                    BottomButtonsMyProfile(name = \"Log Out\") {\r\n                        navController.navigate(\"Login\") }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (showDialog) {\r\n        ConfirmationDialog(\r\n            title = \"Confirm Update\",\r\n            message = \"Are you sure you want to update your profile?\",\r\n            onConfirm = {\r\n                registrationMessage = \"Profile updated successfully!\"\r\n                showDialog = false\r\n            },\r\n            onDismiss = {\r\n                showDialog = false\r\n            }\r\n        )\r\n    }\r\n\r\n    if (registrationMessage.isNotEmpty()) {\r\n        Toast.makeText(LocalContext.current, registrationMessage, Toast.LENGTH_LONG).show()\r\n        registrationMessage = \"\"\r\n    }\r\n}\r\n\r\n@Composable\r\nfun ConfirmationDialog(\r\n    title: String,\r\n    message: String,\r\n    onConfirm: () -> Unit,\r\n    onDismiss: () -> Unit\r\n) {\r\n    AlertDialog(\r\n        onDismissRequest = onDismiss,\r\n        title = { Text(text = title) },\r\n        text = { Text(text = message) },\r\n        confirmButton = {\r\n            Button(\r\n                onClick = onConfirm,\r\n                colors = ButtonDefaults.buttonColors(Color.Green)\r\n            ) {\r\n                Text(\"Confirm\", color = Color.Black)\r\n            }\r\n        },\r\n        dismissButton = {\r\n            Button(\r\n                onClick = onDismiss,\r\n                colors = ButtonDefaults.buttonColors(Color.Green)\r\n            ) {\r\n                Text(\"Cancel\", color = Color.Black)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun SignUpPreview() {\r\n    UpdateProfile(navController = NavController(LocalContext.current))\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt
--- a/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/UpdateProfile.kt	(date 1719860866718)
@@ -1,8 +1,6 @@
 package com.example.civicalertoriginal.Screens
 
 import android.annotation.SuppressLint
-import android.widget.Toast
-import androidx.compose.foundation.BorderStroke
 import androidx.compose.foundation.background
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.Arrangement
@@ -10,25 +8,19 @@
 import androidx.compose.foundation.layout.Row
 import androidx.compose.foundation.layout.Spacer
 import androidx.compose.foundation.layout.fillMaxHeight
-import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.padding
 import androidx.compose.foundation.layout.size
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.foundation.lazy.items
-import androidx.compose.foundation.rememberScrollState
 import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.foundation.verticalScroll
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.rounded.Call
 import androidx.compose.material.icons.rounded.Edit
 import androidx.compose.material.icons.rounded.Face
 import androidx.compose.material.icons.rounded.Home
 import androidx.compose.material.icons.rounded.List
-import androidx.compose.material3.AlertDialog
 import androidx.compose.material3.BottomAppBar
-import androidx.compose.material3.Button
-import androidx.compose.material3.ButtonDefaults
 import androidx.compose.material3.Card
+import androidx.compose.material3.CardColors
 import androidx.compose.material3.CardDefaults
 import androidx.compose.material3.Icon
 import androidx.compose.material3.Scaffold
@@ -39,173 +31,103 @@
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
 import androidx.compose.runtime.setValue
+
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import androidx.navigation.NavController
 import com.example.civicalertoriginal.Components.BottomButtonsMyProfile
 import com.example.civicalertoriginal.Components.ProfileText
-import com.google.firebase.database.core.Context
+
 
 @SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
 @Composable
-fun UpdateProfile(navController: NavController) {
-    var showDialog by remember { mutableStateOf(false) }
-    var registrationMessage by remember { mutableStateOf("") }
-
-    Surface(color = Color.White) {
-        Scaffold(bottomBar = {
+fun UpdateProfile (navController: NavController){
+    Surface( color = Color.White) {
+        Scaffold (bottomBar = {
             BottomAppBar {
-                Row {
-                    Column( modifier = Modifier.clickable { navController.navigate("Dashboard") }) {
-                        Icon(
-                            imageVector = Icons.Rounded.Home, contentDescription = "", modifier = Modifier
-                                .size(30.dp)
-                                .align(Alignment.CenterHorizontally)
-                        )
-                        Text(text = "HOME", fontSize = 12.sp)
-                    }
-                    Spacer(modifier = Modifier.size(20.dp))
-                    Column(modifier = Modifier.clickable { navController.navigate("makeReports") }) {
-                        Icon(
-                            imageVector = Icons.Rounded.Edit, contentDescription = "", modifier = Modifier
-                                .size(30.dp)
-                                .align(Alignment.CenterHorizontally)
-                        )
-                        Text(text = "MAKE REPORTS", fontSize = 12.sp)
-                    }
-                    Spacer(modifier = Modifier.size(20.dp))
-                    Column( modifier = Modifier.clickable {  }) {
-                        Icon(
-                            imageVector = Icons.Rounded.List, contentDescription = "", modifier = Modifier
-                                .size(30.dp)
-                                .align(Alignment.CenterHorizontally)
-                        )
-                        Text(text = "VIEW REPORTS", fontSize = 12.sp)
-                    }
-                    Spacer(modifier = Modifier.size(20.dp))
-                    Column(modifier = Modifier.clickable { navController.navigate("emergencyContacts") }) {
-                        Icon(
-                            imageVector = Icons.Rounded.Call, contentDescription = "", modifier = Modifier
-                                .size(30.dp)
-                                .align(Alignment.CenterHorizontally)
-                        )
-                        Text(text = "EMERGENCY CALL", fontSize = 12.sp)
-                    }
+                Row(
+                    modifier = Modifier.fillMaxWidth(),
+                    horizontalArrangement = Arrangement.SpaceAround
+                ) {
+                    BottomNavItem(
+                        icon = Icons.Rounded.Home,
+                        label = "Home",
+                        onClick = { navController.navigate("Dashboard") }
+                    )
+                    BottomNavItem(
+                        icon = Icons.Rounded.Edit,
+                        label = "Make report",
+                        onClick = { navController.navigate("makeReports") }
+                    )
+                    BottomNavItem(
+                        icon = Icons.Rounded.List,
+                        label = "View reports",
+                        onClick = { navController.navigate("Viewreports") }
+                    )
+                    BottomNavItem(
+                        icon = Icons.Rounded.Call,
+                        label = "Emergency\nContact",
+                        onClick = { navController.navigate("emergencyContacts") }
+                    )
                 }
             }
-        }) { innerPadding ->
+        }){innerPadding ->
             Column {
                 Spacer(modifier = Modifier.size(10.dp))
-                var current = LocalContext.current
-
-                Column(
-                    modifier = Modifier.fillMaxWidth(),
-                    verticalArrangement = Arrangement.Center,
-                    horizontalAlignment = Alignment.CenterHorizontally
-                ) {
-                    Icon(
-                        imageVector = Icons.Rounded.Face, contentDescription = "", modifier = Modifier.size(80.dp)
-                    )
-                    Text(text = "Tshepiso Makuoa", fontSize = 25.sp)
+                Column ( modifier = Modifier.fillMaxWidth() ,
+                    verticalArrangement = Arrangement.Center, horizontalAlignment = Alignment.CenterHorizontally){
+                    Icon(imageVector = Icons.Rounded.Face, contentDescription = "", modifier = Modifier.size(80.dp
+                    ))
+                    Text(text = "USER NAME", fontSize = 25.sp)
+                }
+                val cardColor by remember {
+                    mutableStateOf(Color.Green)
+                }
+                var name by remember {
+                    mutableStateOf("")
+                }
+                var sirname by remember {
+                    mutableStateOf("")
                 }
-                Spacer(modifier = Modifier.size(20.dp))
+                var phoneNumber by remember {
+                    mutableStateOf("")
+                }
+                var email by remember {
+                    mutableStateOf("")
+                }
 
-                Column (horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center) {
-                    val items =
-                    Card(
-                        modifier = Modifier
-                            .size(400.dp,350.dp),
-                        colors = CardDefaults.cardColors(containerColor = Color.White),
-                        border = BorderStroke(2.dp, Color.LightGray),
-                        shape = RoundedCornerShape(15.dp),
-                    ) {
-                       data class ProfileData(val description: String, val value: String)
-
-                        val profileItems = listOf(
-                            ProfileData("First Name", "Tshepiso"),
-                            ProfileData("Last Name", "Makuoa"),
-                            ProfileData("Email address", "userEmail@gmail.com"),
-                            ProfileData("Phone number", "+27 68801025")
-                        )
-                        LazyColumn (modifier = Modifier
-                            .fillMaxSize()
-                           /* .verticalScroll(rememberScrollState())*/){
-                            items(profileItems){ profileItems->
-                                ProfileText(description = profileItems.description, value = profileItems.value)
-                            }
-                        }
+                Card (   modifier = Modifier
+                    .fillMaxWidth(),
+                    colors = CardDefaults.cardColors(containerColor = Color.White),
+                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp) ){
+                    Column {
+                        ProfileText(description = "First Name", value = "User name", onSave = {updateName -> name = updateName})
+                        Spacer(modifier = Modifier.size(10.dp))
+                        ProfileText(description = "Last Name", value = "Sirname", onSave = {updateLastName -> sirname = updateLastName})
+                        Spacer(modifier = Modifier.size(10.dp))
+                        ProfileText(description = "Email address", value = "emailInForm@gmail.com", onSave = {updatePhone -> email = updatePhone})
+                        Spacer(modifier = Modifier.size(10.dp))
+                        ProfileText(description = "Phone number", value = "+27 68801025", onSave = {updatePhone -> phoneNumber = updatePhone})
 
+                    } }
 
-                    }
-
-                    Spacer(modifier = Modifier.size(50.dp))
-                    BottomButtonsMyProfile(name = "UPDATE")
-                    { showDialog = true }
-                    Spacer(modifier = Modifier.size(20.dp))
-                    BottomButtonsMyProfile(name = "Log Out") {
-                        navController.navigate("Login") }
-                }
+                Spacer(modifier = Modifier.size(20.dp))
+                BottomButtonsMyProfile(name = "UPDATE") {}
+                Spacer(modifier = Modifier.size(20.dp))
+                BottomButtonsMyProfile(name = "Log Out") {}
             }
         }
-    }
 
-    if (showDialog) {
-        ConfirmationDialog(
-            title = "Confirm Update",
-            message = "Are you sure you want to update your profile?",
-            onConfirm = {
-                registrationMessage = "Profile updated successfully!"
-                showDialog = false
-            },
-            onDismiss = {
-                showDialog = false
-            }
-        )
-    }
-
-    if (registrationMessage.isNotEmpty()) {
-        Toast.makeText(LocalContext.current, registrationMessage, Toast.LENGTH_LONG).show()
-        registrationMessage = ""
-    }
-}
-
-@Composable
-fun ConfirmationDialog(
-    title: String,
-    message: String,
-    onConfirm: () -> Unit,
-    onDismiss: () -> Unit
-) {
-    AlertDialog(
-        onDismissRequest = onDismiss,
-        title = { Text(text = title) },
-        text = { Text(text = message) },
-        confirmButton = {
-            Button(
-                onClick = onConfirm,
-                colors = ButtonDefaults.buttonColors(Color.Green)
-            ) {
-                Text("Confirm", color = Color.Black)
-            }
-        },
-        dismissButton = {
-            Button(
-                onClick = onDismiss,
-                colors = ButtonDefaults.buttonColors(Color.Green)
-            ) {
-                Text("Cancel", color = Color.Black)
-            }
-        }
-    )
+        
+        
+    }
 }
-
 @Preview
 @Composable
-fun SignUpPreview() {
-    UpdateProfile(navController = NavController(LocalContext.current))
-}
+fun SignUpPreview(){
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package civicalertoriginal.Screen\r\n\r\nimport android.widget.Space\r\nimport android.widget.Toast\r\nimport androidx.compose.animation.*\r\nimport androidx.compose.animation.core.LinearEasing\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.rememberScrollState\r\nimport androidx.compose.foundation.verticalScroll\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.ArrowBack\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.focus.focusModifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.IntOffset\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.*\r\nimport com.google.firebase.database.ktx.database\r\nimport com.google.firebase.ktx.Firebase\r\n\r\n@Composable\r\nfun MakeReports(navController: NavController) {\r\n    var isVisible by remember { mutableStateOf(false) }\r\n\r\n    LaunchedEffect(Unit) {\r\n        isVisible = true\r\n    }\r\n\r\n    Surface(color = Color.White) {\r\n        AnimatedVisibility(\r\n            visible = isVisible,\r\n            enter = slideInVertically(\r\n                initialOffsetY = { it },\r\n                animationSpec = tween(1000, easing = LinearEasing)\r\n            ),\r\n            exit = slideOutVertically(\r\n                targetOffsetY = { it },\r\n                animationSpec = tween(1000, easing = LinearEasing)\r\n            )\r\n        ) {\r\n            AnimatedMakeReports(navController){isVisible = false}\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun AnimatedMakeReports(navController: NavController, onClose:()->Unit) {\r\n    val database = Firebase.database\r\n    var location by remember { mutableStateOf(\"Enter Location\") }\r\n    var description by remember { mutableStateOf(\"Brief details of the incident\") }\r\n    var picture by remember { mutableStateOf(\"\") }\r\n    val context = LocalContext.current\r\n\r\n    Column(\r\n        verticalArrangement = Arrangement.spacedBy(30.dp),\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .padding(start = 16.dp, end = 16.dp, top = 50.dp)\r\n            .verticalScroll(rememberScrollState())\r\n    ) {\r\n        Row ( modifier = Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.Start) {\r\n\r\n            Icon(imageVector = Icons.Default.ArrowBack, contentDescription = \"\", modifier = Modifier.size(30.dp) .clickable { onClose() },\r\n                tint = Color.Red)\r\n            Spacer(modifier = Modifier.size(25.dp))\r\n            Text(\r\n                text = \"Make A Report\",\r\n                fontSize = 35.sp,\r\n                fontWeight = FontWeight.Bold,\r\n                color = Color.Black\r\n            )\r\n        }\r\n        ReportDescriptionText(\r\n            value1 = \"Incident\",\r\n            value = \"Choose Incident type\"\r\n        )\r\n        ExposedDropdownMenuBox()\r\n\r\n        ReportDescriptionText(\r\n            value1 = \"Location(Optional)\",\r\n            value = \"Share the location of the incident\"\r\n        )\r\n        LocationTextFields(value = location, onChange = { location = it }, fieldLabel = \"Location\")\r\n\r\n        ReportDescriptionText(\r\n            value1 = \"Photos*\",\r\n            value = \"Take photos of the incident you are reporting\"\r\n        )\r\n        PictureTextFields(value = picture, onChange = { picture = it }, fieldLabel = \"Take or Upload Picture\")\r\n\r\n        ReportDescriptionText(\r\n            value1 = \"Report Description*\",\r\n            value = \"Short Description of the incident\"\r\n        )\r\n        DescriptionTextFields(value = description, onChange = { description = it }, fieldLabel = \"Give a brief description of the incident\")\r\n\r\n        val report = hashMapOf(\r\n\r\n\r\n            \"Report Description\" to description,\r\n            \"Report picture\" to picture,\r\n            \"Report location\" to location\r\n        )\r\n\r\n        BottomButtons(name = \"SUBMIT REPORT\") {\r\n            Toast.makeText(\r\n                context,\r\n                \"Your report has been submitted.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun MakeReportsPreview() {\r\n    val navController = rememberNavController()\r\n    MakeReports(navController = navController)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt
--- a/app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/MakeReports.kt	(date 1719860866718)
@@ -48,7 +48,8 @@
                 animationSpec = tween(1000, easing = LinearEasing)
             )
         ) {
-            AnimatedMakeReports(navController){isVisible = false}
+            AnimatedMakeReports(navController){isVisible = false
+            navController.navigate("Dashboard")}
         }
     }
 }
Index: app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Call\r\nimport androidx.compose.material.icons.rounded.Edit\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.List\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.*\r\nimport com.example.civicalertoriginal.R\r\n\r\n@Composable\r\nfun ContactUs(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        Scaffold(\r\n            bottomBar = {\r\n                BottomAppBar {\r\n                    Row(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        horizontalArrangement = Arrangement.SpaceAround\r\n                    ) {\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.Home,\r\n                            label = \"Home\",\r\n                            onClick = { navController.navigate(\"Dashboard\") }\r\n                        )\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.Edit,\r\n                            label = \"Make report\",\r\n                            onClick = {navController.navigate(\"makeReports\")  }\r\n                        )\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.List,\r\n                            label = \"View reports\",\r\n                            onClick = { navController.navigate(\"Viewreports\") }\r\n                        )\r\n                        BottomNavItem(\r\n                            icon = Icons.Rounded.Call,\r\n                            label = \"Emergency\\n  Contact\",\r\n                            onClick = { navController.navigate(\"emergencyContacts\") }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        ) { innerPadding ->\r\n            Column(\r\n                modifier = Modifier\r\n                    .padding(innerPadding)\r\n                    .padding(16.dp),\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n            ) {\r\n                Image(\r\n                    painter = painterResource(id = R.drawable.contact),\r\n                    contentDescription = \"\",\r\n                    modifier = Modifier\r\n                        .size(120.dp)\r\n                        .offset(x = -100.dp)\r\n                )\r\n                Spacer(modifier = Modifier.height(8.dp))\r\n                Text(\r\n                    text = \"Contact Us\",\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    fontSize = 30.sp,\r\n                    fontFamily = FontFamily.Default,\r\n                    fontStyle = FontStyle.Normal,\r\n                    fontWeight = FontWeight.Bold,\r\n                    color = Color.Black\r\n                )\r\n                Spacer(modifier = Modifier.height(8.dp))\r\n                Text(\r\n                    text = \"If you have inquiries, get in touch with us. We will be more than happy to help you.\",\r\n                    fontSize = 16.sp,\r\n                    fontFamily = FontFamily.Default,\r\n                    fontStyle = FontStyle.Normal,\r\n                    fontWeight = FontWeight.Normal,\r\n                    color = Color.DarkGray\r\n                )\r\n                Spacer(modifier = Modifier.height(16.dp))\r\n                Row(\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    verticalAlignment = Alignment.CenterVertically,\r\n                    horizontalArrangement = Arrangement.SpaceEvenly\r\n                ) {\r\n                    ContactUsContactButton(value = \"Call\")\r\n                    ContactUSEmailButton(value = \"Email\")\r\n                }\r\n                Spacer(modifier = Modifier.height(20.dp))\r\n                Text(\r\n                    text = \"Social Media\",\r\n                    fontSize = 24.sp,\r\n                    fontFamily = FontFamily.Default,\r\n                    fontStyle = FontStyle.Normal,\r\n                    fontWeight = FontWeight.SemiBold,\r\n                    color = Color.Black\r\n                )\r\n                Spacer(modifier = Modifier.height(16.dp))\r\n                Column(\r\n                    modifier = Modifier.fillMaxWidth(),\r\n                    horizontalAlignment = Alignment.CenterHorizontally,\r\n                    verticalArrangement = Arrangement.spacedBy(16.dp)\r\n                ) {\r\n                    Row(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        verticalAlignment = Alignment.CenterVertically,\r\n                        horizontalArrangement = Arrangement.SpaceEvenly\r\n                    ) {\r\n                        ContactUsWhatsApp(value = \"WhatsApp\")\r\n                        ContactUsWMessanger(value = \"Facebook\")\r\n                    }\r\n                    Row(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        verticalAlignment = Alignment.CenterVertically,\r\n                        horizontalArrangement = Arrangement.SpaceEvenly\r\n                    ) {\r\n                        ContactUsInsta(value = \"Instagram\")\r\n                        ContactUsTwitter(value = \"Twitter\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun BottomNavItem(icon: ImageVector, label: String, onClick: () -> Unit) {\r\n    Column(\r\n        horizontalAlignment = Alignment.CenterHorizontally,\r\n        modifier = Modifier.clickable { onClick() }\r\n    ) {\r\n        Icon(imageVector = icon, contentDescription = label, modifier = Modifier.size(30.dp))\r\n        Text(text = label, fontSize = 15.sp)\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun ContactUsPreview() {\r\n    val navController = rememberNavController()\r\n    ContactUs(navController)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt
--- a/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/ContactUs.kt	(date 1719860866716)
@@ -44,7 +44,7 @@
                         BottomNavItem(
                             icon = Icons.Rounded.Edit,
                             label = "Make report",
-                            onClick = {navController.navigate("makeReports")  }
+                            onClick = { navController.navigate("makeReports") }
                         )
                         BottomNavItem(
                             icon = Icons.Rounded.List,
@@ -53,7 +53,7 @@
                         )
                         BottomNavItem(
                             icon = Icons.Rounded.Call,
-                            label = "Emergency\n  Contact",
+                            label = "Emergency\nContact",
                             onClick = { navController.navigate("emergencyContacts") }
                         )
                     }
Index: app/src/main/res/drawable/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:aapt=\"http://schemas.android.com/aapt\"\r\n    android:width=\"108dp\"\r\n    android:height=\"108dp\"\r\n    android:viewportWidth=\"108\"\r\n    android:viewportHeight=\"108\">\r\n    <path android:pathData=\"M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z\">\r\n        <aapt:attr name=\"android:fillColor\">\r\n            <gradient\r\n                android:endX=\"85.84757\"\r\n                android:endY=\"92.4963\"\r\n                android:startX=\"42.9492\"\r\n                android:startY=\"49.59793\"\r\n                android:type=\"linear\">\r\n                <item\r\n                    android:color=\"#44000000\"\r\n                    android:offset=\"0.0\" />\r\n                <item\r\n                    android:color=\"#00000000\"\r\n                    android:offset=\"1.0\" />\r\n            </gradient>\r\n        </aapt:attr>\r\n    </path>\r\n    <path\r\n        android:fillColor=\"#FFFFFF\"\r\n        android:fillType=\"nonZero\"\r\n        android:pathData=\"M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z\"\r\n        android:strokeWidth=\"1\"\r\n        android:strokeColor=\"#00000000\" />\r\n</vector>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_foreground.xml b/app/src/main/res/drawable/ic_launcher_foreground.xml
--- a/app/src/main/res/drawable/ic_launcher_foreground.xml	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/app/src/main/res/drawable/ic_launcher_foreground.xml	(date 1719860866719)
@@ -4,13 +4,14 @@
     android:height="108dp"
     android:viewportWidth="108"
     android:viewportHeight="108">
-    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+    <path
+        android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
         <aapt:attr name="android:fillColor">
             <gradient
-                android:endX="85.84757"
+                android:startY="49.59793"
+                android:startX="42.9492"
                 android:endY="92.4963"
-                android:startX="42.9492"
-                android:startY="49.59793"
+                android:endX="85.84757"
                 android:type="linear">
                 <item
                     android:color="#44000000"
@@ -22,9 +23,9 @@
         </aapt:attr>
     </path>
     <path
+        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
         android:fillColor="#FFFFFF"
         android:fillType="nonZero"
-        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
         android:strokeWidth="1"
-        android:strokeColor="#00000000" />
+        android:strokeColor="#00000000"/>
 </vector>
\ No newline at end of file
Index: app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.civicalertoriginal.Screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.civicalertoriginal.Components.CardButton\r\nimport com.example.civicalertoriginal.Components.Logo\r\nimport com.example.civicalertoriginal.R\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun Dashboard(navController: NavController) {\r\n    Surface(color = Color.White) {\r\n        LazyColumn(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 12.dp),\r\n            verticalArrangement = Arrangement.spacedBy(18.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            item {\r\n                Row(\r\n                    horizontalArrangement = Arrangement.SpaceBetween,\r\n                    modifier = Modifier\r\n                        .height(80.dp)\r\n                        .fillMaxWidth()\r\n                ) {\r\n                    Logo()\r\n                    Image(\r\n                        painter = painterResource(id = R.drawable.profie),\r\n                        contentDescription = \"\",\r\n                        modifier = Modifier\r\n                            .size(50.dp, 70.dp)\r\n                            .clickable { navController.navigate(\"userProfile\") }\r\n                    )\r\n                }\r\n            }\r\n\r\n            item {\r\n                Column(\r\n                    modifier = Modifier.height(300.dp)\r\n                ) {\r\n                    Card(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .fillMaxHeight(),\r\n                        colors = CardDefaults.cardColors(containerColor = Color.White),\r\n                        elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .padding(16.dp)\r\n                        ) {\r\n                            Text(\r\n                                text = \"Recent report\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Image(\r\n                                painter = painterResource(id = R.drawable.photo),\r\n                                contentDescription = \"Picture of reported incident\",\r\n                                modifier = Modifier.height(150.dp)\r\n                            )\r\n                            Text(\r\n                                text = \"Broken Street Light\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 20.sp\r\n                            )\r\n                            Text(text = \"3 Webb St, Sonheuwal Central, Mbombela\")\r\n                            Text(text = \"14 March\")\r\n                            Text(text = \"Streetlight\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            item {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(top = 20.dp),\r\n                    horizontalArrangement = Arrangement.SpaceAround\r\n                ) {\r\n                    CardButton(\r\n                        iconRes = R.drawable.info,\r\n                        label = \"Report Incident\",\r\n                        onClick = { navController.navigate(\"makeReports\") }\r\n                    )\r\n                    CardButton(\r\n                        iconRes = R.drawable.clipboard,\r\n                        label = \"View Reports\",\r\n                        onClick = { navController.navigate(\"Viewreports\") }\r\n                    )\r\n                }\r\n            }\r\n\r\n                item {\r\n                    Row(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth(),\r\n                        horizontalArrangement = Arrangement.SpaceAround\r\n                    ) {\r\n                        CardButton(\r\n                            iconRes = R.drawable.headphones,\r\n                            label = \"Help & Support\",\r\n                            onClick =  { navController.navigate(\"\") })\r\n\r\n                        CardButton(\r\n                            iconRes = R.drawable.emergency_contacts,\r\n                            label = \"Emergency\\n Contacts\",\r\n                            onClick = { navController.navigate(\"emergencyContacts\") }\r\n                        )\r\n\r\n                    }\r\n                }\r\n\r\n                item {\r\n                    Row(\r\n                        modifier = Modifier.height(20.dp)\r\n                    ) {\r\n                        // Placeholder for spacing\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Preview\r\n    @Composable\r\n    fun DashboardPreview() {\r\n        val navController = rememberNavController()\r\n        Dashboard(navController)\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt
--- a/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/Dashboard.kt	(date 1719860866716)
@@ -129,7 +129,7 @@
                         CardButton(
                             iconRes = R.drawable.headphones,
                             label = "Help & Support",
-                            onClick =  { navController.navigate("") })
+                            onClick =  { navController.navigate("helpSupport") })
 
                         CardButton(
                             iconRes = R.drawable.emergency_contacts,
Index: app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@file:Suppress(\"UNUSED_EXPRESSION\")\r\n\r\npackage com.example.civicalertoriginal.Components\r\n\r\nimport android.widget.Toast\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.offset\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.layout.wrapContentSize\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Call\r\nimport androidx.compose.material.icons.filled.Email\r\nimport androidx.compose.material.icons.filled.Info\r\nimport androidx.compose.material.icons.filled.LocationOn\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Checkbox\r\nimport androidx.compose.material3.DropdownMenuItem\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.platform.LocalUriHandler\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.text.font.FontSynthesis\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.TextFieldValue\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.text.style.TextDecoration\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.window.Dialog\r\nimport com.example.civicalertoriginal.R\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun LogAndForgotHeader(screenLabel:String) {\r\n    Column ( modifier = Modifier.fillMaxWidth(),\r\n        horizontalAlignment = Alignment.CenterHorizontally)\r\n    {\r\n        Image(painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"Picture Logo\", modifier = Modifier.size(150.dp, 150.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = screenLabel , modifier = Modifier\r\n            .align(Alignment.CenterHorizontally)\r\n            .wrapContentSize(),\r\n            style = TextStyle( color = Color.Black,\r\n                fontStyle = FontStyle.Normal,\r\n                fontSize = 20.sp)\r\n        )\r\n\r\n    }\r\n}\r\n\r\n//Text fields that accept text only\r\n@Composable\r\nfun TextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept Numbers only\r\n@Composable\r\nfun NumberTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n//Text fields that accept email only\r\n@Composable\r\nfun EmailTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun PasswordTextFields(value:String,onChange:(String)->Unit,fieldLabel:String){\r\n\r\n    var passwordVisibility by remember { mutableStateOf(false) }\r\n    val icon = if(passwordVisibility )\r\n        painterResource(id = R.drawable.eye)\r\n    else\r\n        painterResource(id = R.drawable.hidden)\r\n\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value ,\r\n            onValueChange = onChange,\r\n            supportingText = {\r\n                Text(text = \"Passwords must match\")},\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n\r\n\r\n            trailingIcon = {\r\n                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {\r\n                               Icon(painter = icon, contentDescription =\"\",\r\n                                   modifier = Modifier.size(20.dp,20.dp))\r\n                               \r\n                           }\r\n\r\n            }, visualTransformation = if (passwordVisibility) VisualTransformation.None\r\n            else PasswordVisualTransformation(),\r\n\r\n            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomButtons(name: String, onClick: () -> Unit,){\r\n    Button(onClick = onClick, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun Logo(){\r\n    Image(painter = painterResource(id = R.drawable.logo), contentDescription =\"\" )\r\n}\r\n@Composable\r\nfun CardButton(iconRes: Int, label: String, onClick: () -> Unit) {\r\n    Card(\r\n        modifier = Modifier\r\n            .size(160.dp)\r\n            .clickable(onClick = onClick),\r\n        colors = CardDefaults.cardColors(containerColor = Color.White), // Set the background color to white\r\n        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp) // Set elevation to add shadow\r\n    ) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(8.dp),\r\n            verticalArrangement = Arrangement.Center,\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            Image(\r\n                painter = painterResource(id = iconRes),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(40.dp)\r\n            )\r\n            Text(text = label)\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LogBottomButtons(name: String, onClick: () -> Unit, enabled: Boolean){\r\n    Button(onClick = onClick, enabled = enabled, shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun SignUpText(value: String){\r\n    Row ( modifier = Modifier.padding(2.dp)){\r\n        var state by remember { mutableStateOf(\"\") }\r\n        Text(text = value, modifier = Modifier\r\n        )\r\n\r\n        Checkbox(checked = false, onCheckedChange = { }, enabled = true, modifier = Modifier\r\n            .size(20.dp)\r\n            .padding(end = 16.dp, start = 12.dp)\r\n\r\n            .clip(RoundedCornerShape(50.dp))\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun InstructionText(value: String){\r\n    Text(\r\n        text = value,\r\n        style = TextStyle(\r\n            fontStyle = FontStyle.Normal,\r\n            fontSize = 15.sp,\r\n            color = Color.Black\r\n        )\r\n    )\r\n}\r\n@Composable\r\nfun LocationTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.LocationOn,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun ReportDescriptionText(value1: String, value:String){\r\n    Column {\r\n\r\n        Text(text = value1, style = TextStyle(\r\n            fontFamily = FontFamily.SansSerif,\r\n            fontSize = 20.sp, fontWeight = FontWeight.Bold,\r\n            fontSynthesis = FontSynthesis.All\r\n        )\r\n        )\r\n        Text(text = value, style = TextStyle(\r\n            fontFamily = FontFamily.Default,\r\n            fontSize = 16.sp,\r\n            fontWeight = FontWeight.Light,\r\n        )\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun PictureTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Person,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun DescriptionTextFields(value: String, onChange: (String) -> Unit, fieldLabel: String){\r\n    Column (verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally){\r\n        OutlinedTextField(value = value , onValueChange = onChange,\r\n            placeholder = { Text(text = fieldLabel, color = Color.Green)},\r\n            trailingIcon = {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .size(35.dp, 35.dp)\r\n                        .clickable { },\r\n                    imageVector = Icons.Default.Info,\r\n                    contentDescription = \"Location Icon\"\r\n                ) },\r\n            keyboardOptions = KeyboardOptions.Default,\r\n            textStyle = TextStyle(color = Color.Black ), modifier = Modifier\r\n                .height(50.dp)\r\n                .fillMaxWidth()\r\n                .background(Color.White)\r\n        )\r\n    }\r\n}\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExposedDropdownMenuBox() {\r\n    val context = LocalContext.current\r\n    val Incidents= arrayOf(\"Water\", \"Electricity\", \"Pothole\", \"Other\")\r\n    var expanded by remember { mutableStateOf(false) }\r\n    var selectedText by remember { mutableStateOf(Incidents[0]) }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n\r\n    ) {\r\n        androidx.compose.material3.ExposedDropdownMenuBox(\r\n            expanded = expanded,\r\n            onExpandedChange = {\r\n                expanded = !expanded\r\n            }\r\n        ) {\r\n            TextField(\r\n                value = selectedText,\r\n                onValueChange = {},\r\n                readOnly = true,\r\n                trailingIcon = { ExposedDropdownMenuDefaults.TrailingIcon(expanded = expanded) },\r\n                modifier = Modifier\r\n                    .menuAnchor()\r\n                    .fillMaxWidth()\r\n            )\r\n\r\n            ExposedDropdownMenu(\r\n                expanded = expanded,\r\n                onDismissRequest = { expanded = false }\r\n            ) {\r\n                Incidents.forEach { item ->\r\n                    DropdownMenuItem(\r\n                        text = { Text(text = item) },\r\n                        onClick = {\r\n                            selectedText = item\r\n                            expanded = false\r\n                            Toast.makeText(context, item, Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun SignUpBottomButtons( name:String , onClick : ()-> Unit ){\r\n    Button(\r\n        onClick = onClick,\r\n        shape = ButtonDefaults.shape,\r\n        colors = ButtonDefaults.buttonColors(Color.Green),\r\n        modifier = Modifier\r\n            .width(200.dp)\r\n    ) {\r\n        Text(text = name, modifier = Modifier\r\n            .size(80.dp, 30.dp)\r\n            .padding(start = 17.dp, top = 4.dp)\r\n            .align(Alignment.CenterVertically),\r\n            color = Color.Black)\r\n    }\r\n}\r\n@Composable\r\nfun ProfileText(description: String , value: String) {\r\n    var textFieldVisible by remember { mutableStateOf(false) }\r\n    var textFieldValue by remember { mutableStateOf(TextFieldValue()) }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .padding(10.dp)\r\n            .fillMaxWidth()\r\n    ) {\r\n        // Clickable Text\r\n        Text(text = description, fontFamily = FontFamily.SansSerif, fontSize = 17.sp)\r\n        Spacer(modifier = Modifier.size(10.dp))\r\n        Text(\r\n            text = value,\r\n            modifier = Modifier.clickable {\r\n                textFieldVisible = true\r\n            },\r\n            fontSize = 25.sp,\r\n            fontFamily = FontFamily.Default,\r\n            style = MaterialTheme.typography.bodyMedium.copy(\r\n                textDecoration = TextDecoration.Underline\r\n            )\r\n        )\r\n\r\n        // Conditional Text Field\r\n        if (textFieldVisible) {\r\n            Spacer(modifier = Modifier.height(10.dp))\r\n            TextField(\r\n                value = textFieldValue,\r\n                onValueChange = { textFieldValue = it },\r\n                modifier = Modifier.fillMaxWidth()\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            Button(\r\n                onClick = {\r\n                    textFieldVisible = false\r\n                    // Perform any actions with the text field value here\r\n                },\r\n                modifier = Modifier.align(alignment = androidx.compose.ui.Alignment.End)\r\n            ) {\r\n                Text(\"Save\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    @Composable\r\n    fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {\r\n        Button(\r\n            onClick = onClick, shape = ButtonDefaults.shape,\r\n            colors = ButtonDefaults.buttonColors(Color.Red),\r\n            modifier = Modifier\r\n                .width(400.dp)\r\n        ) {\r\n            Text(\r\n                text = name, modifier = Modifier\r\n                    .size(80.dp, 30.dp)\r\n                    .padding(start = 17.dp, top = 4.dp)\r\n                    .align(Alignment.CenterVertically)\r\n                    .fillMaxWidth(),\r\n                color = Color.Black\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun ContactUsContactButton(value: String){\r\n    Button(onClick = { /* contact logic*/ }, colors = ButtonDefaults.buttonColors(\r\n        contentColor = Color.Black, containerColor = Color.White), shape = RoundedCornerShape(15.dp),\r\n        elevation = ButtonDefaults.buttonElevation(defaultElevation = 16.dp),\r\n        modifier = Modifier\r\n            .padding(8.dp)\r\n            .size(170.dp, 50.dp)\r\n    ) {\r\n        Icon(imageVector = Icons.Default.Call, contentDescription = \"\", modifier = Modifier.size(20.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = value, fontSize = 15.sp)\r\n\r\n    }\r\n}\r\n@Composable\r\nfun ContactUSEmailButton(value: String){\r\n    Button(onClick = { /*email logic*/ }, colors = ButtonDefaults.buttonColors(\r\n        contentColor = Color.Black, containerColor = Color.White), shape = RoundedCornerShape(15.dp),\r\n        elevation = ButtonDefaults.buttonElevation(defaultElevation = 16.dp),\r\n        modifier = Modifier\r\n            .padding(8.dp)\r\n            .size(170.dp, 50.dp)\r\n    ) {\r\n        Icon(imageVector = Icons.Default.Email, contentDescription = \"\", modifier = Modifier.size(20.dp))\r\n        Spacer(modifier = Modifier.size(5.dp))\r\n        Text(text = value, fontSize = 18.sp)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n@Composable\r\nfun ContactUsWhatsApp(value: String) {\r\n    val uriHandler = LocalUriHandler.current\r\n\r\n    Column(horizontalAlignment = Alignment.CenterHorizontally,\r\n        modifier = Modifier.offset(x = -20.dp)) {\r\n        Row(verticalAlignment = Alignment.CenterVertically) {\r\n            Image(\r\n                painter = painterResource(id = R.drawable.whatsapp),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(50.dp)\r\n            )\r\n            Column {\r\n                Text(\r\n                    text = value,\r\n                    fontSize = 20.sp,\r\n                    fontWeight = FontWeight.Bold\r\n                )\r\n                Text(\r\n                    text = \"083 3456 345\",\r\n                    color = Color.Cyan,\r\n                    modifier = Modifier.clickable {\r\n                        uriHandler.openUri(\"https://wa.me/0833456345\")\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n@Composable\r\nfun ContactUsWMessanger(value: String) {\r\n    val uriHandler = LocalUriHandler.current\r\n\r\n    Column(horizontalAlignment = Alignment.CenterHorizontally) {\r\n        Row(verticalAlignment = Alignment.CenterVertically) {\r\n            Image(\r\n                painter = painterResource(id = R.drawable.messenger),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(50.dp)\r\n            )\r\n            Column {\r\n                Text(\r\n                    text = value,\r\n                    fontSize = 20.sp,\r\n                    fontWeight = FontWeight.Bold\r\n                )\r\n                Text(\r\n                    text = \"Facebook\",\r\n                    color = Color.Cyan,\r\n                    modifier = Modifier.clickable {\r\n                        uriHandler.openUri(\"https://www.messenger.com/t/facebook\")\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun ContactUsInsta(value: String) {\r\n    val uriHandler = LocalUriHandler.current\r\n\r\n    Column(horizontalAlignment = Alignment.CenterHorizontally,\r\n        modifier = Modifier.offset(x = -25.dp)) {\r\n        Row(verticalAlignment = Alignment.CenterVertically) {\r\n            Image(\r\n                painter = painterResource(id = R.drawable.instagram),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(50.dp)\r\n            )\r\n            Column {\r\n                Text(\r\n                    text = value,\r\n                    fontSize = 20.sp,\r\n                    fontWeight = FontWeight.Bold\r\n                )\r\n                Text(\r\n                    text = \"instagram\",\r\n                    color = Color.Cyan,\r\n                    modifier = Modifier.clickable {\r\n                        uriHandler.openUri(\"https://www.instagram.com/\")\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun ContactUsTwitter(value: String) {\r\n    val uriHandler = LocalUriHandler.current\r\n\r\n    Column(horizontalAlignment = Alignment.CenterHorizontally,\r\n        modifier = Modifier.offset(x = -14.dp)) {\r\n        Row(verticalAlignment = Alignment.CenterVertically) {\r\n            Image(\r\n                painter = painterResource(id = R.drawable.twitter),\r\n                contentDescription = \"\",\r\n                modifier = Modifier.size(50.dp)\r\n            )\r\n            Column {\r\n                Text(\r\n                    text = value,\r\n                    fontSize = 20.sp,\r\n                    fontWeight = FontWeight.Bold\r\n                )\r\n                Text(\r\n                    text = \"twitter\",\r\n                    color = Color.Cyan,\r\n                    modifier = Modifier.clickable {\r\n                        uriHandler.openUri(\"https://twitter.com/\")\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt
--- a/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(revision ce7459f659bde4ab97474ef3543357e81ba010de)
+++ b/app/src/main/java/com/example/civicalertoriginal/Components/Components.kt	(date 1719860866715)
@@ -158,11 +158,11 @@
 
 
             trailingIcon = {
-                           IconButton(onClick = { passwordVisibility = !passwordVisibility }) {
-                               Icon(painter = icon, contentDescription ="",
-                                   modifier = Modifier.size(20.dp,20.dp))
-                               
-                           }
+                IconButton(onClick = { passwordVisibility = !passwordVisibility }) {
+                    Icon(painter = icon, contentDescription ="",
+                        modifier = Modifier.size(20.dp,20.dp))
+
+                }
 
             }, visualTransformation = if (passwordVisibility) VisualTransformation.None
             else PasswordVisualTransformation(),
@@ -407,9 +407,9 @@
     }
 }
 @Composable
-fun ProfileText(description: String , value: String) {
+fun ProfileText(description: String , value: String, onSave:(String)-> Unit) {
     var textFieldVisible by remember { mutableStateOf(false) }
-    var textFieldValue by remember { mutableStateOf(TextFieldValue()) }
+    var textFieldValue by remember { mutableStateOf(value) }
 
     Column(
         modifier = Modifier
@@ -444,7 +444,8 @@
             Button(
                 onClick = {
                     textFieldVisible = false
-                    // Perform any actions with the text field value here
+                    onSave(textFieldValue)
+                    // logic to do when saving thee data
                 },
                 modifier = Modifier.align(alignment = androidx.compose.ui.Alignment.End)
             ) {
@@ -455,24 +456,24 @@
 }
 
 
-    @Composable
-    fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {
-        Button(
-            onClick = onClick, shape = ButtonDefaults.shape,
-            colors = ButtonDefaults.buttonColors(Color.Red),
-            modifier = Modifier
-                .width(400.dp)
-        ) {
-            Text(
-                text = name, modifier = Modifier
-                    .size(80.dp, 30.dp)
-                    .padding(start = 17.dp, top = 4.dp)
-                    .align(Alignment.CenterVertically)
-                    .fillMaxWidth(),
-                color = Color.Black
-            )
-        }
-    }
+@Composable
+fun BottomButtonsMyProfile(name: String, onClick: () -> Unit) {
+    Button(
+        onClick = onClick, shape = ButtonDefaults.shape,
+        colors = ButtonDefaults.buttonColors(Color.Red),
+        modifier = Modifier
+            .width(400.dp)
+    ) {
+        Text(
+            text = name, modifier = Modifier
+                .size(80.dp, 30.dp)
+                .padding(start = 17.dp, top = 4.dp)
+                .align(Alignment.CenterVertically)
+                .fillMaxWidth(),
+            color = Color.Black
+        )
+    }
+}
 
 
 
Index: app/src/main/java/com/example/civicalertoriginal/Screens/HelpAndSupport.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/civicalertoriginal/Screens/HelpAndSupport.kt b/app/src/main/java/com/example/civicalertoriginal/Screens/HelpAndSupport.kt
new file mode 100644
--- /dev/null	(date 1719860866717)
+++ b/app/src/main/java/com/example/civicalertoriginal/Screens/HelpAndSupport.kt	(date 1719860866717)
@@ -0,0 +1,160 @@
+package com.example.civicalertoriginal.Screens
+
+import android.annotation.SuppressLint
+import android.widget.Space
+import androidx.compose.foundation.background
+import androidx.compose.foundation.border
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxHeight
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.text.KeyboardOptions
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Search
+import androidx.compose.material.icons.rounded.Call
+import androidx.compose.material.icons.rounded.Edit
+import androidx.compose.material.icons.rounded.Home
+import androidx.compose.material.icons.rounded.List
+import androidx.compose.material3.BottomAppBar
+import androidx.compose.material3.Card
+import androidx.compose.material3.CardColors
+import androidx.compose.material3.CardDefaults
+import androidx.compose.material3.Icon
+import androidx.compose.material3.OutlinedTextField
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.Surface
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.focus.focusModifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.RectangleShape
+import androidx.compose.ui.graphics.Shape
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.text.style.TextDecoration
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.navigation.NavController
+
+@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
+@Composable
+fun HelpAndSupport(navController: NavController) {
+    Surface(color = Color.White, modifier = Modifier.fillMaxWidth()) {
+
+        Scaffold (bottomBar = {
+            BottomAppBar {
+                Row(
+                    modifier = Modifier.fillMaxWidth(),
+                    horizontalArrangement = Arrangement.SpaceAround
+                ) {
+                    BottomNavItem(
+                        icon = Icons.Rounded.Home,
+                        label = "Home",
+                        onClick = { navController.navigate("Dashboard") }
+                    )
+                    BottomNavItem(
+                        icon = Icons.Rounded.Edit,
+                        label = "Make report",
+                        onClick = { navController.navigate("makeReports") }
+                    )
+                    BottomNavItem(
+                        icon = Icons.Rounded.List,
+                        label = "View reports",
+                        onClick = { navController.navigate("Viewreports") }
+                    )
+                    BottomNavItem(
+                        icon = Icons.Rounded.Call,
+                        label = "Emergency\nContact",
+                        onClick = { navController.navigate("emergencyContacts") }
+                    )
+                }
+            }
+        }){
+            Column ( modifier = Modifier.fillMaxSize(), horizontalAlignment = Alignment.Start){
+                val searching by remember { mutableStateOf("") }
+                Spacer(modifier = Modifier.size(20.dp))
+                Text(text = "What do you need help with?", fontWeight = FontWeight.Black, fontSize = 20.sp)
+                Spacer(modifier =Modifier.size(20.dp))
+                Column ( verticalArrangement = Arrangement.Center) {
+                    OutlinedTextField(value = searching , onValueChange = {},
+                        trailingIcon = {
+                            Icon(
+                                modifier = Modifier
+                                    .size(35.dp, 35.dp)
+                                    .clickable { },
+                                imageVector = Icons.Default.Search,
+                                contentDescription = "Search"
+                            ) },
+                        keyboardOptions = KeyboardOptions.Default,
+                        textStyle = TextStyle(color = Color.Black ), modifier = Modifier
+                            .height(50.dp)
+                            .fillMaxWidth()
+                            .background(Color.White)
+                    )
+                }
+                Spacer(modifier = Modifier.size(40.dp))
+                Text(text = "FAQ", fontSize = 50.sp, fontWeight = FontWeight.Bold, fontFamily = FontFamily.Monospace)
+                Spacer(modifier = Modifier.size(15.dp))
+                Text(text = "Find frequently asked question below.", fontSize = 20.sp)
+                Spacer(modifier = Modifier.size(12.dp))
+                val cardColor by remember {
+                    mutableStateOf(Color.White)
+                }
+                Card ( modifier = Modifier
+                    .fillMaxWidth(),
+                    colors = CardDefaults.cardColors(containerColor = Color.White),
+                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)) {
+                        Row (horizontalArrangement = Arrangement.spacedBy(50.dp), modifier = Modifier.border(0.dp, color = Color.Transparent)
+                        ){
+                            Text(text = "How does incident reporting system work?" )
+                            //Spacer(modifier = Modifier.size(45.dp))
+                            Text(text = "+")
+                        }
+
+                            Spacer(modifier = Modifier.size(20.dp))
+                       // Spacer(modifier = Modifier.size(10.dp))
+                        Row (horizontalArrangement = Arrangement.spacedBy(50.dp), modifier = Modifier.border(0.dp, color = Color.LightGray)){
+                            Text(text = "How does incident reporting system work?")
+                            Text(text = "+")
+                        }
+                }
+                Spacer(modifier =Modifier.size(45.dp))
+                Text(text ="Support", fontSize = 20.sp)
+                Spacer(modifier = Modifier.size(20.dp))
+                Card ( modifier = Modifier
+                    .fillMaxWidth()
+                    .fillMaxHeight(),
+                    colors = CardDefaults.cardColors(containerColor = Color.White),
+                    elevation = CardDefaults.cardElevation(defaultElevation = 12.dp)){
+                    Text(text = "Get help with managing your Account", color = Color.Blue, textDecoration = TextDecoration.Underline)
+                    Spacer(modifier = Modifier.size(15.dp))
+                    Text(text ="Having Technical issues" , color = Color.Blue, textDecoration = TextDecoration.Underline)
+                }
+            }
+
+        }
+        }
+
+
+
+    }
+
+
+@Preview
+@Composable
+fun HelpPreview(){
+    //HelpAndSupport(navController)
+}
\ No newline at end of file
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_06_2024_23_03_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_27_06_2024_23_03_[Changes]/shelved.patch
new file mode 100644
